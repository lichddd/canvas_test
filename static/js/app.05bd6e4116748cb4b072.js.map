{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/core-js/library/fn/object/get-prototype-of.js","webpack:///./node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/core-js/library/modules/_object-dp.js","webpack:///./node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./src/config/index.js","webpack:///./node_modules/core-js/library/modules/_is-object.js","webpack:///./node_modules/core-js/library/modules/es6.object.get-prototype-of.js","webpack:///./node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./src/game/npc/magic_dm.js","webpack:///./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/library/modules/_to-primitive.js","webpack:///./src/game/runtime/background.js","webpack:///./node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/core-js/library/modules/_to-object.js","webpack:///./node_modules/core-js/library/modules/_defined.js","webpack:///./node_modules/core-js/library/modules/_fails.js","webpack:///./node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/core-js/library/modules/_object-pie.js","webpack:///./node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/core-js/library/modules/_to-iobject.js","webpack:///./node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/babel-runtime/core-js/object/assign.js","webpack:///./src/game/plugin/Math.js","webpack:///./node_modules/core-js/library/modules/_object-gpo.js","webpack:///./node_modules/core-js/library/fn/object/assign.js","webpack:///./node_modules/core-js/library/modules/_shared-key.js","webpack:///./src/main.js","webpack:///./node_modules/core-js/library/modules/_array-includes.js","webpack:///./node_modules/core-js/library/fn/object/define-properties.js","webpack:///./node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/core-js/library/modules/_export.js","webpack:///./node_modules/core-js/library/modules/_uid.js","webpack:///./node_modules/babel-runtime/core-js/object/get-prototype-of.js","webpack:///./src/game/npc/bullet_super.js","webpack:///./src/game/player/bullet.js","webpack:///./node_modules/core-js/library/modules/_cof.js","webpack:///./src/game/runtime/gameinfo.js","webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/core-js/library/modules/_object-dps.js","webpack:///./src/game/player/index.js","webpack:///./src/game/libs/ease.js","webpack:///./node_modules/babel-runtime/core-js/object/define-properties.js","webpack:///./node_modules/core-js/library/modules/_descriptors.js","webpack:///./node_modules/core-js/library/modules/_object-assign.js","webpack:///./src/game/main.js","webpack:///./src/game/npc/bullet.js","webpack:///./node_modules/core-js/library/modules/_object-gops.js","webpack:///./node_modules/core-js/library/modules/es6.object.define-properties.js","webpack:///./node_modules/core-js/library/modules/es6.object.assign.js","webpack:///./src/game/npc/beam.js","webpack:///./node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/core-js/library/modules/_to-length.js","webpack:///./node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/core-js/library/modules/_object-keys.js","webpack:///./src/game/runtime/music.js","webpack:///./src/game/npc/boss.js","webpack:///./node_modules/core-js/library/modules/_object-sap.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getPrototypeOf","core","global","store","undefined","push","version","copyright","aFunction","fn","that","length","a","b","apply","arguments","anObject","IE8_DOM_DEFINE","toPrimitive","dP","f","O","P","Attributes","e","TypeError","isObject","it","window","Math","self","Function","__g","has","toIObject","arrayIndexOf","IE_PROTO","names","result","url","toObject","$getPrototypeOf","toInteger","max","min","index","PIp2","PI","Enemy","Bullet_Super","constructor","cantiner","shoot_num","super","images","frames","ENEMY_WIDTH","ENEMY_HEIGHT","animations","play","this","ang_count","shoot","x","y","speed","num","ang","createSprite","dieing_frame","scaleX","scaleY","width","height","angel","SCALE","update","test","cos","sin","rotation","alpha","diecount","split","S","val","toString","valueOf","BG_IMG_SRCs","BackGround","createjs","Container","alphacount","spriteSheet","SpriteSheet","getArray","map","b1","b2","b3","b4","sprite","Sprite","screenWidth","screenHeight","addChild","sprite1","BACKTIME","document","is","createElement","defined","exec","cof","propertyIsEnumerable","createDesc","IObject","ceil","floor","isNaN","arr","getArrayObject","nameFunc","valueFunc","obj","ObjectProto","assign","shared","uid","main","Main","querySelector","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","$Object","T","D","defineProperties","__e","ctx","hide","$export","type","source","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","IS_WRAP","W","expProto","target","C","virtual","R","U","id","px","random","concat","SHOOT_FRAME","sprite_sheet","shoot_frame","list","deletelist","outOfScreen","innerHeight","innerWidth","visible","anime","option","die_option","isnew","shift","isdie","die","gotoAndPlay","timeFunc","dieFunc","diedFunc","filter","Bullet","regX","BULLET_WIDTH","regY","BULLET_HEIGHT","slice","GameInfo","score","Text","fps","date","currentTime","time","count","FPS","Ticker","addEventListener","updateFPS","updateScore","text","Date","getTime","getKeys","Properties","keys","Player","headurl","replace","console","log","spriteSheetPlayer","PLAYER_WIDTH","PLAYER_HEIGHT","player","mask","maskshape","speedx","speedy","bullet","touched","name_label","textAlign","initEvent","lineWidth","setAirPosAcrossFingerPosZ","checkIsFingerOnAir","disX","disY","extend","subclass","superclass","promote","prefix","subP","supP","__proto__","indexOf","array","searchElement","UID","_nextID","deprecate","fallbackMethod","msg","warn","Event","bubbles","cancelable","currentTarget","eventPhase","timeStamp","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","preventDefault","stopPropagation","stopImmediatePropagation","remove","clone","set","props","EventDispatcher","_listeners","_captureListeners","initialize","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","listener","useCapture","listeners","scope","once","data","handleEvent","evt","splice","eventObj","parent","top","captureListeners","RAF_SYNCHED","RAF","TIMEOUT","timingMode","maxDelta","paused","_addEventListener","_inited","init","_startTime","_pausedTime","_ticks","_pausedTicks","_interval","_lastTime","_times","_tickTimes","_timerId","_raf","_setInterval","interval","_setupTick","setInterval","_getInterval","getInterval","_setFPS","setFPS","_getFPS","getFPS","framerate","_getTime","reset","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","getMeasuredTickTime","ticks","ttl","times","getMeasuredFPS","runTime","getEventTime","getTicks","pauseable","_handleSynch","_tick","_handleRAF","_handleTimeout","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","elapsedTime","event","delta","unshift","pop","w","now","performance","mozNow","msNow","oNow","webkitNow","VideoBuffer","video","readyState","_video","_canvas","_videoReady","getImage","canvas","createCanvas","videoWidth","videoHeight","getContext","clearRect","drawImage","MouseEvent","stageX","stageY","nativeEvent","pointerID","primary","rawX","rawY","relatedTarget","Event_constructor","_get_localX","globalToLocal","_get_localY","_get_isTouch","localX","localY","isTouch","Matrix2D","tx","ty","setValues","DEG_TO_RAD","identity","append","a1","c1","d1","prepend","tx1","appendMatrix","matrix","prependMatrix","appendTransform","skewX","skewY","prependTransform","rotate","angle","skew","scale","translate","invert","isIdentity","equals","transformPoint","pt","decompose","sqrt","atan2","abs","copy","DisplayProps","shadow","compositeOperation","Point","offset","dx","dy","polar","len","interpolate","pt1","pt2","point","Rectangle","pad","left","bottom","right","rectangle","contains","union","rect","intersection","x1","y1","x2","y2","intersects","isEmpty","ButtonHelper","outLabel","overLabel","downLabel","hitArea","hitLabel","_isPressed","_isOver","_enabled","mouseChildren","enabled","actionsEnabled","gotoAndStop","_setEnabled","cursor","_reset","__reset","setEnabled","_getEnabled","getEnabled","label","Shadow","color","offsetX","offsetY","blur","EventDispatcher_constructor","complete","_animations","_frames","_images","_data","_loadCount","_frameHeight","_frameWidth","_numFrames","_regX","_regY","_spacing","_margin","_parseData","_getAnimations","getAnimations","getNumFrames","animation","getAnimation","getFrame","frameIndex","frame","getFrameBounds","img","src","naturalWidth","onload","_handleImageLoad","onerror","_handleImageError","Array","isArray","image","spacing","margin","_calculateFrames","anim","next","errorEvent","maxFrames","frameCount","frameWidth","frameHeight","imgLoop","imgs","imgW","imgH","naturalHeight","Graphics","command","_stroke","_strokeStyle","_oldStrokeStyle","_strokeDash","_oldStrokeDash","_strokeIgnoreScale","_fill","_instructions","_commitIndex","_activeInstructions","_dirty","_storeIndex","clear","getRGB","g","getHSL","hue","saturation","lightness","BASE_64","STROKE_CAPS_MAP","STROKE_JOINTS_MAP","_ctx","_getInstructions","_updateInstructions","getInstructions","instructions","draw","instr","drawAsPath","instrs","path","moveTo","MoveTo","lineTo","LineTo","arcTo","radius","ArcTo","arc","startAngle","endAngle","anticlockwise","Arc","quadraticCurveTo","cpx","cpy","QuadraticCurveTo","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","BezierCurveTo","h","Rect","closePath","ClosePath","beginFill","_setFill","Fill","beginLinearGradientFill","colors","ratios","x0","y0","linearGradient","beginRadialGradientFill","r0","r1","radialGradient","beginBitmapFill","repetition","bitmap","endFill","setStrokeStyle","thickness","caps","joints","miterLimit","ignoreScale","StrokeStyle","setStrokeDash","segments","StrokeDash","beginStroke","_setStroke","Stroke","beginLinearGradientStroke","beginRadialGradientStroke","beginBitmapStroke","endStroke","curveTo","drawRect","drawRoundRect","drawRoundRectComplex","radiusTL","radiusTR","radiusBR","radiusBL","RoundRect","drawCircle","Circle","drawEllipse","Ellipse","drawPolyStar","sides","pointSize","PolyStar","clean","decodePath","str","paramCount","params","base64","charAt","fi","pl","charCount","sign","unstore","mt","lt","at","bt","qt","cp","lf","rf","bf","ef","ss","sd","ls","rs","bs","es","dr","rr","rc","dc","de","dp","commit","active","commitIndex","beginCmd","ll","fill","stroke","BeginPath","beginPath","style","fillStyle","mtx","save","transform","restore","createLinearGradient","addColorStop","createRadialGradient","createPattern","strokeStyle","setTransform","lineCap","lineJoin","setLineDash","EMPTY_SEGMENTS","lineDashOffset","mTL","mTR","mBR","mBL","rTL","rTR","rBR","rBL","k","ox","oy","xe","ye","xm","ym","ps","DisplayObject","cacheCanvas","bitmapCache","mouseEnabled","tickEnabled","transformMatrix","snapToPixel","filters","_props","_rectangle","_bounds","_webGLRenderStyle","_StageGL_NONE","_MOUSE_EVENTS","suppressCrossDomainErrors","_snapToPixelEnabled","_StageGL_SPRITE","_StageGL_BITMAP","_hitTestCanvas","_hitTestContext","_getStage","_Stage","getStage","stage","cacheID","isVisible","ignoreCache","cache","updateContext","graphics","getMatrix","clip","globalAlpha","globalCompositeOperation","_applyShadow","options","BitmapCache","define","updateCache","uncache","release","getCacheDataURL","getDataURL","localToGlobal","getConcatenatedMatrix","localToLocal","getConcatenatedDisplayProps","hitTest","hit","_testHit","getBounds","getTransformedBounds","_getBounds","setBounds","_cloneProps","_updateState","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","evtObj","getImageData","ignoreTransform","_transformBounds","bounds","x_a","x_b","y_c","y_d","minX","maxX","minY","maxY","_hasMouseEventListener","evts","DisplayObject_constructor","children","tickChildren","_getNumChildren","getNumChildren","numChildren","hasContent","DisplayObject_draw","child","par","silent","_removeChildAt","addChildAt","indx","removeChild","good","removeChildAt","sort","removeAllChildren","kids","getChildAt","getChildByName","sortChildren","sortFunction","getChildIndex","swapChildrenAt","index1","index2","o1","o2","swapChildren","child1","child2","setChildIndex","getObjectUnderPoint","getObjectsUnderPoint","_getObjectsUnderPoint","recursive","_cloneChildren","DisplayObject__tick","mouse","activeListener","currentDepth","_testMask","DisplayObject_getBounds","Stage","Container_constructor","autoClear","getElementById","mouseX","mouseY","snapToPixelEnabled","mouseInBounds","tickOnUpdate","mouseMoveOutside","preventSelection","_pointerData","_pointerCount","_primaryPointerID","_mouseOverIntervalID","_nextStage","_prevStage","enableDOMEvents","_get_nextStage","_set_nextStage","nextStage","tick","toDataURL","backgroundColor","mimeType","fillRect","dataURL","putImageData","enableMouseOver","frequency","clearInterval","_testMouseOver","enable","_eventListeners","_this","_handleMouseUp","_handleMouseMove","_handleDoubleClick","_handleMouseDown","_getElementRect","getBoundingClientRect","err","offsetTop","offsetLeft","offsetWidth","offsetHeight","offX","pageXOffset","scrollLeft","clientLeft","body","offY","pageYOffset","scrollTop","clientTop","styles","getComputedStyle","currentStyle","padL","parseInt","paddingLeft","borderLeftWidth","padT","paddingTop","borderTopWidth","padR","paddingRight","borderRightWidth","padB","paddingBottom","borderBottomWidth","_getPointerData","_handlePointerMove","pageX","pageY","owner","inBounds","_updatePointerPosition","_dispatchMouseEvent","posEvtObj","_handlePointerUp","oTarget","down","_handlePointerDown","eventTarget","_mouseOverX","_mouseOverY","isEventTarget","common","oldList","_mouseOverTarget","oldTarget","pointerId","StageGL","Stage_constructor","premultiply","transparent","antialias","preserveBuffer","autoPurge","vocalDebug","_preserveBuffer","_antialias","_transparent","_premultiply","_autoPurge","_viewportWidth","_viewportHeight","_projectionMatrix","_webGLContext","_clearColor","_maxCardsPerBatch","DEFAULT_MAX_BATCH_SIZE","_activeShader","_vertices","_vertexPositionBuffer","_uvs","_uvPositionBuffer","_indices","_textureIndexBuffer","_alphas","_alphaBuffer","_textureDictionary","_textureIDs","_batchTextures","_baseTextures","_batchTextureCount","_lastTextureInsert","_batchID","_drawID","_slotBlacklist","_isDrawing","_lastTrackedCanvas","isCacheControlled","_cacheContainer","_initializeWebGL","buildUVRects","spritesheet","onlyTarget","start","end","uvRect","isWebGLActive","WebGLRenderingContext","VERTEX_PROPERTY_COUNT","INDICIES_PER_CARD","WEBGL_MAX_INDEX_NUM","pow","UV_RECT","COVER_VERT","Float32Array","COVER_UV","COVER_UV_FLIP","REGULAR_VARYING_HEADER","REGULAR_VERTEX_HEADER","REGULAR_FRAGMENT_HEADER","REGULAR_VERTEX_BODY","REGULAR_FRAGMENT_BODY","REGULAR_FRAG_COLOR_NORMAL","REGULAR_FRAG_COLOR_PREMULTIPLY","PARTICLE_VERTEX_BODY","PARTICLE_FRAGMENT_BODY","COVER_VARYING_HEADER","COVER_VERTEX_HEADER","COVER_FRAGMENT_HEADER","COVER_VERTEX_BODY","COVER_FRAGMENT_BODY","_get_isWebGL","_set_autoPurge","_get_autoPurge","Number","isWebGL","depth","stencil","premultipliedAlpha","preserveDrawingBuffer","gl","_fetchWebGLContext","updateSimultaneousTextureCount","getParameter","MAX_TEXTURE_IMAGE_UNITS","_maxTextureSlots","MAX_COMBINED_TEXTURE_IMAGE_UNITS","_createBuffers","_initTextures","disable","DEPTH_TEST","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","clearColor","updateViewport","_batchDraw","purgeTextures","cc","adjust","COLOR_BUFFER_BIT","Stage_clear","context","Stage_draw","cacheDraw","manager","_cacheDraw","protectTextureSlot","lock","getTargetRenderTexture","toggle","__lastRT","__rtA","__rtB","getRenderBufferTexture","_width","_height","resizeTexture","setTextureParams","releaseTexture","item","safe","foundImage","_storeID","_killTextureObject","texture","_imageData","dict","j","success","_fetchShaderProgram","viewport","_projectionMatrixFlip","getFilterShader","targetShader","_builtShader","shaderParamSetup","useProgram","VTX_SHADER_BODY","FRAG_SHADER_BODY","_name","getBaseTexture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","renderTexture","frameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","_renderTexture","_frameBuffer","isPOT","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","setClearColor","output","_getSafeTexture","error","viewportWidth","viewportHeight","shaderName","customVTX","customFRAG","targetFrag","targetVtx","vertexShader","_createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","_type","getProgramParameter","LINK_STATUS","getProgramInfoLog","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","uvPositionAttribute","samplerUniform","getUniformLocation","uniform1i","uprightUniform","uniform1f","textureIndexAttribute","alphaAttribute","samplers","samplerData","uniform1iv","pMatrixUniform","insert","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","groupSize","groupCount","vertexPositionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","vertices","bufferData","DYNAMIC_DRAW","itemSize","numItems","uvPositionBuffer","uvs","textureIndexBuffer","indices","alphaBuffer","alphas","_loadTextureImage","srcPath","Image","HTMLCanvasElement","_isCanvas","storeID","_invalid","isCanvas","_insertTextureInBatch","_updateTextureImageData","isNPOT","activeTexture","TEXTURE0","_activeIndex","errString","_w","_h","MAX_TEXTURE_SIZE","found","look","batchReason","_drawBuffers","batchCardCount","deleteFramebuffer","deleteTexture","_backupBatchTextures","_backupTextures","sceneGraph","_appendToBatchGroup","shaderBackup","blackListBackup","lastTextureSlot","wBackup","hBackup","container","_drawFilters","_drawWidth","_drawHeight","filterCount","flipY","_drawCover","_multiPass","concatMtx","concatAlpha","_glMtx","subL","subT","subR","subB","cMtx","texIndex","iMtx","useCache","currentFrame","texI","sourceRect","_uvRect","_filterOffX","_filterOffY","offV1","offV2","vertexAttribPointer","FLOAT","bufferSubData","uniformMatrix4fv","FALSE","drawArrays","TRIANGLES","Bitmap","imageOrUri","node","cloneNode","frameOrAnimation","currentAnimation","currentAnimationFrame","_animation","_currentFrame","_skipAdvance","_normalizeFrame","stop","_goto","advance","DisplayObject__cloneProps","frameDelta","animFrame","_dispatchAnimationEnd","changed","Shape","font","textBaseline","maxWidth","outline","lineHeight","_workingContext","H_OFFSETS","center","V_OFFSETS","hanging","middle","alphabetic","ideographic","col","_drawText","_prepContext","getMeasuredWidth","_getMeasuredWidth","getMeasuredLineHeight","getMeasuredHeight","getMetrics","lines","vOffset","substr","paint","maxW","hardLines","String","measureText","words","jl","wordW","_drawTextLine","strokeText","fillText","BitmapText","letterSpacing","spaceWidth","_oldProps","_oldStage","_drawAction","maxPoolSize","_spritePool","Container_draw","_updateText","Container_getBounds","Container__cloneProps","_getFrameIndex","character","toUpperCase","toLowerCase","_getFrame","_getLineHeight","_getSpaceWidth","change","spaceW","lineH","pool","childIndex","numKids","hasSpace","MovieClip","startPosition","loop","labels","inited","INDEPENDENT","autoReset","frameBounds","useTicks","timeline","Timeline","_synchOffset","_rawPosition","_bound_resolveState","_resolveState","_t","_managed","SINGLE_FRAME","SYNCHED","MovieClipPlugin","install","_getLabels","getLabels","_getCurrentLabel","currentLabel","getCurrentLabel","_getDuration","duration","getDuration","totalFrames","positionOrLabel","independent","_framerate","_updateTimeline","Container__tick","pos","resolve","rawPosition","jump","synced","tl","setPosition","_renderFirstFrame","position","tweens","tween","passive","_stepPosition","_addManagedChild","_setState","state","_off","Container__getBounds","priority","ID","Tween","_installPlugin","prop","_addPlugin","step","ratio","prev","SpriteSheetUtils","_workingCanvas","extractFrame","addFlippedFrames","mergeAlpha","_flip","v","il","__tmp","fl","sfx","al","SpriteSheetBuilder","maxHeight","padding","timeSlice","progress","_nextFrameIndex","_index","_timerID","_scale","ERR_DIMENSIONS","ERR_RUNNING","addFrame","setupFunction","setupData","nominalBounds","funct","addAnimation","addMovieClip","labelFunction","rects","baseFrameIndex","_setupMovieClipFrame","_labels","lbls","build","_startBuild","_drawNext","_endBuild","buildAsync","_run","stopAsync","dataFrames","_fillRow","_getSize","ae","size","sc","rx","ry","rh","rw","round","ts","DOMElement","htmlElement","transformOrigin","WebkitTransformOrigin","msTransformOrigin","MozTransformOrigin","OTransformOrigin","_handleDrawEnd","visibility","oldProps","oldMtx","WebkitTransform","OTransform","msTransform","MozTransform","opacity","Filter","usesContext","applyFilter","targetCtx","targetX","targetY","imageData","_applyFilter","_cacheDataURLID","_cacheDataURL","_boundRect","getFilterBounds","_options","filterBounds","surface","_updateSurface","_drawToCache","_webGLCache","useGL","stageGL","webGL","_applyFilters","BlurFilter","blurX","blurY","quality","Filter_constructor","_blurX","_blurXTable","_lastBlurX","_blurY","_blurYTable","_lastBlurY","_quality","_lastQuality","FRAG_SHADER_TEMPLATE","setQuality","getBlurX","getBlurY","setBlurX","setBlurY","getQuality","_getShader","xChange","yChange","qChange","_getTable","_updateShader","_compiledShader","_setShader","spread","E","factor","reduce","currentValue","toFixed","uniform1fv","uniform2f","MUL_TABLE","SHG_TABLE","q","radiusX","radiusY","iterations","yp","yi","yw","pr","pg","pb","pa","divx","divy","w1","h1","rxp1","ryp1","ssx","sx","ssy","sy","si","stx","mty","sty","ms","AlphaMapFilter","alphaMap","_alphaMap","_mapData","_mapTexture","TEXTURE1","_prepAlphaMap","imgData","AlphaMaskFilter","ColorFilter","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","uniform4f","ColorMatrix","brightness","contrast","setColor","DELTA_INDEX","IDENTITY_MATRIX","LENGTH","adjustColor","adjustHue","adjustContrast","adjustBrightness","adjustSaturation","_cleanValue","_multiplyMatrix","cosVal","sinVal","_fixMatrix","toArray","limit","ColorMatrixFilter","mat","colorMatrix","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","Touch","isSupported","navigator","singleTouch","allowDefault","__touch","pointers","multitouch","_IOS_enable","_IE_enable","_IOS_disable","_IE_disable","_IOS_handleEvent","touches","changedTouches","touch","identifier","_handleStart","_handleMove","_handleEnd","_IE_handleEvent","msTouchAction","touchAction","activeIDs","ids","srcElement","EaselJS","buildDate","DESCRIPTORS","gOPS","pIE","$assign","A","K","forEach","join","aLen","getSymbols","isEnum","levels","boss","select_level","defance","music","Music","innerHTML","TimerHandel","alock","dlock","wlock","slock","user_info","bg","avatarUrl","Boss","gameinfo","collisionDetection","isCollideWith","rectObj","pointObj","spX","spY","pp","br","bu","bullets","getOwnPropertySymbols","atan","ready","configurable","writable","$keys","enumBugKeys","bgmAudio","Audio","volume","playBgm","boss_num","Beam","Magic_DM","fails","KEY","exp"],"mappings":"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AAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GASluCpC,EAAWqC,UAAY,CAAC,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,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","file":"static/js/app.05bd6e4116748cb4b072.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Vtdi\");\n","require('../../modules/es6.object.get-prototype-of');\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","export default {\n  url:process.env.NODE_ENV==\"development\"?'http://localhost:8083':'http://180.76.142.237:12345',\n}\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","import Bullet_Super from './bullet_super'\n\nconst PIp2 = Math.PI / 2;\nconst SHOOT_FRAME=30\nconst SHOOT_SPEED=2\nconst SHOOT_NUM=10\n\nconst ENEMY_IMG_SRC = 'static/images/magic_dm.png'\n\nconst ENEMY_WIDTH = 48\nconst ENEMY_HEIGHT = 48\nconst SCALE = 1\nconst SCALE_TO_DIE = 2\nconst DIEING_FRAME=35\nexport default class Enemy extends Bullet_Super {\n  constructor(cantiner,shoot_num=SHOOT_NUM) {\n    super(cantiner,SHOOT_FRAME,{\n      images: [ENEMY_IMG_SRC],\n      frames:\n      [\n        [0, 0, ENEMY_WIDTH, ENEMY_HEIGHT, 0, ENEMY_WIDTH / 2, ENEMY_HEIGHT / 2],\n      ],\n      animations: {\n        play: [0, 0, 'play'],\n      }\n    });\n    this.shoot_num=shoot_num;\n    this.ang_count=0;\n  }\n  shoot(x,y,speed=SHOOT_SPEED,num=SHOOT_NUM,ang=0) {\n    num=this.shoot_num||SHOOT_NUM;\n    ang=this.ang_count%2*0.1 -0.05;\n    this.ang_count++;\n    for (let i = 0; i < num; i++) {\n      this.createSprite(\n      'play',\n      { x:x,\n        y:y,\n        dieing_frame:DIEING_FRAME,\n        scaleX:SCALE,\n        scaleY:SCALE,\n        width:ENEMY_WIDTH * SCALE,\n        height:ENEMY_HEIGHT * SCALE,\n        angel:2*i/num - 1 + 1/num +ang,\n        speed:speed,\n      },\n      {\n        scaleX:SCALE* SCALE_TO_DIE,\n        scaleY:SCALE* SCALE_TO_DIE,\n      }\n      );\n    }\n  }\n  update(test) {\n    super.update((s) => {\n      s.y += Math.cos(s.angel * PIp2) * s.speed;\n      s.x += Math.sin(s.angel * PIp2) * s.speed;\n      s.rotation=(s.rotation+2>=360)?0:s.rotation+2;\n    }, (s) => {\n      s.alpha=(DIEING_FRAME-s.diecount)/DIEING_FRAME;\n      s.scaleX = (s.scaleX+0.05);\n      s.scaleY = (s.scaleY+0.05);\n    }, (s) => {\n      s.alpha=1;\n      s.scaleX =SCALE;\n      s.scaleY = SCALE;\n    }, test);\n  }\n}\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","const screenWidth = 480\nconst screenHeight = 640\n\nconst BG_IMG_SRCs = ['static/images/background.png','static/images/background1.png','static/images/background2.png','static/images/background3.png','static/images/background4.png',]\n\nconst BG_WIDTH = 256\nconst BG_HEIGHT = 512\nconst BACKTIME= 200;\nconst BACK_CHANGE_TIME=40;\nconst BACK_ANIME_SPEED= 1/(BACKTIME+BACK_CHANGE_TIME*2);\n\nexport default class BackGround extends createjs.Container {\n  constructor() {\n    super();\n    this.alphacount=1;\n    this.spriteSheet = new createjs.SpriteSheet({\n      images: [...BG_IMG_SRCs],\n      frames: Math.getArray(5).map((l)=>{\n        return [0, 0, BG_WIDTH, BG_HEIGHT, l, 0, 0];\n      }),\n      animations: {\n        b: [0,0],\n        b1: [1,1,\"b2\",BACK_ANIME_SPEED],\n        b2: [2,2,\"b3\",BACK_ANIME_SPEED],\n        b3: [3,3,\"b4\",BACK_ANIME_SPEED],\n        b4: [4,4,\"b1\",BACK_ANIME_SPEED],\n      }\n    });\n    this.sprite = new createjs.Sprite(this.spriteSheet, \"b\");\n\n    this.sprite.y = 0;\n    this.sprite.x = 0;\n    this.sprite.scaleX = (screenWidth / BG_WIDTH);\n    this.sprite.scaleY = (screenHeight / BG_HEIGHT);\n    this.addChild(this.sprite);\n    this.sprite1 = new createjs.Sprite(this.spriteSheet, \"b1\");\n    this.sprite1.y = 0;\n    this.sprite1.x = 0;\n    this.sprite1.scaleX = (screenWidth / BG_WIDTH);\n    this.sprite1.scaleY = (screenHeight / BG_HEIGHT);\n    this.addChild(this.sprite1);\n  }\n  update() {\n    let a=(this.alphacount>BACKTIME+BACK_CHANGE_TIME)?((BACKTIME+BACK_CHANGE_TIME*2-this.alphacount)/BACK_CHANGE_TIME +0.2):(this.alphacount>BACK_CHANGE_TIME?1:this.alphacount/BACK_CHANGE_TIME +0.2);\n    this.sprite1.alpha = a;\n    this.alphacount=(this.alphacount>=BACKTIME+BACK_CHANGE_TIME*2)?1:this.alphacount+1;\n  }\n}\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","exports.f = {}.propertyIsEnumerable;\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };","Math.getArray=function(num){\n  var arr=[];\n  for (var i = 0; i < num; i++) {\n    arr.push(i);\n  }\n  return arr;\n}\nMath.getArrayObject=function(num,nameFunc,valueFunc){\n  var obj={};\n  for (var i = 0; i < num; i++) {\n    obj[nameFunc(i)]=valueFunc(i);\n  }\n  return obj;\n}\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","\n\nimport '@/css/main.css';\n\n\nimport './game/plugin/Math'\n\nimport Main from './game/main'\n\n\nwindow.main = new Main(document.querySelector('#canvas'));\n\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","require('../../modules/es6.object.define-properties');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperties(T, D) {\n  return $Object.defineProperties(T, D);\n};\n","var core = module.exports = { version: '2.6.11' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/object/get-prototype-of\"), __esModule: true };","export default class Bullet_Super {\n\n    constructor(cantiner, SHOOT_FRAME = 10,sprite_sheet) {\n        this.cantiner = cantiner;\n        this.shoot_frame = SHOOT_FRAME;\n        this.list = [];\n        this.deletelist = [];\n        this.y = 0;\n        this.x = 0;\n\n        this.spriteSheet = new createjs.SpriteSheet(sprite_sheet);\n    }\n    outOfScreen(s, test) {\n        if (test) {\n            if (s.y > window.innerHeight + 100 || s.x > window.innerWidth + 100 || s.x < -100) {\n                this.deletelist.push(s);\n                s.visible = false;\n                return false;\n            }\n        }\n        return true;\n    }\n    createSprite(anime, option, die_option) {\n        let isnew = true;\n        let sprite = this.deletelist.length > 0\n            ? (isnew = false, this.deletelist.shift())\n            : new createjs.Sprite(this.spriteSheet, anime);\n        sprite.isdie = false;\n        sprite.dieing_frame=0;\n        sprite.diecount = 0;\n        Object.assign(sprite, option);\n        sprite.die = sprite.die || (() => {\n            sprite.isdie = true;\n            Object.assign(sprite, die_option);\n        });\n        !isnew\n            ? (sprite.visible = true, sprite.gotoAndPlay(anime))\n            : this.cantiner.addChild(sprite);\n        this.list.push(sprite);\n    }\n    update(timeFunc, dieFunc, diedFunc, test) {\n        this.list = this.list.filter((s) => {\n            if (s.isdie) {\n                s.diecount++;\n                dieFunc(s);\n                if (s.diecount > (s.dieing_frame)) {\n                    diedFunc(s);\n                    this.deletelist.push(s);\n                    s.visible = false;\n                    return false;\n                }\n                return true;\n            }\n            timeFunc(s);\n            return this.outOfScreen(s, test);\n        });\n    }\n}\n","import Bullet_Super from '../npc/bullet_super'\n\nconst BULLET_IMG_SRC = 'static/images/bullet.png';\nconst BULLET_WIDTH = 62;\nconst BULLET_HEIGHT = 108;\nconst SCALE = 0.3\nconst PIp2 = Math.PI / 2;\nconst DIEING_FRAME = 10;\nexport default class Bullet extends Bullet_Super {\n    constructor(cantiner) {\n        super(cantiner, 0);\n        this.spriteSheet = new createjs.SpriteSheet({\n            images: [BULLET_IMG_SRC],\n            frames: {\n                width: BULLET_WIDTH,\n                height: BULLET_HEIGHT,\n                regX: BULLET_WIDTH / 2,\n                regY: BULLET_HEIGHT / 2\n            },\n            animations: {\n                // play: [0,0,\"play\",0.2]\n            }\n        });\n    }\n    shoot(speed, x, y, num) {\n        for (let i = 0; i < num; i++) {\n            this.createSprite(`play`, {\n                y: y - 20 + Math.floor(Math.random() * 10),\n                x: x + Math.floor(Math.random() * 40 - 20 + i-num/2),\n                dieing_frame: DIEING_FRAME,\n                scaleX: SCALE,\n                scaleY: SCALE,\n                width: BULLET_WIDTH * SCALE,\n                height: BULLET_HEIGHT * SCALE,\n                // angel: (i - num / 2) / num,\n                speed: speed\n            }, {});\n        }\n    }\n    update(test) {\n        super.update((s) => {\n            s.y -= s.speed;\n        }, (s) => {}, (s) => {}, test);\n    }\n}\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","export default class GameInfo extends createjs.Container{\n  constructor(){\n    super();\n    this.score = new createjs.Text(`打中:0 被打中:0`, \"16px  Arial\", \"#FFF\");\n    this.score.x = 10;\n    this.score.y = 10;\n    this.fps={date:0,currentTime:0,time:0,count:0,FPS:0};\n    this.addChild(this.score);\n    createjs.Ticker.addEventListener(\"tick\", ()=>{this.updateFPS()});\n  }\n  updateScore(s,f){\n    this.score.text = `打中:${s} 被打中:${f} FPS:${this.fps.FPS}`;\n  }\n  updateFPS(){\n    \n    this.fps.date = new Date();\n    this.fps.currentTime = this.fps.date.getTime();\n    if(this.fps.time!=0&&this.fps.count%40==0)\n    {\n      this.fps.FPS = Math.ceil(1000/(this.fps.currentTime -  this.fps.time));\n    }\n    this.fps.time = this.fps.currentTime;\n    this.fps.count++;\n    if (this.fps.count>999999999) {\n      this.fps.count=0;\n    }\n  }\n}\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","\nimport Bullet from './bullet'\nconst screenWidth = 480\nconst screenHeight = 640\n\n// 玩家相关常量设置\nconst PLAYER_IMG_SRC = 'static/images/hero.png'\nconst PLAYER_WIDTH = 64\nconst PLAYER_HEIGHT = 64\nconst SCALE = 1\nconst SHOOT_SPEED = 5\nconst SHOOT_NUM = 5\nexport default class Player extends createjs.Container {\n  constructor(cantiner,headurl=PLAYER_IMG_SRC,name=\"\",shoot_num=SHOOT_NUM) {\n    super();\n    this.shoot_num=shoot_num;\n    this.cantiner = this;\n    headurl=headurl?headurl.replace(/\\/[0-9]{1,3}$/,\"/64\"):PLAYER_IMG_SRC;\n    console.log(headurl);\n    this.spriteSheetPlayer = new createjs.SpriteSheet({\n      images: [headurl],\n      frames: { width: PLAYER_WIDTH, height: PLAYER_HEIGHT, regX: PLAYER_WIDTH / 2, regY: PLAYER_HEIGHT / 2 },\n      animations: {\n        // play: [0,0,\"play\",0.2]\n      }\n    });\n\n    this.player = new createjs.Sprite(this.spriteSheetPlayer, \"play\");\n\n    // this.maskshape = new createjs.Shape();\n    // this.maskshape.graphics.beginFill(\"#fff\").drawCircle(0, 0, PLAYER_WIDTH/2);\n    this.player.mask=this.maskshape;\n    this.player.y = screenHeight -  30;\n    this.player.speedx=0;\n    this.player.speedy = 0;\n    this.player.x = screenWidth / 2 ;\n    // this.maskshape.x=this.player.x;\n    // this.maskshape.y=this.player.y;\n    // this.maskshape.scaleX = SCALE;\n    // this.maskshape.scaleY = SCALE;\n\n    this.player.scaleX = SCALE;\n    this.player.scaleY = SCALE;\n    this.player.width = PLAYER_WIDTH*SCALE;\n    this.player.height = PLAYER_HEIGHT*SCALE;\n    this.cantiner.addChild(this.player);\n\n    this.bullet = new Bullet(this.cantiner);\n    // 用于在手指移动的时候标识手指是否已经在飞机上了\n    this.touched = false\n\n\n\n    this.name_label = new createjs.Text(`${name}`, \"21px  Arial\", \"#FFF\");\n    this.name_label.textAlign = \"center\";\n    this.cantiner.addChild(this.name_label);\n    // 初始化事件监听\n    this.initEvent();\n    // wx.startAccelerometer({ success:()=>{console.log('开始监听加速计')}});\n    // wx.onAccelerometerChange((res)=>{\n    //   this.player.speedx = Math.floor(res.x*100)/10;\n    //   this.player.speedy = Math.floor(-res.y * 100)/10;\n    // })\n  }\n  update(test){\n    this.player.x += this.player.speedx;\n    this.player.y += this.player.speedy;\n    // this.maskshape.x = this.player.x;\n    // this.maskshape.y = this.player.y;\n    this.name_label.x = this.player.x -this.name_label.lineWidth;\n    this.name_label.y = this.player.y - 60;\n    this.setAirPosAcrossFingerPosZ(this.player.x, this.player.y);\n    this.bullet.update(test);\n  }\n  /**\n   * 当手指触摸屏幕的时候\n   * 判断手指是否在飞机上\n   * @param {Number} x: 手指的X轴坐标\n   * @param {Number} y: 手指的Y轴坐标\n   * @return {Boolean}: 用于标识手指是否在飞机上的布尔值\n   */\n  checkIsFingerOnAir(x, y) {\n    const deviation = 30\n\n    return !!(x >= this.player.x - this.player.width / 2 - deviation\n      && y >= this.player.y - this.player.height / 2- deviation\n      && x <= this.player.x + this.player.width / 2 + deviation\n      && y <= this.player.y + this.player.height / 2 + deviation)\n  }\n\n  /**\n   * 根据手指的位置设置飞机的位置\n   * 保证手指处于飞机中间\n   * 同时限定飞机的活动范围限制在屏幕中\n   */\n  setAirPosAcrossFingerPosZ(x, y) {\n    // let disX = x - this.player.width / 2\n    // let disY = y - this.player.height / 2\n\n    let disX = x\n    let disY = y\n    if (disX < 0 + this.player.width / 2)\n      disX = this.player.width / 2\n\n    else if (disX > screenWidth - this.player.width / 2)\n      disX = screenWidth - this.player.width/2\n\n    if (disY <= 0 + this.player.height / 2)\n      disY = this.player.height / 2\n\n    else if (disY > screenHeight - this.player.height / 2)\n      disY = screenHeight - this.player.height / 2\n\n    this.player.x = disX\n    this.player.y = disY\n  }\n\n  /**\n   * 玩家响应手指的触摸事件\n   * 改变战机的位置\n   */\n  initEvent() {\n\n    // canvas.addEventListener('touchstart', ((e) => {\n    //   e.preventDefault()\n    //\n    //   let x = e.touches[0].clientX\n    //   let y = e.touches[0].clientY\n    //\n    //   //\n    //   if (this.checkIsFingerOnAir(x, y)) {\n    //     this.touched = true\n    //\n    //     this.setAirPosAcrossFingerPosZ(x, y)\n    //   }\n    //\n    // }).bind(this))\n    //\n    // canvas.addEventListener('touchmove', ((e) => {\n    //   e.preventDefault()\n    //\n    //   let x = e.touches[0].clientX\n    //   let y = e.touches[0].clientY\n    //\n    //   if (this.touched)\n    //     this.setAirPosAcrossFingerPosZ(x, y)\n    //\n    // }).bind(this))\n    //\n    // canvas.addEventListener('touchend', ((e) => {\n    //   e.preventDefault()\n    //\n    //   this.touched = false\n    // }).bind(this))\n  }\n\n  /**\n   * 玩家射击操作\n   * 射击时机由外部决定\n   */\n  shoot() {\n    this.shoot_num;\n    this.bullet.shoot(SHOOT_SPEED,this.player.x,this.player.y,this.shoot_num);\n  }\n}\n","/*!\n* EaselJS\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n\n//##############################################################################\n// extend.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Sets up the prototype chain and constructor property for a new class.\n *\n * This should be called right after creating the class constructor.\n *\n * \tfunction MySubClass() {}\n * \tcreatejs.extend(MySubClass, MySuperClass);\n * \tMySubClass.prototype.doSomething = function() { }\n *\n * \tvar foo = new MySubClass();\n * \tconsole.log(foo instanceof MySuperClass); // true\n * \tconsole.log(foo.prototype.constructor === MySubClass); // true\n *\n * @method extend\n * @param {Function} subclass The subclass.\n * @param {Function} superclass The superclass to extend.\n * @return {Function} Returns the subclass's new prototype.\n */\ncreatejs.extend = function (subclass, superclass) {\n  \"use strict\";\n\n  function o() { this.constructor = subclass; }\n  o.prototype = superclass.prototype;\n  return (subclass.prototype = new o());\n};\n\n//##############################################################################\n// promote.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\n * It is recommended to use the super class's name as the prefix.\n * An alias to the super class's constructor is always added in the format `prefix_constructor`.\n * This allows the subclass to call super class methods without using `function.call`, providing better performance.\n *\n * For example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\n * would add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\n * prototype of `MySubClass` as `MySuperClass_draw`.\n *\n * This should be called after the class's prototype is fully defined.\n *\n * \tfunction ClassA(name) {\n * \t\tthis.name = name;\n * \t}\n * \tClassA.prototype.greet = function() {\n * \t\treturn \"Hello \"+this.name;\n * \t}\n *\n * \tfunction ClassB(name, punctuation) {\n * \t\tthis.ClassA_constructor(name);\n * \t\tthis.punctuation = punctuation;\n * \t}\n * \tcreatejs.extend(ClassB, ClassA);\n * \tClassB.prototype.greet = function() {\n * \t\treturn this.ClassA_greet()+this.punctuation;\n * \t}\n * \tcreatejs.promote(ClassB, \"ClassA\");\n *\n * \tvar foo = new ClassB(\"World\", \"!?!\");\n * \tconsole.log(foo.greet()); // Hello World!?!\n *\n * @method promote\n * @param {Function} subclass The class to promote super class methods on.\n * @param {String} prefix The prefix to add to the promoted method names. Usually the name of the superclass.\n * @return {Function} Returns the subclass.\n */\ncreatejs.promote = function (subclass, prefix) {\n  \"use strict\";\n\n  var subP = subclass.prototype, supP = (Object.getPrototypeOf && Object.getPrototypeOf(subP)) || subP.__proto__;\n  if (supP) {\n    subP[(prefix += \"_\") + \"constructor\"] = supP.constructor; // constructor is not always innumerable\n    for (var n in supP) {\n      if (subP.hasOwnProperty(n) && (typeof supP[n] == \"function\")) { subP[prefix + n] = supP[n]; }\n    }\n  }\n  return subclass;\n};\n\n//##############################################################################\n// indexOf.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n * that value.  Returns -1 if value is not found.\n *\n *      var i = createjs.indexOf(myArray, myElementToFind);\n *\n * @method indexOf\n * @param {Array} array Array to search for searchElement\n * @param searchElement Element to find in array.\n * @return {Number} The first index of searchElement in array.\n */\ncreatejs.indexOf = function (array, searchElement) {\n  \"use strict\";\n\n  for (var i = 0, l = array.length; i < l; i++) {\n    if (searchElement === array[i]) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n//##############################################################################\n// UID.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Global utility for generating sequential unique ID numbers. The UID class uses a static interface (ex. <code>UID.get()</code>)\n\t * and should not be instantiated.\n\t * @class UID\n\t * @static\n\t **/\n  function UID() {\n    throw \"UID cannot be instantiated\";\n  }\n\n\n  // private static properties:\n\t/**\n\t * @property _nextID\n\t * @type Number\n\t * @protected\n\t **/\n  UID._nextID = 0;\n\n\n  // public static methods:\n\t/**\n\t * Returns the next unique id.\n\t * @method get\n\t * @return {Number} The next unique id\n\t * @static\n\t **/\n  UID.get = function () {\n    return UID._nextID++;\n  };\n\n\n  createjs.UID = UID;\n}());\n\n//##############################################################################\n// deprecate.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Wraps deprecated methods so they still be used, but throw warnings to developers.\n *\n *\tobj.deprecatedMethod = createjs.deprecate(\"Old Method Name\", obj._fallbackMethod);\n *\n * The recommended approach for deprecated properties is:\n *\n *\ttry {\n *\t\tObj\tect.defineProperties(object, {\n *\t\t\treadyOnlyProp: { get: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }) },\n *\t\t\treadWriteProp: {\n *\t\t\t\tget: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }),\n *\t\t\t\tset: createjs.deprecate(\"readOnlyProp\", function(val) { this.alternateProp = val; })\n *\t\t});\n *\t} catch (e) {}\n *\n * @method deprecate\n * @param {Function} [fallbackMethod=null] A method to call when the deprecated method is used. See the example for how\n * @param {String} [name=null] The name of the method or property to display in the console warning.\n * to deprecate properties.\n * @return {Function} If a fallbackMethod is supplied, returns a closure that will call the fallback method after\n * logging the warning in the console.\n */\ncreatejs.deprecate = function (fallbackMethod, name) {\n  \"use strict\";\n  return function () {\n    var msg = \"Deprecated property or method '\" + name + \"'. See docs for info.\";\n    console && (console.warn ? console.warn(msg) : console.log(msg));\n    return fallbackMethod && fallbackMethod.apply(this, arguments);\n  }\n};\n\n//##############################################################################\n// Event.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n  // constructor:\n\t/**\n\t * Contains properties and methods shared by all events for use with\n\t * {{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n\t * \n\t * Note that Event objects are often reused, so you should never\n\t * rely on an event object's state outside of the call stack it was received in.\n\t * @class Event\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @constructor\n\t **/\n  function Event(type, bubbles, cancelable) {\n\n\n    // public properties:\n\t\t/**\n\t\t * The type of event.\n\t\t * @property type\n\t\t * @type String\n\t\t **/\n    this.type = type;\n\n\t\t/**\n\t\t * The object that generated an event.\n\t\t * @property target\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t*/\n    this.target = null;\n\n\t\t/**\n\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t * @property currentTarget\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t*/\n    this.currentTarget = null;\n\n\t\t/**\n\t\t * For bubbling events, this indicates the current event phase:<OL>\n\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t * </OL>\n\t\t * @property eventPhase\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t*/\n    this.eventPhase = 0;\n\n\t\t/**\n\t\t * Indicates whether the event will bubble through the display list.\n\t\t * @property bubbles\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n    this.bubbles = !!bubbles;\n\n\t\t/**\n\t\t * Indicates whether the default behaviour of this event can be cancelled via\n\t\t * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.\n\t\t * @property cancelable\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n    this.cancelable = !!cancelable;\n\n\t\t/**\n\t\t * The epoch time at which this event was created.\n\t\t * @property timeStamp\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t*/\n    this.timeStamp = (new Date()).getTime();\n\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property defaultPrevented\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n    this.defaultPrevented = false;\n\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.\n\t\t * @property propagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n    this.propagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property immediatePropagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n    this.immediatePropagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.\n\t\t * @property removed\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n    this.removed = false;\n  }\n  var p = Event.prototype;\n\n  // public methods:\n\t/**\n\t * Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\n\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t * cancel the default behaviour associated with the event.\n\t * @method preventDefault\n\t **/\n  p.preventDefault = function () {\n    this.defaultPrevented = this.cancelable && true;\n  };\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopPropagation\n\t **/\n  p.stopPropagation = function () {\n    this.propagationStopped = true;\n  };\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n\t * {{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopImmediatePropagation\n\t **/\n  p.stopImmediatePropagation = function () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  };\n\n\t/**\n\t * Causes the active listener to be removed via removeEventListener();\n\t * \n\t * \t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t * \t\t\t// do stuff...\n\t * \t\t\tevt.remove(); // removes this listener.\n\t * \t\t});\n\t * \n\t * @method remove\n\t **/\n  p.remove = function () {\n    this.removed = true;\n  };\n\n\t/**\n\t * Returns a clone of the Event instance.\n\t * @method clone\n\t * @return {Event} a clone of the Event instance.\n\t **/\n  p.clone = function () {\n    return new Event(this.type, this.bubbles, this.cancelable);\n  };\n\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t * @return {Event} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t*/\n  p.set = function (props) {\n    for (var n in props) { this[n] = props[n]; }\n    return this;\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[Event (type=\" + this.type + \")]\";\n  };\n\n  createjs.Event = Event;\n}());\n\n//##############################################################################\n// EventDispatcher.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n\t *\n\t * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\n\t * EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\n\t * \n\t * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\n\t * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\n\t * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n\t * \n\t * EventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\n\t * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \n\t * {{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\n\t * {{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\n\t * \n\t * Another addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\n\t * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also \n\t * includes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\n\t *\n\t * <h4>Example</h4>\n\t * Add EventDispatcher capabilities to the \"MyClass\" class.\n\t *\n\t *      EventDispatcher.initialize(MyClass.prototype);\n\t *\n\t * Add an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\n\t *\n\t *      instance.addEventListener(\"eventName\", handlerMethod);\n\t *      function handlerMethod(event) {\n\t *          console.log(event.target + \" Was Clicked\");\n\t *      }\n\t *\n\t * <b>Maintaining proper scope</b><br />\n\t * Scope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\n\t * method to subscribe to events simplifies this.\n\t *\n\t *      instance.addEventListener(\"click\", function(event) {\n\t *          console.log(instance == this); // false, scope is ambiguous.\n\t *      });\n\t *      \n\t *      instance.on(\"click\", function(event) {\n\t *          console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\n\t *      });\n\t * \n\t * If you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\n\t * scope.\n\t *\n\t * <b>Browser support</b>\n\t * The event model in CreateJS can be used separately from the suite in any project, however the inheritance model\n\t * requires modern browsers (IE9+).\n\t *      \n\t *\n\t * @class EventDispatcher\n\t * @constructor\n\t **/\n  function EventDispatcher() {\n\n\n    // private properties:\n\t\t/**\n\t\t * @protected\n\t\t * @property _listeners\n\t\t * @type Object\n\t\t **/\n    this._listeners = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @property _captureListeners\n\t\t * @type Object\n\t\t **/\n    this._captureListeners = null;\n  }\n  var p = EventDispatcher.prototype;\n\n  // static public methods:\n\t/**\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\n\t * \n\t * \t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t * \t\tEventDispatcher.initialize(myObject); // add to a specific instance\n\t * \n\t * @method initialize\n\t * @static\n\t * @param {Object} target The target object to inject EventDispatcher methods into. This can be an instance or a\n\t * prototype.\n\t **/\n  EventDispatcher.initialize = function (target) {\n    target.addEventListener = p.addEventListener;\n    target.on = p.on;\n    target.removeEventListener = target.off = p.removeEventListener;\n    target.removeAllEventListeners = p.removeAllEventListeners;\n    target.hasEventListener = p.hasEventListener;\n    target.dispatchEvent = p.dispatchEvent;\n    target._dispatchEvent = p._dispatchEvent;\n    target.willTrigger = p.willTrigger;\n  };\n\n\n  // public methods:\n\t/**\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\n\t * multiple callbacks getting fired.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.addEventListener(\"click\", handleClick);\n\t *      function handleClick(event) {\n\t *         // Click happened.\n\t *      }\n\t *\n\t * @method addEventListener\n\t * @param {String} type The string type of the event.\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\n\t * the event is dispatched.\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function | Object} Returns the listener for chaining or assignment.\n\t **/\n  p.addEventListener = function (type, listener, useCapture) {\n    var listeners;\n    if (useCapture) {\n      listeners = this._captureListeners = this._captureListeners || {};\n    } else {\n      listeners = this._listeners = this._listeners || {};\n    }\n    var arr = listeners[type];\n    if (arr) { this.removeEventListener(type, listener, useCapture); }\n    arr = listeners[type]; // remove may have deleted the array\n    if (!arr) { listeners[type] = [listener]; }\n    else { arr.push(listener); }\n    return listener;\n  };\n\n\t/**\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\n\t * \n\t * This method works by creating an anonymous wrapper function and subscribing it with addEventListener.\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\n\t * \n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n\t * {{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\n\t * to `on` with the same params will create multiple listeners.\n\t * \n\t * <h4>Example</h4>\n\t * \n\t * \t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\n\t * \t\tfunction handleClick(evt, data) {\n\t * \t\t\tdata.count -= 1;\n\t * \t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\n\t * \t\t\tif (data.count == 0) {\n\t * \t\t\t\talert(\"clicked 3 times!\");\n\t * \t\t\t\tmyBtn.off(\"click\", listener);\n\t * \t\t\t\t// alternately: evt.remove();\n\t * \t\t\t}\n\t * \t\t}\n\t * \n\t * @method on\n\t * @param {String} type The string type of the event.\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\n\t * the event is dispatched.\n\t * @param {Object} [scope] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\n\t * @param {Boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\n\t * @param {*} [data] Arbitrary data that will be included as the second parameter when the listener is called.\n\t * @param {Boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\n\t **/\n  p.on = function (type, listener, scope, once, data, useCapture) {\n    if (listener.handleEvent) {\n      scope = scope || listener;\n      listener = listener.handleEvent;\n    }\n    scope = scope || this;\n    return this.addEventListener(type, function (evt) {\n      listener.call(scope, evt, data);\n      once && evt.remove();\n    }, useCapture);\n  };\n\n\t/**\n\t * Removes the specified event listener.\n\t *\n\t * <b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\n\t * closure will not work.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.removeEventListener(\"click\", handleClick);\n\t *\n\t * @method removeEventListener\n\t * @param {String} type The string type of the event.\n\t * @param {Function | Object} listener The listener function or object.\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t **/\n  p.removeEventListener = function (type, listener, useCapture) {\n    var listeners = useCapture ? this._captureListeners : this._listeners;\n    if (!listeners) { return; }\n    var arr = listeners[type];\n    if (!arr) { return; }\n    for (var i = 0, l = arr.length; i < l; i++) {\n      if (arr[i] == listener) {\n        if (l == 1) { delete (listeners[type]); } // allows for faster checks.\n        else { arr.splice(i, 1); }\n        break;\n      }\n    }\n  };\n\n\t/**\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n\t * .on method.\n\t * \n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \n\t * {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.\n\t *\n\t * @method off\n\t * @param {String} type The string type of the event.\n\t * @param {Function | Object} listener The listener function or object.\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t **/\n  p.off = p.removeEventListener;\n\n\t/**\n\t * Removes all listeners for the specified type, or all listeners of all types.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      // Remove all listeners\n\t *      displayObject.removeAllEventListeners();\n\t *\n\t *      // Remove all click listeners\n\t *      displayObject.removeAllEventListeners(\"click\");\n\t *\n\t * @method removeAllEventListeners\n\t * @param {String} [type] The string type of the event. If omitted, all listeners for all types will be removed.\n\t **/\n  p.removeAllEventListeners = function (type) {\n    if (!type) { this._listeners = this._captureListeners = null; }\n    else {\n      if (this._listeners) { delete (this._listeners[type]); }\n      if (this._captureListeners) { delete (this._captureListeners[type]); }\n    }\n  };\n\n\t/**\n\t * Dispatches the specified event to all listeners.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      // Use a string event\n\t *      this.dispatchEvent(\"complete\");\n\t *\n\t *      // Use an Event instance\n\t *      var event = new createjs.Event(\"progress\");\n\t *      this.dispatchEvent(event);\n\t *\n\t * @method dispatchEvent\n\t * @param {Object | String | Event} eventObj An object with a \"type\" property, or a string type.\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\n\t * @param {Boolean} [bubbles] Specifies the `bubbles` value when a string was passed to eventObj.\n\t * @param {Boolean} [cancelable] Specifies the `cancelable` value when a string was passed to eventObj.\n\t * @return {Boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\n\t **/\n  p.dispatchEvent = function (eventObj, bubbles, cancelable) {\n    if (typeof eventObj == \"string\") {\n      // skip everything if there's no listeners and it doesn't bubble:\n      var listeners = this._listeners;\n      if (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\n      eventObj = new createjs.Event(eventObj, bubbles, cancelable);\n    } else if (eventObj.target && eventObj.clone) {\n      // redispatching an active event object, so clone it:\n      eventObj = eventObj.clone();\n    }\n\n    // TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n    try { eventObj.target = this; } catch (e) { } // try/catch allows redispatching of native events\n\n    if (!eventObj.bubbles || !this.parent) {\n      this._dispatchEvent(eventObj, 2);\n    } else {\n      var top = this, list = [top];\n      while (top.parent) { list.push(top = top.parent); }\n      var i, l = list.length;\n\n      // capture & atTarget\n      for (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n        list[i]._dispatchEvent(eventObj, 1 + (i == 0));\n      }\n      // bubbling\n      for (i = 1; i < l && !eventObj.propagationStopped; i++) {\n        list[i]._dispatchEvent(eventObj, 3);\n      }\n    }\n    return !eventObj.defaultPrevented;\n  };\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type.\n\t * @method hasEventListener\n\t * @param {String} type The string type of the event.\n\t * @return {Boolean} Returns true if there is at least one listener for the specified event.\n\t **/\n  p.hasEventListener = function (type) {\n    var listeners = this._listeners, captureListeners = this._captureListeners;\n    return !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\n  };\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\n\t * specified type is dispatched from this object, it will trigger at least one listener.\n\t * \n\t * This is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\n\t * event flow for a listener, not just this object.\n\t * @method willTrigger\n\t * @param {String} type The string type of the event.\n\t * @return {Boolean} Returns `true` if there is at least one listener for the specified event.\n\t **/\n  p.willTrigger = function (type) {\n    var o = this;\n    while (o) {\n      if (o.hasEventListener(type)) { return true; }\n      o = o.parent;\n    }\n    return false;\n  };\n\n\t/**\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[EventDispatcher]\";\n  };\n\n\n  // private methods:\n\t/**\n\t * @method _dispatchEvent\n\t * @param {Object | Event} eventObj\n\t * @param {Object} eventPhase\n\t * @protected\n\t **/\n  p._dispatchEvent = function (eventObj, eventPhase) {\n    var l, arr, listeners = (eventPhase <= 2) ? this._captureListeners : this._listeners;\n    if (eventObj && listeners && (arr = listeners[eventObj.type]) && (l = arr.length)) {\n      try { eventObj.currentTarget = this; } catch (e) { }\n      try { eventObj.eventPhase = eventPhase | 0; } catch (e) { }\n      eventObj.removed = false;\n\n      arr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n      for (var i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n        var o = arr[i];\n        if (o.handleEvent) { o.handleEvent(eventObj); }\n        else { o(eventObj); }\n        if (eventObj.removed) {\n          this.off(eventObj.type, o, eventPhase == 1);\n          eventObj.removed = false;\n        }\n      }\n    }\n    if (eventPhase === 2) { this._dispatchEvent(eventObj, 2.1); }\n  };\n\n\n  createjs.EventDispatcher = EventDispatcher;\n}());\n\n//##############################################################################\n// Ticker.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\n\t * event to be notified when a set time interval has elapsed.\n\t *\n\t * Note that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\n\t * when under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\n\t * can not be instantiated.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      function handleTick(event) {\n\t *          // Actions carried out each tick (aka frame)\n\t *          if (!event.paused) {\n\t *              // Actions carried out when the Ticker is not paused.\n\t *          }\n\t *      }\n\t *\n\t * @class Ticker\n\t * @uses EventDispatcher\n\t * @static\n\t **/\n  function Ticker() {\n    throw \"Ticker cannot be instantiated.\";\n  }\n\n\n  // constants:\n\t/**\n\t * In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\n\t * uses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\n\t * dispatches the tick when the time is within a certain threshold.\n\t *\n\t * This mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\n\t * but does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\n\t * gaining the benefits of that API (screen synch, background throttling).\n\t *\n\t * Variance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\n\t * framerates of 10, 12, 15, 20, and 30 work well.\n\t *\n\t * Falls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t * supported.\n\t * @property RAF_SYNCHED\n\t * @static\n\t * @type {String}\n\t * @default \"synched\"\n\t * @readonly\n\t **/\n  Ticker.RAF_SYNCHED = \"synched\";\n\n\t/**\n\t * In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\n\t * Because requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\n\t * You can leverage {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} and the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t * event object's \"delta\" properties to make this easier.\n\t *\n\t * Falls back on {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t * supported.\n\t * @property RAF\n\t * @static\n\t * @type {String}\n\t * @default \"raf\"\n\t * @readonly\n\t **/\n  Ticker.RAF = \"raf\";\n\n\t/**\n\t * In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\n\t * provide the benefits of requestAnimationFrame (screen synch, background throttling).\n\t * @property TIMEOUT\n\t * @static\n\t * @type {String}\n\t * @default \"timeout\"\n\t * @readonly\n\t **/\n  Ticker.TIMEOUT = \"timeout\";\n\n\n  // static events:\n\t/**\n\t * Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused using\n\t * {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      function handleTick(event) {\n\t *          console.log(\"Paused:\", event.paused, event.delta);\n\t *      }\n\t *\n\t * @event tick\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Boolean} paused Indicates whether the ticker is currently paused.\n\t * @param {Number} delta The time elapsed in ms since the last tick.\n\t * @param {Number} time The total time in ms since Ticker was initialized.\n\t * @param {Number} runTime The total time in ms that Ticker was not paused since it was initialized. For example,\n\t * \tyou could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.\n\t * @since 0.6.0\n\t */\n\n\n  // public static properties:\n\t/**\n\t * Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use. See\n\t * {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}}, {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}}, and\n\t * {{#crossLink \"Ticker/RAF_SYNCHED:property\"}}{{/crossLink}} for mode details.\n\t * @property timingMode\n\t * @static\n\t * @type {String}\n\t * @default Ticker.TIMEOUT\n\t **/\n  Ticker.timingMode = null;\n\n\t/**\n\t * Specifies a maximum value for the delta property in the tick event object. This is useful when building time\n\t * based animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\n\t * alert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n\t * (ex. maxDelta=50 when running at 40fps).\n\t * \n\t * This does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\n\t * when using both delta and other values.\n\t * \n\t * If 0, there is no maximum.\n\t * @property maxDelta\n\t * @static\n\t * @type {number}\n\t * @default 0\n\t */\n  Ticker.maxDelta = 0;\n\n\t/**\n\t * When the ticker is paused, all listeners will still receive a tick event, but the <code>paused</code> property\n\t * of the event will be `true`. Also, while paused the `runTime` will not increase. See {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}},\n\t * {{#crossLink \"Ticker/getTime\"}}{{/crossLink}}, and {{#crossLink \"Ticker/getEventTime\"}}{{/crossLink}} for more\n\t * info.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      createjs.Ticker.paused = true;\n\t *      function handleTick(event) {\n\t *          console.log(event.paused,\n\t *          \tcreatejs.Ticker.getTime(false),\n\t *          \tcreatejs.Ticker.getTime(true));\n\t *      }\n\t *\n\t * @property paused\n\t * @static\n\t * @type {Boolean}\n\t * @default false\n\t **/\n  Ticker.paused = false;\n\n\n  // mix-ins:\n  // EventDispatcher methods:\n  Ticker.removeEventListener = null;\n  Ticker.removeAllEventListeners = null;\n  Ticker.dispatchEvent = null;\n  Ticker.hasEventListener = null;\n  Ticker._listeners = null;\n  createjs.EventDispatcher.initialize(Ticker); // inject EventDispatcher methods.\n  Ticker._addEventListener = Ticker.addEventListener;\n  Ticker.addEventListener = function () {\n    !Ticker._inited && Ticker.init();\n    return Ticker._addEventListener.apply(Ticker, arguments);\n  };\n\n\n  // private static properties:\n\t/**\n\t * @property _inited\n\t * @static\n\t * @type {Boolean}\n\t * @private\n\t **/\n  Ticker._inited = false;\n\n\t/**\n\t * @property _startTime\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n  Ticker._startTime = 0;\n\n\t/**\n\t * @property _pausedTime\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n  Ticker._pausedTime = 0;\n\n\t/**\n\t * The number of ticks that have passed\n\t * @property _ticks\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n  Ticker._ticks = 0;\n\n\t/**\n\t * The number of ticks that have passed while Ticker has been paused\n\t * @property _pausedTicks\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n  Ticker._pausedTicks = 0;\n\n\t/**\n\t * @property _interval\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n  Ticker._interval = 50;\n\n\t/**\n\t * @property _lastTime\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n  Ticker._lastTime = 0;\n\n\t/**\n\t * @property _times\n\t * @static\n\t * @type {Array}\n\t * @private\n\t **/\n  Ticker._times = null;\n\n\t/**\n\t * @property _tickTimes\n\t * @static\n\t * @type {Array}\n\t * @private\n\t **/\n  Ticker._tickTimes = null;\n\n\t/**\n\t * Stores the timeout or requestAnimationFrame id.\n\t * @property _timerId\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n  Ticker._timerId = null;\n\n\t/**\n\t * True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\n\t * if that property changed and a tick hasn't fired.\n\t * @property _raf\n\t * @static\n\t * @type {Boolean}\n\t * @private\n\t **/\n  Ticker._raf = true;\n\n\n  // static getter / setters:\n\t/**\n\t * Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.\n\t * @method _setInterval\n\t * @private\n\t * @static\n\t * @param {Number} interval\n\t **/\n  Ticker._setInterval = function (interval) {\n    Ticker._interval = interval;\n    if (!Ticker._inited) { return; }\n    Ticker._setupTick();\n  };\n  // Ticker.setInterval is @deprecated. Remove for 1.1+\n  Ticker.setInterval = createjs.deprecate(Ticker._setInterval, \"Ticker.setInterval\");\n\n\t/**\n\t * Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.\n\t * @method _getInterval\n\t * @private\n\t * @static\n\t * @return {Number}\n\t **/\n  Ticker._getInterval = function () {\n    return Ticker._interval;\n  };\n  // Ticker.getInterval is @deprecated. Remove for 1.1+\n  Ticker.getInterval = createjs.deprecate(Ticker._getInterval, \"Ticker.getInterval\");\n\n\t/**\n\t * Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.\n\t * @method _setFPS\n\t * @private\n\t * @static\n\t * @param {Number} value\n\t **/\n  Ticker._setFPS = function (value) {\n    Ticker._setInterval(1000 / value);\n  };\n  // Ticker.setFPS is @deprecated. Remove for 1.1+\n  Ticker.setFPS = createjs.deprecate(Ticker._setFPS, \"Ticker.setFPS\");\n\n\t/**\n\t * Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.\n\t * @method _getFPS\n\t * @static\n\t * @private\n\t * @return {Number}\n\t **/\n  Ticker._getFPS = function () {\n    return 1000 / Ticker._interval;\n  };\n  // Ticker.getFPS is @deprecated. Remove for 1.1+\n  Ticker.getFPS = createjs.deprecate(Ticker._getFPS, \"Ticker.getFPS\");\n\n\t/**\n\t * Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\n\t * Note that actual time between ticks may be more than specified depending on CPU load.\n\t * This property is ignored if the ticker is using the `RAF` timing mode.\n\t * @property interval\n\t * @static\n\t * @type {Number}\n\t **/\n\n\t/**\n\t * Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n\t * `framerate == 1000/interval`.\n\t * @property framerate\n\t * @static\n\t * @type {Number}\n\t **/\n  try {\n    Object.defineProperties(Ticker, {\n      interval: { get: Ticker._getInterval, set: Ticker._setInterval },\n      framerate: { get: Ticker._getFPS, set: Ticker._setFPS }\n    });\n  } catch (e) { console.log(e); }\n\n\n  // public static methods:\n\t/**\n\t * Starts the tick. This is called automatically when the first listener is added.\n\t * @method init\n\t * @static\n\t **/\n  Ticker.init = function () {\n    if (Ticker._inited) { return; }\n    Ticker._inited = true;\n    Ticker._times = [];\n    Ticker._tickTimes = [];\n    Ticker._startTime = Ticker._getTime();\n    Ticker._times.push(Ticker._lastTime = 0);\n    Ticker.interval = Ticker._interval;\n  };\n\n\t/**\n\t * Stops the Ticker and removes all listeners. Use init() to restart the Ticker.\n\t * @method reset\n\t * @static\n\t **/\n  Ticker.reset = function () {\n    if (Ticker._raf) {\n      var f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;\n      f && f(Ticker._timerId);\n    } else {\n      clearTimeout(Ticker._timerId);\n    }\n    Ticker.removeAllEventListeners(\"tick\");\n    Ticker._timerId = Ticker._times = Ticker._tickTimes = null;\n    Ticker._startTime = Ticker._lastTime = Ticker._ticks = Ticker._pausedTime = 0;\n    Ticker._inited = false;\n  };\n\n\t/**\n\t * Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\n\t * because it only measures the time spent within the tick execution stack. \n\t * \n\t * Example 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between \n\t * the end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that \n\t * there may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\t *\n\t * Example 2: With a target FPS of 30, {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} returns 10fps, which\n\t * indicates an average of 100ms between the end of one tick and the end of the next. However, {{#crossLink \"Ticker/getMeasuredTickTime\"}}{{/crossLink}}\n\t * returns 20ms. This would indicate that something other than the tick is using ~80ms (another script, DOM\n\t * rendering, etc).\n\t * @method getMeasuredTickTime\n\t * @static\n\t * @param {Number} [ticks] The number of previous ticks over which to measure the average time spent in a tick.\n\t * Defaults to the number of ticks per second. To get only the last tick's time, pass in 1.\n\t * @return {Number} The average time spent in a tick in milliseconds.\n\t **/\n  Ticker.getMeasuredTickTime = function (ticks) {\n    var ttl = 0, times = Ticker._tickTimes;\n    if (!times || times.length < 1) { return -1; }\n\n    // by default, calculate average for the past ~1 second:\n    ticks = Math.min(times.length, ticks || (Ticker._getFPS() | 0));\n    for (var i = 0; i < ticks; i++) { ttl += times[i]; }\n    return ttl / ticks;\n  };\n\n\t/**\n\t * Returns the actual frames / ticks per second.\n\t * @method getMeasuredFPS\n\t * @static\n\t * @param {Number} [ticks] The number of previous ticks over which to measure the actual frames / ticks per second.\n\t * Defaults to the number of ticks per second.\n\t * @return {Number} The actual frames / ticks per second. Depending on performance, this may differ\n\t * from the target frames per second.\n\t **/\n  Ticker.getMeasuredFPS = function (ticks) {\n    var times = Ticker._times;\n    if (!times || times.length < 2) { return -1; }\n\n    // by default, calculate fps for the past ~1 second:\n    ticks = Math.min(times.length - 1, ticks || (Ticker._getFPS() | 0));\n    return 1000 / ((times[0] - times[ticks]) / ticks);\n  };\n\n\t/**\n\t * Returns the number of milliseconds that have elapsed since Ticker was initialized via {{#crossLink \"Ticker/init\"}}.\n\t * Returns -1 if Ticker has not been initialized. For example, you could use\n\t * this in a time synchronized animation to determine the exact amount of time that has elapsed.\n\t * @method getTime\n\t * @static\n\t * @param {Boolean} [runTime=false] If true only time elapsed while Ticker was not paused will be returned.\n\t * If false, the value returned will be total time elapsed since the first tick event listener was added.\n\t * @return {Number} Number of milliseconds that have elapsed since Ticker was initialized or -1.\n\t **/\n  Ticker.getTime = function (runTime) {\n    return Ticker._startTime ? Ticker._getTime() - (runTime ? Ticker._pausedTime : 0) : -1;\n  };\n\n\t/**\n\t * Similar to the {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} method, but returns the time on the most recent {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t * event object.\n\t * @method getEventTime\n\t * @static\n\t * @param runTime {Boolean} [runTime=false] If true, the runTime property will be returned instead of time.\n\t * @returns {number} The time or runTime property from the most recent tick event or -1.\n\t */\n  Ticker.getEventTime = function (runTime) {\n    return Ticker._startTime ? (Ticker._lastTime || Ticker._startTime) - (runTime ? Ticker._pausedTime : 0) : -1;\n  };\n\n\t/**\n\t * Returns the number of ticks that have been broadcast by Ticker.\n\t * @method getTicks\n\t * @static\n\t * @param {Boolean} pauseable Indicates whether to include ticks that would have been broadcast\n\t * while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n\t * If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n\t * value. The default value is false.\n\t * @return {Number} of ticks that have been broadcast.\n\t **/\n  Ticker.getTicks = function (pauseable) {\n    return Ticker._ticks - (pauseable ? Ticker._pausedTicks : 0);\n  };\n\n\n  // private static methods:\n\t/**\n\t * @method _handleSynch\n\t * @static\n\t * @private\n\t **/\n  Ticker._handleSynch = function () {\n    Ticker._timerId = null;\n    Ticker._setupTick();\n\n    // run if enough time has elapsed, with a little bit of flexibility to be early:\n    if (Ticker._getTime() - Ticker._lastTime >= (Ticker._interval - 1) * 0.97) {\n      Ticker._tick();\n    }\n  };\n\n\t/**\n\t * @method _handleRAF\n\t * @static\n\t * @private\n\t **/\n  Ticker._handleRAF = function () {\n    Ticker._timerId = null;\n    Ticker._setupTick();\n    Ticker._tick();\n  };\n\n\t/**\n\t * @method _handleTimeout\n\t * @static\n\t * @private\n\t **/\n  Ticker._handleTimeout = function () {\n    Ticker._timerId = null;\n    Ticker._setupTick();\n    Ticker._tick();\n  };\n\n\t/**\n\t * @method _setupTick\n\t * @static\n\t * @private\n\t **/\n  Ticker._setupTick = function () {\n    if (Ticker._timerId != null) { return; } // avoid duplicates\n\n    var mode = Ticker.timingMode;\n    if (mode == Ticker.RAF_SYNCHED || mode == Ticker.RAF) {\n      var f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n      if (f) {\n        Ticker._timerId = f(mode == Ticker.RAF ? Ticker._handleRAF : Ticker._handleSynch);\n        Ticker._raf = true;\n        return;\n      }\n    }\n    Ticker._raf = false;\n    Ticker._timerId = setTimeout(Ticker._handleTimeout, Ticker._interval);\n  };\n\n\t/**\n\t * @method _tick\n\t * @static\n\t * @private\n\t **/\n  Ticker._tick = function () {\n    var paused = Ticker.paused;\n    var time = Ticker._getTime();\n    var elapsedTime = time - Ticker._lastTime;\n    Ticker._lastTime = time;\n    Ticker._ticks++;\n\n    if (paused) {\n      Ticker._pausedTicks++;\n      Ticker._pausedTime += elapsedTime;\n    }\n\n    if (Ticker.hasEventListener(\"tick\")) {\n      var event = new createjs.Event(\"tick\");\n      var maxDelta = Ticker.maxDelta;\n      event.delta = (maxDelta && elapsedTime > maxDelta) ? maxDelta : elapsedTime;\n      event.paused = paused;\n      event.time = time;\n      event.runTime = time - Ticker._pausedTime;\n      Ticker.dispatchEvent(event);\n    }\n\n    Ticker._tickTimes.unshift(Ticker._getTime() - time);\n    while (Ticker._tickTimes.length > 100) { Ticker._tickTimes.pop(); }\n\n    Ticker._times.unshift(time);\n    while (Ticker._times.length > 100) { Ticker._times.pop(); }\n  };\n\n\t/**\n\t * @method _getTime\n\t * @static\n\t * @private\n\t **/\n  var w = window, now = w.performance.now || w.performance.mozNow || w.performance.msNow || w.performance.oNow || w.performance.webkitNow;\n  Ticker._getTime = function () {\n    return ((now && now.call(w.performance)) || (new Date().getTime())) - Ticker._startTime;\n  };\n\n\n  createjs.Ticker = Ticker;\n}());\n\n//##############################################################################\n// VideoBuffer.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * When an HTML video seeks, including when looping, there is an indeterminate period before a new frame is available.\n\t * This can result in the video blinking or flashing when it is drawn to a canvas. The VideoBuffer class resolves\n\t * this issue by drawing each frame to an off-screen canvas and preserving the prior frame during a seek.\n\t * \n\t * \tvar myBuffer = new createjs.VideoBuffer(myVideo);\n\t * \tvar myBitmap = new Bitmap(myBuffer);\n\t * \n\t * @class VideoBuffer\n\t * @param {HTMLVideoElement} video The HTML video element to buffer.\n\t * @constructor\n\t **/\n  function VideoBuffer(video) {\n\n    // private properties:\n\t\t/**\n\t\t * Used by Bitmap to determine when the video buffer is ready to be drawn. Not intended for general use.\n\t\t * @property readyState\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this.readyState = video.readyState;\n\n\t\t/**\n\t\t * @property _video\n\t\t * @protected\n\t\t * @type {HTMLVideoElement}\n\t\t * @default 0\n\t\t **/\n    this._video = video;\n\n\t\t/**\n\t\t * @property _canvas\n\t\t * @protected\n\t\t * @type {HTMLCanvasElement}\n\t\t * @default 0\n\t\t **/\n    this._canvas = null;\n\n\t\t/**\n\t\t * @property _lastTime\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t **/\n    this._lastTime = -1;\n\n    if (this.readyState < 2) { video.addEventListener(\"canplaythrough\", this._videoReady.bind(this)); } //once:true isn't supported everywhere, but its a non-critical optimization here.\n  }\n  var p = VideoBuffer.prototype;\n\n\n  // public methods:\n\t/**\n\t * Gets an HTML canvas element showing the current video frame, or the previous frame if in a seek / loop.\n\t * Primarily for use by {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n\t * @method getImage\n\t **/\n  p.getImage = function () {\n    if (this.readyState < 2) { return; }\n    var canvas = this._canvas, video = this._video;\n    if (!canvas) {\n      canvas = this._canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n    }\n    if (video.readyState >= 2 && video.currentTime !== this._lastTime) {\n      var ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      this._lastTime = video.currentTime;\n    }\n    return canvas;\n  };\n\n  // private methods:\n\t/**\n\t * @method _videoReady\n\t * @protected\n\t **/\n  p._videoReady = function () {\n    this.readyState = 2;\n  };\n\n\n  createjs.VideoBuffer = VideoBuffer;\n}());\n\n//##############################################################################\n// MouseEvent.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n\t * see the {{#crossLink \"DisplayObject\"}}{{/crossLink}} and {{#crossLink \"Stage\"}}{{/crossLink}} event listings.\n\t * @class MouseEvent\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @param {Number} stageX The normalized x position relative to the stage.\n\t * @param {Number} stageY The normalized y position relative to the stage.\n\t * @param {MouseEvent} nativeEvent The native DOM event related to this mouse event.\n\t * @param {Number} pointerID The unique id for the pointer.\n\t * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n\t * @param {Number} rawX The raw x position relative to the stage.\n\t * @param {Number} rawY The raw y position relative to the stage.\n\t * @param {DisplayObject} relatedTarget The secondary target for the event.\n\t * @extends Event\n\t * @constructor\n\t **/\n  function MouseEvent(type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n    this.Event_constructor(type, bubbles, cancelable);\n\n\n    // public properties:\n\t\t/**\n\t\t * The normalized x position on the stage. This will always be within the range 0 to stage width.\n\t\t * @property stageX\n\t\t * @type Number\n\t\t*/\n    this.stageX = stageX;\n\n\t\t/**\n\t\t * The normalized y position on the stage. This will always be within the range 0 to stage height.\n\t\t * @property stageY\n\t\t * @type Number\n\t\t **/\n    this.stageY = stageY;\n\n\t\t/**\n\t\t * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @property rawX\n\t\t * @type Number\n\t\t*/\n    this.rawX = (rawX == null) ? stageX : rawX;\n\n\t\t/**\n\t\t * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @property rawY\n\t\t * @type Number\n\t\t*/\n    this.rawY = (rawY == null) ? stageY : rawY;\n\n\t\t/**\n\t\t * The native MouseEvent generated by the browser. The properties and API for this\n\t\t * event may differ between browsers. This property will be null if the\n\t\t * EaselJS property was not directly generated from a native MouseEvent.\n\t\t * @property nativeEvent\n\t\t * @type HtmlMouseEvent\n\t\t * @default null\n\t\t **/\n    this.nativeEvent = nativeEvent;\n\n\t\t/**\n\t\t * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n\t\t * supplied id value.\n\t\t * @property pointerID\n\t\t * @type {Number}\n\t\t */\n    this.pointerID = pointerID;\n\n\t\t/**\n\t\t * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n\t\t * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n\t\t * @property primary\n\t\t * @type {Boolean}\n\t\t */\n    this.primary = !!primary;\n\n\t\t/**\n\t\t * The secondary target for the event, if applicable. This is used for mouseout/rollout\n\t\t * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n\t\t * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n\t\t * \n\t\t * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n\t\t * @property relatedTarget\n\t\t * @type {DisplayObject}\n\t\t */\n    this.relatedTarget = relatedTarget;\n  }\n  var p = createjs.extend(MouseEvent, createjs.Event);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n  // getter / setters:\n\t/**\n\t * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @property localX\n\t * @type {Number}\n\t * @readonly\n\t */\n  p._get_localX = function () {\n    return this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n  };\n\n\t/**\n\t * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @property localY\n\t * @type {Number}\n\t * @readonly\n\t */\n  p._get_localY = function () {\n    return this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n  };\n\n\t/**\n\t * Indicates whether the event was generated by a touch input (versus a mouse input).\n\t * @property isTouch\n\t * @type {Boolean}\n\t * @readonly\n\t */\n  p._get_isTouch = function () {\n    return this.pointerID !== -1;\n  };\n\n\n  try {\n    Object.defineProperties(p, {\n      localX: { get: p._get_localX },\n      localY: { get: p._get_localY },\n      isTouch: { get: p._get_isTouch }\n    });\n  } catch (e) { } // TODO: use Log\n\n\n  // public methods:\n\t/**\n\t * Returns a clone of the MouseEvent instance.\n\t * @method clone\n\t * @return {MouseEvent} a clone of the MouseEvent instance.\n\t **/\n  p.clone = function () {\n    return new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[MouseEvent (type=\" + this.type + \" stageX=\" + this.stageX + \" stageY=\" + this.stageY + \")]\";\n  };\n\n\n  createjs.MouseEvent = createjs.promote(MouseEvent, \"Event\");\n}());\n\n//##############################################################################\n// Matrix2D.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n\t *\n\t * This matrix can be visualized as:\n\t *\n\t * \t[ a  c  tx\n\t * \t  b  d  ty\n\t * \t  0  0  1  ]\n\t *\n\t * Note the locations of b and c.\n\t *\n\t * @class Matrix2D\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t * @constructor\n\t **/\n  function Matrix2D(a, b, c, d, tx, ty) {\n    this.setValues(a, b, c, d, tx, ty);\n\n    // public properties:\n    // assigned in the setValues method.\n\t\t/**\n\t\t * Position (0, 0) in a 3x3 affine transformation matrix.\n\t\t * @property a\n\t\t * @type Number\n\t\t **/\n\n\t\t/**\n\t\t * Position (0, 1) in a 3x3 affine transformation matrix.\n\t\t * @property b\n\t\t * @type Number\n\t\t **/\n\n\t\t/**\n\t\t * Position (1, 0) in a 3x3 affine transformation matrix.\n\t\t * @property c\n\t\t * @type Number\n\t\t **/\n\n\t\t/**\n\t\t * Position (1, 1) in a 3x3 affine transformation matrix.\n\t\t * @property d\n\t\t * @type Number\n\t\t **/\n\n\t\t/**\n\t\t * Position (2, 0) in a 3x3 affine transformation matrix.\n\t\t * @property tx\n\t\t * @type Number\n\t\t **/\n\n\t\t/**\n\t\t * Position (2, 1) in a 3x3 affine transformation matrix.\n\t\t * @property ty\n\t\t * @type Number\n\t\t **/\n  }\n  var p = Matrix2D.prototype;\n\n  // constants:\n\t/**\n\t * Multiplier for converting degrees to radians. Used internally by Matrix2D.\n\t * @property DEG_TO_RAD\n\t * @static\n\t * @final\n\t * @type Number\n\t * @readonly\n\t **/\n  Matrix2D.DEG_TO_RAD = Math.PI / 180;\n\n\n  // static public properties:\n\t/**\n\t * An identity matrix, representing a null transformation.\n\t * @property identity\n\t * @static\n\t * @type Matrix2D\n\t * @readonly\n\t **/\n  Matrix2D.identity = null; // set at bottom of class definition.\n\n\n  // public methods:\n\t/**\n\t * Sets the specified values on this instance. \n\t * @method setValues\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t * @return {Matrix2D} This instance. Useful for chaining method calls.\n\t*/\n  p.setValues = function (a, b, c, d, tx, ty) {\n    // don't forget to update docs in the constructor if these change:\n    this.a = (a == null) ? 1 : a;\n    this.b = b || 0;\n    this.c = c || 0;\n    this.d = (d == null) ? 1 : d;\n    this.tx = tx || 0;\n    this.ty = ty || 0;\n    return this;\n  };\n\n\t/**\n\t * Appends the specified matrix properties to this matrix. All parameters are required.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @method append\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n  p.append = function (a, b, c, d, tx, ty) {\n    var a1 = this.a;\n    var b1 = this.b;\n    var c1 = this.c;\n    var d1 = this.d;\n    if (a != 1 || b != 0 || c != 0 || d != 1) {\n      this.a = a1 * a + c1 * b;\n      this.b = b1 * a + d1 * b;\n      this.c = a1 * c + c1 * d;\n      this.d = b1 * c + d1 * d;\n    }\n    this.tx = a1 * tx + c1 * ty + this.tx;\n    this.ty = b1 * tx + d1 * ty + this.ty;\n    return this;\n  };\n\n\t/**\n\t * Prepends the specified matrix properties to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * All parameters are required.\n\t * @method prepend\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n  p.prepend = function (a, b, c, d, tx, ty) {\n    var a1 = this.a;\n    var c1 = this.c;\n    var tx1 = this.tx;\n\n    this.a = a * a1 + c * this.b;\n    this.b = b * a1 + d * this.b;\n    this.c = a * c1 + c * this.d;\n    this.d = b * c1 + d * this.d;\n    this.tx = a * tx1 + c * this.ty + tx;\n    this.ty = b * tx1 + d * this.ty + ty;\n    return this;\n  };\n\n\t/**\n\t * Appends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @method appendMatrix\n\t * @param {Matrix2D} matrix\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n  p.appendMatrix = function (matrix) {\n    return this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  };\n\n\t/**\n\t * Prepends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * For example, you could calculate the combined transformation for a child object using:\n\t * \n\t * \tvar o = myDisplayObject;\n\t * \tvar mtx = o.getMatrix();\n\t * \twhile (o = o.parent) {\n\t * \t\t// prepend each parent's transformation in turn:\n\t * \t\to.prependMatrix(o.getMatrix());\n\t * \t}\n\t * @method prependMatrix\n\t * @param {Matrix2D} matrix\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n  p.prependMatrix = function (matrix) {\n    return this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  };\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n\t * For example, you can use this to generate a matrix representing the transformations of a display object:\n\t * \n\t * \tvar mtx = new createjs.Matrix2D();\n\t * \tmtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n\t * @method appendTransform\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} regX Optional.\n\t * @param {Number} regY Optional.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n  p.appendTransform = function (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n    if (rotation % 360) {\n      var r = rotation * Matrix2D.DEG_TO_RAD;\n      var cos = Math.cos(r);\n      var sin = Math.sin(r);\n    } else {\n      cos = 1;\n      sin = 0;\n    }\n\n    if (skewX || skewY) {\n      // TODO: can this be combined into a single append operation?\n      skewX *= Matrix2D.DEG_TO_RAD;\n      skewY *= Matrix2D.DEG_TO_RAD;\n      this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n      this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n    } else {\n      this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n    }\n\n    if (regX || regY) {\n      // append the registration offset:\n      this.tx -= regX * this.a + regY * this.c;\n      this.ty -= regX * this.b + regY * this.d;\n    }\n    return this;\n  };\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n\t * For example, you could calculate the combined transformation for a child object using:\n\t * \n\t * \tvar o = myDisplayObject;\n\t * \tvar mtx = new createjs.Matrix2D();\n\t * \tdo  {\n\t * \t\t// prepend each parent's transformation in turn:\n\t * \t\tmtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t * \t} while (o = o.parent);\n\t * \t\n\t * \tNote that the above example would not account for {{#crossLink \"DisplayObject/transformMatrix:property\"}}{{/crossLink}}\n\t * \tvalues. See {{#crossLink \"Matrix2D/prependMatrix\"}}{{/crossLink}} for an example that does.\n\t * @method prependTransform\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} regX Optional.\n\t * @param {Number} regY Optional.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n  p.prependTransform = function (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n    if (rotation % 360) {\n      var r = rotation * Matrix2D.DEG_TO_RAD;\n      var cos = Math.cos(r);\n      var sin = Math.sin(r);\n    } else {\n      cos = 1;\n      sin = 0;\n    }\n\n    if (regX || regY) {\n      // prepend the registration offset:\n      this.tx -= regX; this.ty -= regY;\n    }\n    if (skewX || skewY) {\n      // TODO: can this be combined into a single prepend operation?\n      skewX *= Matrix2D.DEG_TO_RAD;\n      skewY *= Matrix2D.DEG_TO_RAD;\n      this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n      this.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n    } else {\n      this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n    }\n    return this;\n  };\n\n\t/**\n\t * Applies a clockwise rotation transformation to the matrix.\n\t * @method rotate\n\t * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n  p.rotate = function (angle) {\n    angle = angle * Matrix2D.DEG_TO_RAD;\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n\n    var a1 = this.a;\n    var b1 = this.b;\n\n    this.a = a1 * cos + this.c * sin;\n    this.b = b1 * cos + this.d * sin;\n    this.c = -a1 * sin + this.c * cos;\n    this.d = -b1 * sin + this.d * cos;\n    return this;\n  };\n\n\t/**\n\t * Applies a skew transformation to the matrix.\n\t * @method skew\n\t * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t * @param {Number} skewY The amount to skew vertically in degrees.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t*/\n  p.skew = function (skewX, skewY) {\n    skewX = skewX * Matrix2D.DEG_TO_RAD;\n    skewY = skewY * Matrix2D.DEG_TO_RAD;\n    this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n    return this;\n  };\n\n\t/**\n\t * Applies a scale transformation to the matrix.\n\t * @method scale\n\t * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n\t * @param {Number} y The amount to scale vertically.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n  p.scale = function (x, y) {\n    this.a *= x;\n    this.b *= x;\n    this.c *= y;\n    this.d *= y;\n    //this.tx *= x;\n    //this.ty *= y;\n    return this;\n  };\n\n\t/**\n\t * Translates the matrix on the x and y axes.\n\t * @method translate\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n  p.translate = function (x, y) {\n    this.tx += this.a * x + this.c * y;\n    this.ty += this.b * x + this.d * y;\n    return this;\n  };\n\n\t/**\n\t * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n\t * @method identity\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n  p.identity = function () {\n    this.a = this.d = 1;\n    this.b = this.c = this.tx = this.ty = 0;\n    return this;\n  };\n\n\t/**\n\t * Inverts the matrix, causing it to perform the opposite transformation.\n\t * @method invert\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n  p.invert = function () {\n    var a1 = this.a;\n    var b1 = this.b;\n    var c1 = this.c;\n    var d1 = this.d;\n    var tx1 = this.tx;\n    var n = a1 * d1 - b1 * c1;\n\n    this.a = d1 / n;\n    this.b = -b1 / n;\n    this.c = -c1 / n;\n    this.d = a1 / n;\n    this.tx = (c1 * this.ty - d1 * tx1) / n;\n    this.ty = -(a1 * this.ty - b1 * tx1) / n;\n    return this;\n  };\n\n\t/**\n\t * Returns true if the matrix is an identity matrix.\n\t * @method isIdentity\n\t * @return {Boolean}\n\t **/\n  p.isIdentity = function () {\n    return this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n  };\n\n\t/**\n\t * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n\t * @method equals\n\t * @param {Matrix2D} matrix The matrix to compare.\n\t * @return {Boolean}\n\t **/\n  p.equals = function (matrix) {\n    return this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n  };\n\n\t/**\n\t * Transforms a point according to this matrix.\n\t * @method transformPoint\n\t * @param {Number} x The x component of the point to transform.\n\t * @param {Number} y The y component of the point to transform.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n\t * @return {Point} This matrix. Useful for chaining method calls.\n\t **/\n  p.transformPoint = function (x, y, pt) {\n    pt = pt || {};\n    pt.x = x * this.a + y * this.c + this.tx;\n    pt.y = x * this.b + y * this.d + this.ty;\n    return pt;\n  };\n\n\t/**\n\t * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n\t * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n\t * results.\n\t * @method decompose\n\t * @param {Object} target The object to apply the transform properties to. If null, then a new object will be returned.\n\t * @return {Object} The target, or a new generic object with the transform properties applied.\n\t*/\n  p.decompose = function (target) {\n    // TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n    if (target == null) { target = {}; }\n    target.x = this.tx;\n    target.y = this.ty;\n    target.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n    target.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n\n    var skewX = Math.atan2(-this.c, this.d);\n    var skewY = Math.atan2(this.b, this.a);\n\n    var delta = Math.abs(1 - skewX / skewY);\n    if (delta < 0.00001) { // effectively identical, can use rotation:\n      target.rotation = skewY / Matrix2D.DEG_TO_RAD;\n      if (this.a < 0 && this.d >= 0) {\n        target.rotation += (target.rotation <= 0) ? 180 : -180;\n      }\n      target.skewX = target.skewY = 0;\n    } else {\n      target.skewX = skewX / Matrix2D.DEG_TO_RAD;\n      target.skewY = skewY / Matrix2D.DEG_TO_RAD;\n    }\n    return target;\n  };\n\n\t/**\n\t * Copies all properties from the specified matrix to this matrix.\n\t * @method copy\n\t * @param {Matrix2D} matrix The matrix to copy properties from.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t*/\n  p.copy = function (matrix) {\n    return this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  };\n\n\t/**\n\t * Returns a clone of the Matrix2D instance.\n\t * @method clone\n\t * @return {Matrix2D} a clone of the Matrix2D instance.\n\t **/\n  p.clone = function () {\n    return new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[Matrix2D (a=\" + this.a + \" b=\" + this.b + \" c=\" + this.c + \" d=\" + this.d + \" tx=\" + this.tx + \" ty=\" + this.ty + \")]\";\n  };\n\n  // this has to be populated after the class is defined:\n  Matrix2D.identity = new Matrix2D();\n\n\n  createjs.Matrix2D = Matrix2D;\n}());\n\n//##############################################################################\n// DisplayProps.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\t/**\n\t * Used for calculating and encapsulating display related properties.\n\t * @class DisplayProps\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n\t * @constructor\n\t **/\n  function DisplayProps(visible, alpha, shadow, compositeOperation, matrix) {\n    this.setValues(visible, alpha, shadow, compositeOperation, matrix);\n\n    // public properties:\n    // assigned in the setValues method.\n\t\t/**\n\t\t * Property representing the alpha that will be applied to a display object.\n\t\t * @property alpha\n\t\t * @type Number\n\t\t **/\n\n\t\t/**\n\t\t * Property representing the shadow that will be applied to a display object.\n\t\t * @property shadow\n\t\t * @type Shadow\n\t\t **/\n\n\t\t/**\n\t\t * Property representing the compositeOperation that will be applied to a display object.\n\t\t * You can find a list of valid composite operations at:\n\t\t * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing\">https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing</a>\n\t\t * @property compositeOperation\n\t\t * @type String\n\t\t **/\n\n\t\t/**\n\t\t * Property representing the value for visible that will be applied to a display object.\n\t\t * @property visible\n\t\t * @type Boolean\n\t\t **/\n\n\t\t/**\n\t\t * The transformation matrix that will be applied to a display object.\n\t\t * @property matrix\n\t\t * @type Matrix2D\n\t\t **/\n  }\n  var p = DisplayProps.prototype;\n\n  // initialization:\n\t/**\n\t * Reinitializes the instance with the specified values.\n\t * @method setValues\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n  p.setValues = function (visible, alpha, shadow, compositeOperation, matrix) {\n    this.visible = visible == null ? true : !!visible;\n    this.alpha = alpha == null ? 1 : alpha;\n    this.shadow = shadow;\n    this.compositeOperation = compositeOperation;\n    this.matrix = matrix || (this.matrix && this.matrix.identity()) || new createjs.Matrix2D();\n    return this;\n  };\n\n  // public methods:\n\t/**\n\t * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n\t * @method append\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n  p.append = function (visible, alpha, shadow, compositeOperation, matrix) {\n    this.alpha *= alpha;\n    this.shadow = shadow || this.shadow;\n    this.compositeOperation = compositeOperation || this.compositeOperation;\n    this.visible = this.visible && visible;\n    matrix && this.matrix.appendMatrix(matrix);\n    return this;\n  };\n\n\t/**\n\t * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n\t * For example, to get the combined display properties that would be applied to a child, you could use:\n\t * \n\t * \tvar o = myDisplayObject;\n\t * \tvar props = new createjs.DisplayProps();\n\t * \tdo {\n\t * \t\t// prepend each parent's props in turn:\n\t * \t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n\t * \t} while (o = o.parent);\n\t * \t\n\t * @method prepend\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n  p.prepend = function (visible, alpha, shadow, compositeOperation, matrix) {\n    this.alpha *= alpha;\n    this.shadow = this.shadow || shadow;\n    this.compositeOperation = this.compositeOperation || compositeOperation;\n    this.visible = this.visible && visible;\n    matrix && this.matrix.prependMatrix(matrix);\n    return this;\n  };\n\n\t/**\n\t * Resets this instance and its matrix to default values.\n\t * @method identity\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n  p.identity = function () {\n    this.visible = true;\n    this.alpha = 1;\n    this.shadow = this.compositeOperation = null;\n    this.matrix.identity();\n    return this;\n  };\n\n\t/**\n\t * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n\t * @method clone\n\t * @return {DisplayProps} a clone of the DisplayProps instance.\n\t **/\n  p.clone = function () {\n    return new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n  };\n\n  // private methods:\n\n  createjs.DisplayProps = DisplayProps;\n})();\n\n//##############################################################################\n// Point.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Represents a point on a 2 dimensional x / y coordinate system.\n\t *\n\t * <h4>Example</h4>\n\t * \n\t *      var point = new createjs.Point(0, 100);\n\t * \n\t * @class Point\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @constructor\n\t **/\n  function Point(x, y) {\n    this.setValues(x, y);\n\n\n    // public properties:\n    // assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type Number\n\t\t * @default 0\n\t\t **/\n\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type Number\n\t\t * @default 0\n\t\t **/\n  }\n  var p = Point.prototype;\n\n  // public methods:\n\t/** \n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @return {Point} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n  p.setValues = function (x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n    return this;\n  };\n\n\t/** \n\t * Offsets the Point object by the specified amount.\n\t * <ul>\n\t *     <li>The value of `dx` is added to the original value of `x` to create the new `x` value</li>\n\t *     <li>The value of `dy` is added to the original value of `y` to create the new `y` value</li>\n\t * </ul>\n\t * @method offset\n\t * @param {Number} dx The amount by which to offset the horizontal coordinate, `x`.\n\t * @param {Number} dy The amount by which to offset the vertical coordinate, `y`.\n\t * @return {Point} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n  p.offset = function (dx, dy) {\n    this.x += dx;\n    this.y += dy;\n    return this;\n  };\n\n\t/** \n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\n\t * @method polar\n\t * @param {Number} len The length coordinate of the polar pair.\n\t * @param {Number} angle The angle, in radians, of the polar pair.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new {{#crossLink \"Point\"}}{{/crossLink}}\n\t * will be returned.\n\t * @return {Point} The new, interpolated point.\n\t*/\n  Point.polar = function (len, angle, pt) {\n    pt = pt || new Point();\n    pt.x = len * Math.cos(angle);\n    pt.y = len * Math.sin(angle);\n    return pt;\n  };\n\n\t/**\n\t * Determine a point between two specified points.\n\t *\n\t * The parameter `f` determines where the new interpolated point is located relative to the two end points specified\n\t * by parameters `pt1` and `pt2`:\n\t * <ul>\n\t *     <li>The closer the value of the parameter `f` is to 1.0, the closer the interpolated point is to the first\n\t *     point (parameter `pt1`).</li>\n\t *     <li>The closer the value of the parameter `f` is to 0, the closer the interpolated point is to the second\n\t *     point (parameter `pt2`).</li>\n\t * </ul>\n\t * @method interpolate\n\t * @param {Point | Object} pt1 The first point as a Point or generic object.\n\t * @param {Point | Object} pt2 The second point as a Point or generic object.\n\t * @param {Number} f The level of interpolation between the two points. Indicates where the new point will be, along\n\t * the line between `pt1` and `pt2`. If `f=1`, `pt1` is returned; if `f=0`, `pt2` is returned.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted, a new {{#crossLink \"Point\"}}{{/crossLink}}\n\t * will be returned.\n\t * @return {Point} A new interpolated Point, or the `pt` passed in the 4th parameter with the interpolated values.\n\t*/\n  Point.interpolate = function (pt1, pt2, f, pt) {\n    pt = pt || new Point();\n    pt.x = pt2.x + f * (pt1.x - pt2.x);\n    pt.y = pt2.y + f * (pt1.y - pt2.y);\n    return pt;\n  };\n\n\t/**\n\t * Copies all properties from the specified point to this point.\n\t * @method copy\n\t * @param {Point} point The point to copy properties from.\n\t * @return {Point} This point. Useful for chaining method calls.\n\t * @chainable\n\t*/\n  p.copy = function (point) {\n    this.x = point.x;\n    this.y = point.y;\n    return this;\n  };\n\n\t/**\n\t * Returns a clone of the Point instance.\n\t * @method clone\n\t * @return {Point} a clone of the Point instance.\n\t **/\n  p.clone = function () {\n    return new Point(this.x, this.y);\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[Point (x=\" + this.x + \" y=\" + this.y + \")]\";\n  };\n\n\n  createjs.Point = Point;\n}());\n\n//##############################################################################\n// Rectangle.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var rect = new createjs.Rectangle(0, 0, 100, 100);\n\t *\n\t * @class Rectangle\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t * @constructor\n\t **/\n  function Rectangle(x, y, width, height) {\n    this.setValues(x, y, width, height);\n\n\n    // public properties:\n    // assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type Number\n\t\t **/\n\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type Number\n\t\t **/\n\n\t\t/**\n\t\t * Width.\n\t\t * @property width\n\t\t * @type Number\n\t\t **/\n\n\t\t/**\n\t\t * Height.\n\t\t * @property height\n\t\t * @type Number\n\t\t **/\n  }\n  var p = Rectangle.prototype;\n\n  // public methods:\n\t/** \n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n  p.setValues = function (x, y, width, height) {\n    // don't forget to update docs in the constructor if these change:\n    this.x = x || 0;\n    this.y = y || 0;\n    this.width = width || 0;\n    this.height = height || 0;\n    return this;\n  };\n\n\t/** \n\t * Extends the rectangle's bounds to include the described point or rectangle.\n\t * @method extend\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n  p.extend = function (x, y, width, height) {\n    width = width || 0;\n    height = height || 0;\n    if (x + width > this.x + this.width) { this.width = x + width - this.x; }\n    if (y + height > this.y + this.height) { this.height = y + height - this.y; }\n    if (x < this.x) { this.width += this.x - x; this.x = x; }\n    if (y < this.y) { this.height += this.y - y; this.y = y; }\n    return this;\n  };\n\n\t/** \n\t * Adds the specified padding to the rectangle's bounds.\n\t * @method pad\n\t * @param {Number} top\n\t * @param {Number} left\n\t * @param {Number} bottom\n\t * @param {Number} right\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n  p.pad = function (top, left, bottom, right) {\n    this.x -= left;\n    this.y -= top;\n    this.width += left + right;\n    this.height += top + bottom;\n    return this;\n  };\n\n\t/**\n\t * Copies all properties from the specified rectangle to this rectangle.\n\t * @method copy\n\t * @param {Rectangle} rectangle The rectangle to copy properties from.\n\t * @return {Rectangle} This rectangle. Useful for chaining method calls.\n\t * @chainable\n\t*/\n  p.copy = function (rectangle) {\n    return this.setValues(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n  };\n\n\t/** \n\t * Returns true if this rectangle fully encloses the described point or rectangle.\n\t * @method contains\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n\t*/\n  p.contains = function (x, y, width, height) {\n    width = width || 0;\n    height = height || 0;\n    return (x >= this.x && x + width <= this.x + this.width && y >= this.y && y + height <= this.y + this.height);\n  };\n\n\t/** \n\t * Returns a new rectangle which contains this rectangle and the specified rectangle.\n\t * @method union\n\t * @param {Rectangle} rect The rectangle to calculate a union with.\n\t * @return {Rectangle} A new rectangle describing the union.\n\t*/\n  p.union = function (rect) {\n    return this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n  };\n\n\t/** \n\t * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n\t * or null if they do not intersect.\n\t * @method intersection\n\t * @param {Rectangle} rect The rectangle to calculate an intersection with.\n\t * @return {Rectangle} A new rectangle describing the intersection or null.\n\t*/\n  p.intersection = function (rect) {\n    var x1 = rect.x, y1 = rect.y, x2 = x1 + rect.width, y2 = y1 + rect.height;\n    if (this.x > x1) { x1 = this.x; }\n    if (this.y > y1) { y1 = this.y; }\n    if (this.x + this.width < x2) { x2 = this.x + this.width; }\n    if (this.y + this.height < y2) { y2 = this.y + this.height; }\n    return (x2 <= x1 || y2 <= y1) ? null : new Rectangle(x1, y1, x2 - x1, y2 - y1);\n  };\n\n\t/** \n\t * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n\t * @method intersects\n\t * @param {Rectangle} rect The rectangle to compare.\n\t * @return {Boolean} True if the rectangles intersect.\n\t*/\n  p.intersects = function (rect) {\n    return (rect.x <= this.x + this.width && this.x <= rect.x + rect.width && rect.y <= this.y + this.height && this.y <= rect.y + rect.height);\n  };\n\n\t/** \n\t * Returns true if the width or height are equal or less than 0.\n\t * @method isEmpty\n\t * @return {Boolean} True if the rectangle is empty.\n\t*/\n  p.isEmpty = function () {\n    return this.width <= 0 || this.height <= 0;\n  };\n\n\t/**\n\t * Returns a clone of the Rectangle instance.\n\t * @method clone\n\t * @return {Rectangle} a clone of the Rectangle instance.\n\t **/\n  p.clone = function () {\n    return new Rectangle(this.x, this.y, this.width, this.height);\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[Rectangle (x=\" + this.x + \" y=\" + this.y + \" width=\" + this.width + \" height=\" + this.height + \")]\";\n  };\n\n\n  createjs.Rectangle = Rectangle;\n}());\n\n//##############################################################################\n// ButtonHelper.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * The ButtonHelper is a helper class to create interactive buttons from {{#crossLink \"MovieClip\"}}{{/crossLink}} or\n\t * {{#crossLink \"Sprite\"}}{{/crossLink}} instances. This class will intercept mouse events from an object, and\n\t * automatically call {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}},\n\t * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n\t *\n\t * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n\t * garbage collection.\n\t * \n\t * Note that over states will not work unless you call {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var helper = new createjs.ButtonHelper(myInstance, \"out\", \"over\", \"down\", false, myInstance, \"hit\");\n\t *      myInstance.addEventListener(\"click\", handleClick);\n\t *      function handleClick(event) {\n\t *          // Click Happened.\n\t *      }\n\t *\n\t * @class ButtonHelper\n\t * @param {Sprite|MovieClip} target The instance to manage.\n\t * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n\t * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n\t * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n\t * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n\t * states.\n\t * @param {DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n\t * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n\t * used for the hitState.\n\t * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n\t * null, then the default state of the hitArea will be used. *\n\t * @constructor\n\t */\n  function ButtonHelper(target, outLabel, overLabel, downLabel, play, hitArea, hitLabel) {\n    if (!target.addEventListener) { return; }\n\n\n    // public properties:\n\t\t/**\n\t\t * The target for this button helper.\n\t\t * @property target\n\t\t * @type MovieClip | Sprite\n\t\t * @readonly\n\t\t **/\n    this.target = target;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses out of the target. Defaults to \"over\".\n\t\t * @property overLabel\n\t\t * @type String | Number\n\t\t **/\n    this.overLabel = overLabel == null ? \"over\" : overLabel;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses over the target. Defaults to \"out\".\n\t\t * @property outLabel\n\t\t * @type String | Number\n\t\t **/\n    this.outLabel = outLabel == null ? \"out\" : outLabel;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user presses on the target. Defaults to \"down\".\n\t\t * @property downLabel\n\t\t * @type String | Number\n\t\t **/\n    this.downLabel = downLabel == null ? \"down\" : downLabel;\n\n\t\t/**\n\t\t * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop. Default is false.\n\t\t * @property play\n\t\t * @default false\n\t\t * @type Boolean\n\t\t **/\n    this.play = play;\n\n\n    //  private properties\n\t\t/**\n\t\t * @property _isPressed\n\t\t * @type Boolean\n\t\t * @protected\n\t\t **/\n    this._isPressed = false;\n\n\t\t/**\n\t\t * @property _isOver\n\t\t * @type Boolean\n\t\t * @protected\n\t\t **/\n    this._isOver = false;\n\n\t\t/**\n\t\t * @property _enabled\n\t\t * @type Boolean\n\t\t * @protected\n\t\t **/\n    this._enabled = false;\n\n    // setup:\n    target.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n    this.enabled = true;\n    this.handleEvent({});\n    if (hitArea) {\n      if (hitLabel) {\n        hitArea.actionsEnabled = false;\n        hitArea.gotoAndStop && hitArea.gotoAndStop(hitLabel);\n      }\n      target.hitArea = hitArea;\n    }\n  }\n  var p = ButtonHelper.prototype;\n\n  // getter / setters:\n\t/**\n\t * Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.\n\t * @method setEnabled\n\t * @param {Boolean} value The enabled property to set the instance to.\n\t * @[rptected\n\t * @protected\n\t **/\n  p._setEnabled = function (value) {\n    if (value == this._enabled) { return; }\n    var o = this.target;\n    this._enabled = value;\n    if (value) {\n      o.cursor = \"pointer\";\n      o.addEventListener(\"rollover\", this);\n      o.addEventListener(\"rollout\", this);\n      o.addEventListener(\"mousedown\", this);\n      o.addEventListener(\"pressup\", this);\n      if (o._reset) { o.__reset = o._reset; o._reset = this._reset; }\n    } else {\n      o.cursor = null;\n      o.removeEventListener(\"rollover\", this);\n      o.removeEventListener(\"rollout\", this);\n      o.removeEventListener(\"mousedown\", this);\n      o.removeEventListener(\"pressup\", this);\n      if (o.__reset) { o._reset = o.__reset; delete (o.__reset); }\n    }\n  };\n  // ButtonHelper.setEnabled is @deprecated. Remove for 1.1+\n  p.setEnabled = createjs.deprecate(p._setEnabled, \"ButtonHelper.setEnabled\");\n\n\t/**\n\t * Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.\n\t * @method getEnabled\n\t * @protected\n\t * @return {Boolean}\n\t **/\n  p._getEnabled = function () {\n    return this._enabled;\n  };\n  // ButtonHelper.getEnabled is @deprecated. Remove for 1.1+\n  p.getEnabled = createjs.deprecate(p._getEnabled, \"ButtonHelper.getEnabled\");\n\n\t/**\n\t * Enables or disables the button functionality on the target.\n\t * @property enabled\n\t * @type {Boolean}\n\t **/\n  try {\n    Object.defineProperties(p, {\n      enabled: { get: p._getEnabled, set: p._setEnabled }\n    });\n  } catch (e) { } // TODO: use Log\n\n\n  // public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[ButtonHelper]\";\n  };\n\n\n  // private methods:\n\t/**\n\t * @method handleEvent\n\t * @param {Object} evt The mouse event to handle.\n\t * @protected\n\t **/\n  p.handleEvent = function (evt) {\n    var label, t = this.target, type = evt.type;\n    if (type == \"mousedown\") {\n      this._isPressed = true;\n      label = this.downLabel;\n    } else if (type == \"pressup\") {\n      this._isPressed = false;\n      label = this._isOver ? this.overLabel : this.outLabel;\n    } else if (type == \"rollover\") {\n      this._isOver = true;\n      label = this._isPressed ? this.downLabel : this.overLabel;\n    } else { // rollout and default\n      this._isOver = false;\n      label = this._isPressed ? this.overLabel : this.outLabel;\n    }\n    if (this.play) {\n      t.gotoAndPlay && t.gotoAndPlay(label);\n    } else {\n      t.gotoAndStop && t.gotoAndStop(label);\n    }\n  };\n\n\t/**\n\t * Injected into target. Preserves the paused state through a reset.\n\t * @method _reset\n\t * @protected\n\t **/\n  p._reset = function () {\n    // TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n    var p = this.paused;\n    this.__reset();\n    this.paused = p;\n  };\n\n\n  createjs.ButtonHelper = ButtonHelper;\n}());\n\n//##############################################################################\n// Shadow.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * This class encapsulates the properties required to define a shadow to apply to a {{#crossLink \"DisplayObject\"}}{{/crossLink}}\n\t * via its <code>shadow</code> property.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myImage.shadow = new createjs.Shadow(\"#000000\", 5, 5, 10);\n\t *\n\t * @class Shadow\n\t * @constructor\n\t * @param {String} color The color of the shadow. This can be any valid CSS color value.\n\t * @param {Number} offsetX The x offset of the shadow in pixels.\n\t * @param {Number} offsetY The y offset of the shadow in pixels.\n\t * @param {Number} blur The size of the blurring effect.\n\t **/\n  function Shadow(color, offsetX, offsetY, blur) {\n\n\n    // public properties:\n\t\t/** \n\t\t * The color of the shadow. This can be any valid CSS color value.\n\t\t * @property color\n\t\t * @type String\n\t\t * @default null\n\t\t */\n    this.color = color || \"black\";\n\n\t\t/** The x offset of the shadow.\n\t\t * @property offsetX\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n    this.offsetX = offsetX || 0;\n\n\t\t/** The y offset of the shadow.\n\t\t * @property offsetY\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n    this.offsetY = offsetY || 0;\n\n\t\t/** The blur of the shadow.\n\t\t * @property blur\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n    this.blur = blur || 0;\n  }\n  var p = Shadow.prototype;\n\n  // static public properties:\n\t/**\n\t * An identity shadow object (all properties are set to 0).\n\t * @property identity\n\t * @type Shadow\n\t * @static\n\t * @final\n\t * @readonly\n\t **/\n  Shadow.identity = new Shadow(\"transparent\", 0, 0, 0);\n\n\n  // public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[Shadow]\";\n  };\n\n\t/**\n\t * Returns a clone of this Shadow instance.\n\t * @method clone\n\t * @return {Shadow} A clone of the current Shadow instance.\n\t **/\n  p.clone = function () {\n    return new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n  };\n\n\n  createjs.Shadow = Shadow;\n}());\n\n//##############################################################################\n// SpriteSheet.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n\t * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n\t * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n\t *\n\t * The data passed to the SpriteSheet constructor defines:\n\t * <ol>\n\t * \t<li> The source image or images to use.</li>\n\t * \t<li> The positions of individual image frames.</li>\n\t * \t<li> Sequences of frames that form named animations. Optional.</li>\n\t * \t<li> The target playback framerate. Optional.</li>\n\t * </ol>\n\t * <h3>SpriteSheet Format</h3>\n\t * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n\t * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n\t *\n\t * <h4>images</h4>\n\t * An array of source images. Images can be either an HTMlimage\n\t * instance, or a uri to an image. The former is recommended to control preloading.\n\t *\n\t * \timages: [image1, \"path/to/image2.png\"],\n\t *\n\t * <h4>frames</h4>\n\t * Defines the individual frames. There are two supported formats for frame data:\n\t * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n\t * and `count` properties.\n\t *\n\t * <ul>\n\t *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n\t *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n\t *  <li>`spacing` indicate the spacing between frames</li>\n\t *  <li>`margin` specify the margin around the image(s)</li>\n\t *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n\t *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n\t *  indexes based on their position in the source images (left to right, top to bottom).</li>\n\t * </ul>\n\t *\n\t *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n\t *\n\t * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n\t * with 4 required and 3 optional entries, in the order:\n\t *\n\t * <ul>\n\t *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n\t *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n\t *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n\t * </ul>\n\t *\n\t * \tframes: [\n\t * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n\t * \t\t[64, 0, 96, 64],\n\t * \t\t[0, 0, 64, 64, 1, 32, 32]\n\t * \t\t// etc.\n\t * \t]\n\t *\n\t * <h4>animations</h4>\n\t * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n\t * animation of the same name. Each animation must specify the frames to play, and may\n\t * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n\t * the name of the `next` animation to sequence to after it completes.\n\t *\n\t * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n\t * <ol>\n\t * \t<li>for a single frame animation, you can simply specify the frame index\n\t *\n\t * \t\tanimations: {\n\t * \t\t\tsit: 7\n\t * \t\t}\n\t *\n\t * </li>\n\t * <li>\n\t *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n\t * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n\t *\n\t * \t\tanimations: {\n\t * \t\t\t// start, end, next*, speed*\n\t * \t\t\trun: [0, 8],\n\t * \t\t\tjump: [9, 12, \"run\", 2]\n\t * \t\t}\n\t *\n\t *  </li>\n\t *  <li>\n\t *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n\t *     indexes to play in order. The object can also specify `next` and `speed` properties.\n\t *\n\t * \t\tanimations: {\n\t * \t\t\twalk: {\n\t * \t\t\t\tframes: [1,2,3,3,2,1]\n\t * \t\t\t},\n\t * \t\t\tshoot: {\n\t * \t\t\t\tframes: [1,4,5,6],\n\t * \t\t\t\tnext: \"walk\",\n\t * \t\t\t\tspeed: 0.5\n\t * \t\t\t}\n\t * \t\t}\n\t *\n\t *  </li>\n\t * </ol>\n\t * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n\t * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n\t * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n\t *\n\t * <h4>framerate</h4>\n\t * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n\t * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n\t *\n\t * \t\tframerate: 20\n\t *\n\t * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n\t *\n\t * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n\t * \t\tfunction handleTick(event) {\n\t *\t\t\tstage.update(event);\n\t *\t\t}\n\t *\n\t * <h3>Example</h3>\n\t * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n\t * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n\t * sequencing back to run.\n\t *\n\t * \t\tvar data = {\n\t * \t\t\timages: [\"sprites.jpg\"],\n\t * \t\t\tframes: {width:50, height:50},\n\t * \t\t\tanimations: {\n\t * \t\t\t\tstand:0,\n\t * \t\t\t\trun:[1,5],\n\t * \t\t\t\tjump:[6,8,\"run\"]\n\t * \t\t\t}\n\t * \t\t};\n\t * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n\t * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n\t *\n\t * <h3>Generating SpriteSheet Images</h3>\n\t * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n\t * coordinates manually, however there are a number of tools that facilitate this.\n\t * <ul>\n\t *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n\t *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n\t *     EaselJS support.\n\t *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\">Zo&euml;</a></li>\n\t * </ul>\n\t *\n\t * <h3>Cross Origin Issues</h3>\n\t * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n\t * using:\n\t * <ul>\n\t *     <li>a mouse</li>\n\t *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n\t *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n\t *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n\t * </ul>\n\t * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n\t * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n\t *\n\t * \t\tvar img = new Image();\n\t * \t\timg.crossOrigin=\"Anonymous\";\n\t * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n\t *\n\t * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n\t * support cross-origin requests, or this will not work. For more information, check out\n\t * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n\t *\n\t * @class SpriteSheet\n\t * @constructor\n\t * @param {Object} data An object describing the SpriteSheet data.\n\t * @extends EventDispatcher\n\t **/\n  function SpriteSheet(data) {\n    this.EventDispatcher_constructor();\n\n\n    // public properties:\n\t\t/**\n\t\t * Indicates whether all images are finished loading.\n\t\t * @property complete\n\t\t * @type Boolean\n\t\t * @readonly\n\t\t **/\n    this.complete = true;\n\n\t\t/**\n\t\t * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n\t\t * {{#crossLink \"Sprite/framerate:property\"}}{{/crossLink}} for more information.\n\t\t * @property framerate\n\t\t * @type Number\n\t\t **/\n    this.framerate = 0;\n\n\n    // private properties:\n\t\t/**\n\t\t * @property _animations\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n    this._animations = null;\n\n\t\t/**\n\t\t * @property _frames\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n    this._frames = null;\n\n\t\t/**\n\t\t * @property _images\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n    this._images = null;\n\n\t\t/**\n\t\t * @property _data\n\t\t * @protected\n\t\t * @type Object\n\t\t **/\n    this._data = null;\n\n\t\t/**\n\t\t * @property _loadCount\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n    this._loadCount = 0;\n\n    // only used for simple frame defs:\n\t\t/**\n\t\t * @property _frameHeight\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n    this._frameHeight = 0;\n\n\t\t/**\n\t\t * @property _frameWidth\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n    this._frameWidth = 0;\n\n\t\t/**\n\t\t * @property _numFrames\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n    this._numFrames = 0;\n\n\t\t/**\n\t\t * @property _regX\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n    this._regX = 0;\n\n\t\t/**\n\t\t * @property _regY\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n    this._regY = 0;\n\n\t\t/**\n\t\t * @property _spacing\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n    this._spacing = 0;\n\n\t\t/**\n\t\t * @property _margin\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n    this._margin = 0;\n\n    // setup:\n    this._parseData(data);\n  }\n  var p = createjs.extend(SpriteSheet, createjs.EventDispatcher);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n  // events:\n\t/**\n\t * Dispatched when all images are loaded.  Note that this only fires if the images\n\t * were not fully loaded when the sprite sheet was initialized. You should check the complete property\n\t * to prior to adding a listener. Ex.\n\t *\n\t * \tvar sheet = new createjs.SpriteSheet(data);\n\t * \tif (!sheet.complete) {\n\t * \t\t// not preloaded, listen for the complete event:\n\t * \t\tsheet.addEventListener(\"complete\", handler);\n\t * \t}\n\t *\n\t * @event complete\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}}\n\t * when doing on-demand rendering.\n\t * @event getframe\n\t * @param {Number} index The frame index.\n\t * @param {Object} frame The frame object that getFrame will return.\n\t */\n\n\t/**\n\t * Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\n\t * encounters an error, and will still dispatch a {{#crossLink \"SpriteSheet/complete:event\"}}{{/crossLink}}\n\t * event once all images are finished processing, even if an error is encountered.\n\t * @event error\n\t * @param {String} src The source of the image that failed to load.\n\t * @since 0.8.2\n\t */\n\n\n  // getter / setters:\n\t/**\n\t * Use the {{#crossLink \"SpriteSheet/animations:property\"}}{{/crossLink}} property instead.\n\t * @method _getAnimations\n\t * @protected\n\t * @return {Array}\n\t **/\n  p._getAnimations = function () {\n    return this._animations.slice();\n  };\n  // SpriteSheet.getAnimations is @deprecated. Remove for 1.1+\n  p.getAnimations = createjs.deprecate(p._getAnimations, \"SpriteSheet.getAnimations\");\n\n\t/**\n\t * Returns an array of all available animation names available on this sprite sheet as strings.\n\t * @property animations\n\t * @type {Array}\n\t * @readonly\n\t **/\n  try {\n    Object.defineProperties(p, {\n      animations: { get: p._getAnimations }\n    });\n  } catch (e) { }\n\n\n  // public methods:\n\t/**\n\t * Returns the total number of frames in the specified animation, or in the whole sprite\n\t * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n\t * the images have not been fully loaded.\n\t * @method getNumFrames\n\t * @param {String} animation The name of the animation to get a frame count for.\n\t * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n\t */\n  p.getNumFrames = function (animation) {\n    if (animation == null) {\n      return this._frames ? this._frames.length : this._numFrames || 0;\n    } else {\n      var data = this._data[animation];\n      if (data == null) { return 0; }\n      else { return data.frames.length; }\n    }\n  };\n\n\t/**\n\t * Returns an object defining the specified animation. The returned object contains:<UL>\n\t * \t<li>frames: an array of the frame ids in the animation</li>\n\t * \t<li>speed: the playback speed for this animation</li>\n\t * \t<li>name: the name of the animation</li>\n\t * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the\n\t * \tsame.</li>\n\t * </UL>\n\t * @method getAnimation\n\t * @param {String} name The name of the animation to get.\n\t * @return {Object} a generic object with frames, speed, name, and next properties.\n\t **/\n  p.getAnimation = function (name) {\n    return this._data[name];\n  };\n\n\t/**\n\t * Returns an object specifying the image and source rect of the specified frame. The returned object has:<UL>\n\t * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n\t * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that\n\t * \timage.</li>\n\t * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n\t * </UL>\n\t * @method getFrame\n\t * @param {Number} frameIndex The index of the frame.\n\t * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n\t **/\n  p.getFrame = function (frameIndex) {\n    var frame;\n    if (this._frames && (frame = this._frames[frameIndex])) { return frame; }\n    return null;\n  };\n\n\t/**\n\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the specified frame relative\n\t * to the origin. For example, a 90 x 70 frame with a regX of 50 and a regY of 40 would return:\n\t *\n\t * \t[x=-50, y=-40, width=90, height=70]\n\t *\n\t * @method getFrameBounds\n\t * @param {Number} frameIndex The index of the frame.\n\t * @param {Rectangle} [rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n\t **/\n  p.getFrameBounds = function (frameIndex, rectangle) {\n    var frame = this.getFrame(frameIndex);\n    return frame ? (rectangle || new createjs.Rectangle()).setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[SpriteSheet]\";\n  };\n\n\t/**\n\t * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n\t * @method clone\n\t **/\n  p.clone = function () {\n    throw (\"SpriteSheet cannot be cloned.\")\n  };\n\n  // private methods:\n\t/**\n\t * @method _parseData\n\t * @param {Object} data An object describing the SpriteSheet data.\n\t * @protected\n\t **/\n  p._parseData = function (data) {\n    var i, l, o, a;\n    if (data == null) { return; }\n\n    this.framerate = data.framerate || 0;\n\n    // parse images:\n    if (data.images && (l = data.images.length) > 0) {\n      a = this._images = [];\n      for (i = 0; i < l; i++) {\n        var img = data.images[i];\n        if (typeof img == \"string\") {\n          var src = img;\n          img = document.createElement(\"img\");\n          img.src = src;\n        }\n        a.push(img);\n        if (!img.getContext && !img.naturalWidth) {\n          this._loadCount++;\n          this.complete = false;\n          (function (o, src) { img.onload = function () { o._handleImageLoad(src); } })(this, src);\n          (function (o, src) { img.onerror = function () { o._handleImageError(src); } })(this, src);\n        }\n      }\n    }\n\n    // parse frames:\n    if (data.frames == null) { // nothing\n    } else if (Array.isArray(data.frames)) {\n      this._frames = [];\n      a = data.frames;\n      for (i = 0, l = a.length; i < l; i++) {\n        var arr = a[i];\n        this._frames.push({ image: this._images[arr[4] ? arr[4] : 0], rect: new createjs.Rectangle(arr[0], arr[1], arr[2], arr[3]), regX: arr[5] || 0, regY: arr[6] || 0 });\n      }\n    } else {\n      o = data.frames;\n      this._frameWidth = o.width;\n      this._frameHeight = o.height;\n      this._regX = o.regX || 0;\n      this._regY = o.regY || 0;\n      this._spacing = o.spacing || 0;\n      this._margin = o.margin || 0;\n      this._numFrames = o.count;\n      if (this._loadCount == 0) { this._calculateFrames(); }\n    }\n\n    // parse animations:\n    this._animations = [];\n    if ((o = data.animations) != null) {\n      this._data = {};\n      var name;\n      for (name in o) {\n        var anim = { name: name };\n        var obj = o[name];\n        if (typeof obj == \"number\") { // single frame\n          a = anim.frames = [obj];\n        } else if (Array.isArray(obj)) { // simple\n          if (obj.length == 1) { anim.frames = [obj[0]]; }\n          else {\n            anim.speed = obj[3];\n            anim.next = obj[2];\n            a = anim.frames = [];\n            for (i = obj[0]; i <= obj[1]; i++) {\n              a.push(i);\n            }\n          }\n        } else { // complex\n          anim.speed = obj.speed;\n          anim.next = obj.next;\n          var frames = obj.frames;\n          a = anim.frames = (typeof frames == \"number\") ? [frames] : frames.slice(0);\n        }\n        if (anim.next === true || anim.next === undefined) { anim.next = name; } // loop\n        if (anim.next === false || (a.length < 2 && anim.next == name)) { anim.next = null; } // stop\n        if (!anim.speed) { anim.speed = 1; }\n        this._animations.push(name);\n        this._data[name] = anim;\n      }\n    }\n  };\n\n\t/**\n\t * @method _handleImageLoad\n\t * @protected\n\t **/\n  p._handleImageLoad = function (src) {\n    if (--this._loadCount == 0) {\n      this._calculateFrames();\n      this.complete = true;\n      this.dispatchEvent(\"complete\");\n    }\n  };\n\n\t/**\n\t * @method _handleImageError\n\t * @protected\n\t */\n  p._handleImageError = function (src) {\n    var errorEvent = new createjs.Event(\"error\");\n    errorEvent.src = src;\n    this.dispatchEvent(errorEvent);\n\n    // Complete is still dispatched.\n    if (--this._loadCount == 0) {\n      this.dispatchEvent(\"complete\");\n    }\n  };\n\n\t/**\n\t * @method _calculateFrames\n\t * @protected\n\t **/\n  p._calculateFrames = function () {\n    if (this._frames || this._frameWidth == 0) { return; }\n\n    this._frames = [];\n\n    var maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n    var frameCount = 0, frameWidth = this._frameWidth, frameHeight = this._frameHeight;\n    var spacing = this._spacing, margin = this._margin;\n\n    imgLoop:\n    for (var i = 0, imgs = this._images; i < imgs.length; i++) {\n      var img = imgs[i], imgW = (img.width || img.naturalWidth), imgH = (img.height || img.naturalHeight);\n\n      var y = margin;\n      while (y <= imgH - margin - frameHeight) {\n        var x = margin;\n        while (x <= imgW - margin - frameWidth) {\n          if (frameCount >= maxFrames) { break imgLoop; }\n          frameCount++;\n          this._frames.push({\n            image: img,\n            rect: new createjs.Rectangle(x, y, frameWidth, frameHeight),\n            regX: this._regX,\n            regY: this._regY\n          });\n          x += frameWidth + spacing;\n        }\n        y += frameHeight + spacing;\n      }\n    }\n    this._numFrames = frameCount;\n  };\n\n\n  createjs.SpriteSheet = createjs.promote(SpriteSheet, \"EventDispatcher\");\n}());\n\n//##############################################################################\n// Graphics.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n\t * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {{#crossLink \"Graphics/draw\"}}{{/crossLink}}\n\t * directly, or it can be used with the {{#crossLink \"Shape\"}}{{/crossLink}} object to draw vector graphics within the\n\t * context of an EaselJS display list.\n\t *\n\t * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n\t * instantiating Graphics command objects and adding them to the graphics queue via {{#crossLink \"Graphics/append\"}}{{/crossLink}}.\n\t * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n\t *\n\t *      var g = new createjs.Graphics();\n\t *      g.setStrokeStyle(1);\n\t *      g.beginStroke(\"#000000\");\n\t *      g.beginFill(\"red\");\n\t *      g.drawCircle(0,0,30);\n\t *\n\t * All drawing methods in Graphics return the Graphics instance, so they can be chained together. For example,\n\t * the following line of code would generate the instructions to draw a rectangle with a red stroke and blue fill:\n\t *\n\t *      myGraphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n\t *\n\t * Each graphics API call generates a command object (see below). The last command to be created can be accessed via\n\t * {{#crossLink \"Graphics/command:property\"}}{{/crossLink}}:\n\t *\n\t *      var fillCommand = myGraphics.beginFill(\"red\").command;\n\t *      // ... later, update the fill style/color:\n\t *      fillCommand.style = \"blue\";\n\t *      // or change it to a bitmap fill:\n\t *      fillCommand.bitmap(myImage);\n\t *\n\t * For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly. In this case, you\n\t * need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n\t *\n\t *      // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n\t *      myGraphics.append(createjs.Graphics.beginCmd);\n\t *      // we need to define the path before applying the fill:\n\t *      var circle = new createjs.Graphics.Circle(0,0,30);\n\t *      myGraphics.append(circle);\n\t *      // fill the path we just defined:\n\t *      var fill = new createjs.Graphics.Fill(\"red\");\n\t *      myGraphics.append(fill);\n\t *\n\t * These approaches can be used together, for example to insert a custom command:\n\t *\n\t *      myGraphics.beginFill(\"red\");\n\t *      var customCommand = new CustomSpiralCommand(etc);\n\t *      myGraphics.append(customCommand);\n\t *      myGraphics.beginFill(\"blue\");\n\t *      myGraphics.drawCircle(0, 0, 30);\n\t *\n\t * See {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more info on creating custom commands.\n\t *\n\t * <h4>Tiny API</h4>\n\t * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n\t * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n\t * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n\t * descriptions in the docs.\n\t *\n\t * <table>\n\t *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n\t *     <tr><td>mt</td><td>{{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} </td>\n\t *     <td>lt</td> <td>{{#crossLink \"Graphics/lineTo\"}}{{/crossLink}}</td></tr>\n\t *     <tr><td>a/at</td><td>{{#crossLink \"Graphics/arc\"}}{{/crossLink}} / {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} </td>\n\t *     <td>bt</td><td>{{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>qt</td><td>{{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} (also curveTo)</td>\n\t *     <td>r</td><td>{{#crossLink \"Graphics/rect\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>cp</td><td>{{#crossLink \"Graphics/closePath\"}}{{/crossLink}} </td>\n\t *     <td>c</td><td>{{#crossLink \"Graphics/clear\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>f</td><td>{{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} </td>\n\t *     <td>lf</td><td>{{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>rf</td><td>{{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} </td>\n\t *     <td>bf</td><td>{{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>ef</td><td>{{#crossLink \"Graphics/endFill\"}}{{/crossLink}} </td>\n\t *     <td>ss / sd</td><td>{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} / {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>s</td><td>{{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} </td>\n\t *     <td>ls</td><td>{{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>rs</td><td>{{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} </td>\n\t *     <td>bs</td><td>{{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>es</td><td>{{#crossLink \"Graphics/endStroke\"}}{{/crossLink}} </td>\n\t *     <td>dr</td><td>{{#crossLink \"Graphics/drawRect\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>rr</td><td>{{#crossLink \"Graphics/drawRoundRect\"}}{{/crossLink}} </td>\n\t *     <td>rc</td><td>{{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>dc</td><td>{{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} </td>\n\t *     <td>de</td><td>{{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>dp</td><td>{{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} </td>\n\t *     <td>p</td><td>{{#crossLink \"Graphics/decodePath\"}}{{/crossLink}} </td></tr>\n\t * </table>\n\t *\n\t * Here is the above example, using the tiny API instead.\n\t *\n\t *      myGraphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n\t *\n\t * @class Graphics\n\t * @constructor\n\t **/\n  function Graphics() {\n\n\n    // public properties\n\t\t/**\n\t\t * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n\t\t * to a Fill command in order to dynamically update the color later by using:\n\t\t *\n\t\t * \t\tvar myFill = myGraphics.beginFill(\"red\").command;\n\t\t * \t\t// update color later:\n\t\t * \t\tmyFill.style = \"yellow\";\n\t\t *\n\t\t * @property command\n\t\t * @type Object\n\t\t **/\n    this.command = null;\n\n\n    // private properties\n\t\t/**\n\t\t * @property _stroke\n\t\t * @protected\n\t\t * @type {Stroke}\n\t\t **/\n    this._stroke = null;\n\n\t\t/**\n\t\t * @property _strokeStyle\n\t\t * @protected\n\t\t * @type {StrokeStyle}\n\t\t **/\n    this._strokeStyle = null;\n\n\t\t/**\n\t\t * @property _oldStrokeStyle\n\t\t * @protected\n\t\t * @type {StrokeStyle}\n\t\t **/\n    this._oldStrokeStyle = null;\n\n\t\t/**\n\t\t * @property _strokeDash\n\t\t * @protected\n\t\t * @type {StrokeDash}\n\t\t **/\n    this._strokeDash = null;\n\n\t\t/**\n\t\t * @property _oldStrokeDash\n\t\t * @protected\n\t\t * @type {StrokeDash}\n\t\t **/\n    this._oldStrokeDash = null;\n\n\t\t/**\n\t\t * @property _strokeIgnoreScale\n\t\t * @protected\n\t\t * @type Boolean\n\t\t **/\n    this._strokeIgnoreScale = false;\n\n\t\t/**\n\t\t * @property _fill\n\t\t * @protected\n\t\t * @type {Fill}\n\t\t **/\n    this._fill = null;\n\n\t\t/**\n\t\t * @property _instructions\n\t\t * @protected\n\t\t * @type {Array}\n\t\t **/\n    this._instructions = [];\n\n\t\t/**\n\t\t * Indicates the last instruction index that was committed.\n\t\t * @property _commitIndex\n\t\t * @protected\n\t\t * @type {Number}\n\t\t **/\n    this._commitIndex = 0;\n\n\t\t/**\n\t\t * Uncommitted instructions.\n\t\t * @property _activeInstructions\n\t\t * @protected\n\t\t * @type {Array}\n\t\t **/\n    this._activeInstructions = [];\n\n\t\t/**\n\t\t * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n\t\t * @property _dirty\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t **/\n    this._dirty = false;\n\n\t\t/**\n\t\t * Index to draw from if a store operation has happened.\n\t\t * @property _storeIndex\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this._storeIndex = 0;\n\n    // setup:\n    this.clear();\n  }\n  var p = Graphics.prototype;\n  var G = Graphics; // shortcut\n\n  // static public methods:\n\t/**\n\t * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\". For example,\n\t *\n\t *      createjs.Graphics.getRGB(50, 100, 150, 0.5);\n\t *      // Returns \"rgba(50,100,150,0.5)\"\n\t *\n\t * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n\t * param. For example,\n\t *\n\t *      createjs.Graphics.getRGB(0xFF00FF, 0.2);\n\t *      // Returns \"rgba(255,0,255,0.2)\"\n\t *\n\t * @method getRGB\n\t * @static\n\t * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n\t * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n\t * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n\t **/\n  Graphics.getRGB = function (r, g, b, alpha) {\n    if (r != null && b == null) {\n      alpha = g;\n      b = r & 0xFF;\n      g = r >> 8 & 0xFF;\n      r = r >> 16 & 0xFF;\n    }\n    if (alpha == null) {\n      return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    } else {\n      return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n    }\n  };\n\n\t/**\n\t * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n\t * or if alpha is null then in the format \"hsl(360,100,100)\".\n\t *\n\t *      createjs.Graphics.getHSL(150, 100, 70);\n\t *      // Returns \"hsl(150,100,70)\"\n\t *\n\t * @method getHSL\n\t * @static\n\t * @param {Number} hue The hue component for the color, between 0 and 360.\n\t * @param {Number} saturation The saturation component for the color, between 0 and 100.\n\t * @param {Number} lightness The lightness component for the color, between 0 and 100.\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n\t * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n\t **/\n  Graphics.getHSL = function (hue, saturation, lightness, alpha) {\n    if (alpha == null) {\n      return \"hsl(\" + (hue % 360) + \",\" + saturation + \"%,\" + lightness + \"%)\";\n    } else {\n      return \"hsla(\" + (hue % 360) + \",\" + saturation + \"%,\" + lightness + \"%,\" + alpha + \")\";\n    }\n  };\n\n\n  // static properties:\n\t/**\n\t * A reusable instance of {{#crossLink \"Graphics/BeginPath\"}}{{/crossLink}} to avoid\n\t * unnecessary instantiation.\n\t * @property beginCmd\n\t * @type {Graphics.BeginPath}\n\t * @static\n\t **/\n  // defined at the bottom of this file.\n\n\t/**\n\t * Map of Base64 characters to values. Used by {{#crossLink \"Graphics/decodePath\"}}{{/crossLink}}.\n\t * @property BASE_64\n\t * @static\n\t * @final\n\t * @readonly\n\t * @type {Object}\n\t **/\n  Graphics.BASE_64 = { \"A\": 0, \"B\": 1, \"C\": 2, \"D\": 3, \"E\": 4, \"F\": 5, \"G\": 6, \"H\": 7, \"I\": 8, \"J\": 9, \"K\": 10, \"L\": 11, \"M\": 12, \"N\": 13, \"O\": 14, \"P\": 15, \"Q\": 16, \"R\": 17, \"S\": 18, \"T\": 19, \"U\": 20, \"V\": 21, \"W\": 22, \"X\": 23, \"Y\": 24, \"Z\": 25, \"a\": 26, \"b\": 27, \"c\": 28, \"d\": 29, \"e\": 30, \"f\": 31, \"g\": 32, \"h\": 33, \"i\": 34, \"j\": 35, \"k\": 36, \"l\": 37, \"m\": 38, \"n\": 39, \"o\": 40, \"p\": 41, \"q\": 42, \"r\": 43, \"s\": 44, \"t\": 45, \"u\": 46, \"v\": 47, \"w\": 48, \"x\": 49, \"y\": 50, \"z\": 51, \"0\": 52, \"1\": 53, \"2\": 54, \"3\": 55, \"4\": 56, \"5\": 57, \"6\": 58, \"7\": 59, \"8\": 60, \"9\": 61, \"+\": 62, \"/\": 63 };\n\n\t/**\n\t * Maps numeric values for the caps parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n\t * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\t * \"butt\", 1 to \"round\", and 2 to \"square\".\n\t * For example, to set the line caps to \"square\":\n\t *\n\t *      myGraphics.ss(16, 2);\n\t *\n\t * @property STROKE_CAPS_MAP\n\t * @static\n\t * @final\n\t * @readonly\n\t * @type {Array}\n\t **/\n  Graphics.STROKE_CAPS_MAP = [\"butt\", \"round\", \"square\"];\n\n\t/**\n\t * Maps numeric values for the joints parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n\t * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\t * \"miter\", 1 to \"round\", and 2 to \"bevel\".\n\t * For example, to set the line joints to \"bevel\":\n\t *\n\t *      myGraphics.ss(16, 0, 2);\n\t *\n\t * @property STROKE_JOINTS_MAP\n\t * @static\n\t * @final\n\t * @readonly\n\t * @type {Array}\n\t **/\n  Graphics.STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n\n\t/**\n\t * @property _ctx\n\t * @static\n\t * @protected\n\t * @type {CanvasRenderingContext2D}\n\t **/\n  var canvas = (createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\"));\n  if (canvas.getContext) {\n    Graphics._ctx = canvas.getContext(\"2d\");\n    canvas.width = canvas.height = 1;\n  }\n\n\n  // getter / setters:\n\t/**\n\t * Use the {{#crossLink \"Graphics/instructions:property\"}}{{/crossLink}} property instead.\n\t * @method _getInstructions\n\t * @protected\n\t * @return {Array} The instructions array, useful for chaining\n\t **/\n  p._getInstructions = function () {\n    this._updateInstructions();\n    return this._instructions;\n  };\n  // Graphics.getInstructions is @deprecated. Remove for 1.1+\n  p.getInstructions = createjs.deprecate(p._getInstructions, \"Graphics.getInstructions\");\n\n\t/**\n\t * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n\t * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n\t *\n\t * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n\t * @property instructions\n\t * @type {Array}\n\t * @readonly\n\t **/\n  try {\n    Object.defineProperties(p, {\n      instructions: { get: p._getInstructions }\n    });\n  } catch (e) { }\n\n\n  // public methods:\n\t/**\n\t * Returns true if this Graphics instance has no drawing commands.\n\t * @method isEmpty\n\t * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n\t **/\n  p.isEmpty = function () {\n    return !(this._instructions.length || this._activeInstructions.length);\n  };\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n\t **/\n  p.draw = function (ctx, data) {\n    this._updateInstructions();\n    var instr = this._instructions;\n    for (var i = this._storeIndex, l = instr.length; i < l; i++) {\n      instr[i].exec(ctx, data);\n    }\n  };\n\n\t/**\n\t * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n\t * stroke descriptions. Used for <code>DisplayObject.mask</code> to draw the clipping path, for example.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method drawAsPath\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t **/\n  p.drawAsPath = function (ctx) {\n    this._updateInstructions();\n    var instr, instrs = this._instructions;\n    for (var i = this._storeIndex, l = instrs.length; i < l; i++) {\n      // the first command is always a beginPath command.\n      if ((instr = instrs[i]).path !== false) { instr.exec(ctx); }\n    }\n  };\n\n\n  // public methods that map directly to context 2D calls:\n\t/**\n\t * Moves the drawing point to the specified position. A tiny API method \"mt\" also exists.\n\t * @method moveTo\n\t * @param {Number} x The x coordinate the drawing point should move to.\n\t * @param {Number} y The y coordinate the drawing point should move to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t * @chainable\n\t **/\n  p.moveTo = function (x, y) {\n    return this.append(new G.MoveTo(x, y), true);\n  };\n\n\t/**\n\t * Draws a line from the current drawing point to the specified position, which become the new current drawing\n\t * point. Note that you *must* call {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} before the first `lineTo()`.\n\t * A tiny API method \"lt\" also exists.\n\t *\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths)\">\n\t * whatwg spec</a>.\n\t * @method lineTo\n\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.lineTo = function (x, y) {\n    return this.append(new G.LineTo(x, y));\n  };\n\n\t/**\n\t * Draws an arc with the specified control points and radius.  For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto\">\n\t * whatwg spec</a>. A tiny API method \"at\" also exists.\n\t * @method arcTo\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.arcTo = function (x1, y1, x2, y2, radius) {\n    return this.append(new G.ArcTo(x1, y1, x2, y2, radius));\n  };\n\n\t/**\n\t * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y). For\n\t * example, to draw a full circle with a radius of 20 centered at (100, 100):\n\t *\n\t *      arc(100, 100, 20, 0, Math.PI*2);\n\t *\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc\">whatwg spec</a>.\n\t * A tiny API method \"a\" also exists.\n\t * @method arc\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle Measured in radians.\n\t * @param {Number} endAngle Measured in radians.\n\t * @param {Boolean} anticlockwise\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.arc = function (x, y, radius, startAngle, endAngle, anticlockwise) {\n    return this.append(new G.Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n  };\n\n\t/**\n\t * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy). For detailed\n\t * information, read the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto\">\n\t * whatwg spec</a>. A tiny API method \"qt\" also exists.\n\t * @method quadraticCurveTo\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.quadraticCurveTo = function (cpx, cpy, x, y) {\n    return this.append(new G.QuadraticCurveTo(cpx, cpy, x, y));\n  };\n\n\t/**\n\t * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x,\n\t * cp2y). For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto\">\n\t * whatwg spec</a>. A tiny API method \"bt\" also exists.\n\t * @method bezierCurveTo\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    return this.append(new G.BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n  };\n\n\t/**\n\t * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect\">\n\t * whatwg spec</a>. A tiny API method \"r\" also exists.\n\t * @method rect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.rect = function (x, y, w, h) {\n    return this.append(new G.Rect(x, y, w, h));\n  };\n\n\t/**\n\t * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n\t * since the fill or stroke was last set. A tiny API method \"cp\" also exists.\n\t * @method closePath\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.closePath = function () {\n    return this._activeInstructions.length ? this.append(new G.ClosePath()) : this;\n  };\n\n\n  // public methods that roughly map to Adobe Flash/Animate graphics APIs:\n\t/**\n\t * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n\t * to be redefined to draw shapes following a clear call. A tiny API method \"c\" also exists.\n\t * @method clear\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.clear = function () {\n    this._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n    this._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n    this._dirty = this._strokeIgnoreScale = false;\n    return this;\n  };\n\n\t/**\n\t * Begins a fill with the specified color. This ends the current sub-path. A tiny API method \"f\" also exists.\n\t * @method beginFill\n\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no fill.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.beginFill = function (color) {\n    return this._setFill(color ? new G.Fill(color) : null);\n  };\n\n\t/**\n\t * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t * square to display it:\n\t *\n\t *      myGraphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * A tiny API method \"lf\" also exists.\n\t * @method beginLinearGradientFill\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t * drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t * the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.beginLinearGradientFill = function (colors, ratios, x0, y0, x1, y1) {\n    return this._setFill(new G.Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n  };\n\n\t/**\n\t * Begins a radial gradient fill. This ends the current sub-path. For example, the following code defines a red to\n\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a circle to display it:\n\t *\n\t *      myGraphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n\t *\n\t * A tiny API method \"rf\" also exists.\n\t * @method beginRadialGradientFill\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.beginRadialGradientFill = function (colors, ratios, x0, y0, r0, x1, y1, r1) {\n    return this._setFill(new G.Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n  };\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. A tiny API method \"bf\" also\n\t * exists.\n\t * @method beginBitmapFill\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t * will be applied relative to the parent transform.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.beginBitmapFill = function (image, repetition, matrix) {\n    return this._setFill(new G.Fill(null, matrix).bitmap(image, repetition));\n  };\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no fill. Functionally identical to <code>beginFill(null)</code>.\n\t * A tiny API method \"ef\" also exists.\n\t * @method endFill\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.endFill = function () {\n    return this.beginFill();\n  };\n\n\t/**\n\t * Sets the stroke style. Like all drawing methods, this can be chained, so you can define\n\t * the stroke style and color in a single line of code like so:\n\t *\n\t * \tmyGraphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n\t *\n\t * A tiny API method \"ss\" also exists.\n\t * @method setStrokeStyle\n\t * @param {Number} thickness The width of the stroke.\n\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t * the tiny API.\n\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t * for use with the tiny API.\n\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t * controls at what point a mitered joint will be clipped.\n\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t * of active transformations.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.setStrokeStyle = function (thickness, caps, joints, miterLimit, ignoreScale) {\n    this._updateInstructions(true);\n    this._strokeStyle = this.command = new G.StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale);\n\n    // ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n    if (this._stroke) { this._stroke.ignoreScale = ignoreScale; }\n    this._strokeIgnoreScale = ignoreScale;\n    return this;\n  };\n\n\t/**\n\t * Sets or clears the stroke dash pattern.\n\t *\n\t * \tmyGraphics.setStrokeDash([20, 10], 0);\n\t *\n\t * A tiny API method `sd` also exists.\n\t * @method setStrokeDash\n\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t * Passing null or an empty array will clear the existing stroke dash.\n\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.setStrokeDash = function (segments, offset) {\n    this._updateInstructions(true);\n    this._strokeDash = this.command = new G.StrokeDash(segments, offset);\n    return this;\n  };\n\n\t/**\n\t * Begins a stroke with the specified color. This ends the current sub-path. A tiny API method \"s\" also exists.\n\t * @method beginStroke\n\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no stroke.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.beginStroke = function (color) {\n    return this._setStroke(color ? new G.Stroke(color) : null);\n  };\n\n\t/**\n\t * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t * square to display it:\n\t *\n\t *      myGraphics.setStrokeStyle(10).\n\t *          beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * A tiny API method \"ls\" also exists.\n\t * @method beginLinearGradientStroke\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.beginLinearGradientStroke = function (colors, ratios, x0, y0, x1, y1) {\n    return this._setStroke(new G.Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n  };\n\n\t/**\n\t * Begins a radial gradient stroke. This ends the current sub-path. For example, the following code defines a red to\n\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a rectangle to display it:\n\t *\n\t *      myGraphics.setStrokeStyle(10)\n\t *          .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n\t *          .drawRect(50, 90, 150, 110);\n\t *\n\t * A tiny API method \"rs\" also exists.\n\t * @method beginRadialGradientStroke\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t * to 100%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.beginRadialGradientStroke = function (colors, ratios, x0, y0, r0, x1, y1, r1) {\n    return this._setStroke(new G.Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n  };\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n\t * strokes do not currently support a matrix parameter due to limitations in the canvas API. A tiny API method \"bs\"\n\t * also exists.\n\t * @method beginBitmapStroke\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.beginBitmapStroke = function (image, repetition) {\n    // NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n    return this._setStroke(new G.Stroke().bitmap(image, repetition));\n  };\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to <code>beginStroke(null)</code>.\n\t * A tiny API method \"es\" also exists.\n\t * @method endStroke\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.endStroke = function () {\n    return this.beginStroke();\n  };\n\n\t/**\n\t * Maps the familiar ActionScript <code>curveTo()</code> method to the functionally similar {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}}\n\t * method.\n\t * @method curveTo\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.curveTo = p.quadraticCurveTo;\n\n\t/**\n\t *\n\t * Maps the familiar ActionScript <code>drawRect()</code> method to the functionally similar {{#crossLink \"Graphics/rect\"}}{{/crossLink}}\n\t * method.\n\t * @method drawRect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.drawRect = p.rect;\n\n\t/**\n\t * Draws a rounded rectangle with all corners with the specified radius.\n\t * @method drawRoundRect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radius Corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.drawRoundRect = function (x, y, w, h, radius) {\n    return this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n  };\n\n\t/**\n\t * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii. A tiny API\n\t * method \"rc\" also exists.\n\t * @method drawRoundRectComplex\n\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t * @param {Number} w The width of the round rect.\n\t * @param {Number} h The height of the round rect.\n\t * @param {Number} radiusTL Top left corner radius.\n\t * @param {Number} radiusTR Top right corner radius.\n\t * @param {Number} radiusBR Bottom right corner radius.\n\t * @param {Number} radiusBL Bottom left corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.drawRoundRectComplex = function (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n    return this.append(new G.RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n  };\n\n\t/**\n\t * Draws a circle with the specified radius at (x, y).\n\t *\n\t *      var g = new createjs.Graphics();\n\t *\t    g.setStrokeStyle(1);\n\t *\t    g.beginStroke(createjs.Graphics.getRGB(0,0,0));\n\t *\t    g.beginFill(createjs.Graphics.getRGB(255,0,0));\n\t *\t    g.drawCircle(0,0,3);\n\t *\n\t *\t    var s = new createjs.Shape(g);\n\t *\t\ts.x = 100;\n\t *\t\ts.y = 100;\n\t *\n\t *\t    stage.addChild(s);\n\t *\t    stage.update();\n\t *\n\t * A tiny API method \"dc\" also exists.\n\t * @method drawCircle\n\t * @param {Number} x x coordinate center point of circle.\n\t * @param {Number} y y coordinate center point of circle.\n\t * @param {Number} radius Radius of circle.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.drawCircle = function (x, y, radius) {\n    return this.append(new G.Circle(x, y, radius));\n  };\n\n\t/**\n\t * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}},\n\t * except the width and height can be different. A tiny API method \"de\" also exists.\n\t * @method drawEllipse\n\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from center.\n\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from the center.\n\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t * number.\n\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.drawEllipse = function (x, y, w, h) {\n    return this.append(new G.Ellipse(x, y, w, h));\n  };\n\n\t/**\n\t * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of\n\t * points. For example, the following code will draw a familiar 5 pointed star shape centered at 100, 100 and with a\n\t * radius of 50:\n\t *\n\t *      myGraphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n\t *      // Note: -90 makes the first point vertical\n\t *\n\t * A tiny API method \"dp\" also exists.\n\t *\n\t * @method drawPolyStar\n\t * @param {Number} x Position of the center of the shape.\n\t * @param {Number} y Position of the center of the shape.\n\t * @param {Number} radius The outer radius of the shape.\n\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t * directly to the right of the center.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.drawPolyStar = function (x, y, radius, sides, pointSize, angle) {\n    return this.append(new G.PolyStar(x, y, radius, sides, pointSize, angle));\n  };\n\n\t/**\n\t * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n\t * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n\t * {{#crossLink \"Graphics/draw\"}}{{/crossLink}}. The latter will usually be the Shape instance that called draw.\n\t *\n\t * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n\t * built-in or custom graphics commands. For example:\n\t *\n\t * \t\t// attach data to our shape, so we can access it during the draw:\n\t * \t\tmyShape.color = \"red\";\n\t *\n\t * \t\t// append a Circle command object:\n\t * \t\tmyShape.graphics.append(new createjs.Graphics.Circle(50, 50, 30));\n\t *\n\t * \t\t// append a custom command object with an exec method that sets the fill style\n\t * \t\t// based on the shape's data, and then fills the circle.\n\t * \t\tmyShape.graphics.append({exec:function(ctx, shape) {\n\t * \t\t\tctx.fillStyle = shape.color;\n\t * \t\t\tctx.fill();\n\t * \t\t}});\n\t *\n\t * @method append\n\t * @param {Object} command A graphics command object exposing an \"exec\" method.\n\t * @param {boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.append = function (command, clean) {\n    this._activeInstructions.push(command);\n    this.command = command;\n    if (!clean) { this._dirty = true; }\n    return this;\n  };\n\n\t/**\n\t * Decodes a compact encoded path string into a series of draw instructions.\n\t * This format is not intended to be human readable, and is meant for use by authoring tools.\n\t * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n\t * commands.\n\t *\n\t * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n\t * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n\t * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n\t * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n\t * latter. Bits 5 and 6 are currently unused.\n\t *\n\t * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n\t * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n\t * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n\t * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n\t * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n\t * appropriate).\n\t *\n\t * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n\t * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n\t * parameter.\n\t * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n\t * indicate 1500 tenths of a pixel.\n\t * <br />AA - 000000000000. Absolute y position of 0.\n\t * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n\t * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n\t * provide an absolute position of +150.0px.\n\t * <br />AAA - 000000000000000000. A y delta value of 0.\n\t *\n\t * A tiny API method \"p\" also exists.\n\t * @method decodePath\n\t * @param {String} str The path string to decode.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.decodePath = function (str) {\n    var instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n    var paramCount = [2, 2, 4, 6, 0];\n    var i = 0, l = str.length;\n    var params = [];\n    var x = 0, y = 0;\n    var base64 = Graphics.BASE_64;\n\n    while (i < l) {\n      var c = str.charAt(i);\n      var n = base64[c];\n      var fi = n >> 3; // highest order bits 1-3 code for operation.\n      var f = instructions[fi];\n      // check that we have a valid instruction & that the unused bits are empty:\n      if (!f || (n & 3)) { throw (\"bad path data (@\" + i + \"): \" + c); }\n      var pl = paramCount[fi];\n      if (!fi) { x = y = 0; } // move operations reset the position.\n      params.length = 0;\n      i++;\n      var charCount = (n >> 2 & 1) + 2;  // 4th header bit indicates number size for this operation.\n      for (var p = 0; p < pl; p++) {\n        var num = base64[str.charAt(i)];\n        var sign = (num >> 5) ? -1 : 1;\n        num = ((num & 31) << 6) | (base64[str.charAt(i + 1)]);\n        if (charCount == 3) { num = (num << 6) | (base64[str.charAt(i + 2)]); }\n        num = sign * num / 10;\n        if (p % 2) { x = (num += x); }\n        else { y = (num += y); }\n        params[p] = num;\n        i += charCount;\n      }\n      f.apply(this, params);\n    }\n    return this;\n  };\n\n\t/**\n\t * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n\t * the existing store. This also affects `drawAsPath()`.\n\t *\n\t * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n\t * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n\t * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n\t *\n\t * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n\t * the fill or stroke.\n\t *\n\t * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n\t * segments) are added to a Shape, it can be rasterized using {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}},\n\t * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVG.\n\t *\n\t * \t// set up cache:\n\t * \tmyShape.cache(0,0,500,500,scale);\n\t *\n\t * \t// when the user drags, draw a new line:\n\t * \tmyShape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n\t * \t// then draw it into the existing cache:\n\t * \tmyShape.updateCache(\"source-over\");\n\t * \t// store the new line, so it isn't redrawn next time:\n\t * \tmyShape.store();\n\t *\n\t * \t// then, when the window resizes, we can re-render at a different scale:\n\t * \t// first, unstore all our lines:\n\t * \tmyShape.unstore();\n\t * \t// then cache using the new scale:\n\t * \tmyShape.cache(0,0,500,500,newScale);\n\t * \t// finally, store the existing commands again:\n\t * \tmyShape.store();\n\t *\n\t * @method store\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.store = function () {\n    this._updateInstructions(true);\n    this._storeIndex = this._instructions.length;\n    return this;\n  };\n\n\t/**\n\t * Unstores any graphics commands that were previously stored using {{#crossLink \"Graphics/store\"}}{{/crossLink}}\n\t * so that they will be executed in subsequent draw calls.\n\t *\n\t * @method unstore\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.unstore = function () {\n    this._storeIndex = 0;\n    return this;\n  };\n\n\t/**\n\t * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n\t * @method clone\n\t * @return {Graphics} A clone of the current Graphics instance.\n\t **/\n  p.clone = function () {\n    var o = new Graphics();\n    o.command = this.command;\n    o._stroke = this._stroke;\n    o._strokeStyle = this._strokeStyle;\n    o._strokeDash = this._strokeDash;\n    o._strokeIgnoreScale = this._strokeIgnoreScale;\n    o._fill = this._fill;\n    o._instructions = this._instructions.slice();\n    o._commitIndex = this._commitIndex;\n    o._activeInstructions = this._activeInstructions.slice();\n    o._dirty = this._dirty;\n    o._storeIndex = this._storeIndex;\n    return o;\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[Graphics]\";\n  };\n\n\n  // tiny API:\n\t/**\n\t * Shortcut to moveTo.\n\t * @method mt\n\t * @param {Number} x The x coordinate the drawing point should move to.\n\t * @param {Number} y The y coordinate the drawing point should move to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t * @chainable\n\t * @protected\n\t **/\n  p.mt = p.moveTo;\n\n\t/**\n\t * Shortcut to lineTo.\n\t * @method lt\n\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.lt = p.lineTo;\n\n\t/**\n\t * Shortcut to arcTo.\n\t * @method at\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.at = p.arcTo;\n\n\t/**\n\t * Shortcut to bezierCurveTo.\n\t * @method bt\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.bt = p.bezierCurveTo;\n\n\t/**\n\t * Shortcut to quadraticCurveTo / curveTo.\n\t * @method qt\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t * @chainable\n\t **/\n  p.qt = p.quadraticCurveTo;\n\n\t/**\n\t * Shortcut to arc.\n\t * @method a\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle Measured in radians.\n\t * @param {Number} endAngle Measured in radians.\n\t * @param {Boolean} anticlockwise\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @protected\n\t * @chainable\n\t **/\n  p.a = p.arc;\n\n\t/**\n\t * Shortcut to rect.\n\t * @method r\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.r = p.rect;\n\n\t/**\n\t * Shortcut to closePath.\n\t * @method cp\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.cp = p.closePath;\n\n\t/**\n\t * Shortcut to clear.\n\t * @method c\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.c = p.clear;\n\n\t/**\n\t * Shortcut to beginFill.\n\t * @method f\n\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no fill.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.f = p.beginFill;\n\n\t/**\n\t * Shortcut to beginLinearGradientFill.\n\t * @method lf\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t * drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t * the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.lf = p.beginLinearGradientFill;\n\n\t/**\n\t * Shortcut to beginRadialGradientFill.\n\t * @method rf\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.rf = p.beginRadialGradientFill;\n\n\t/**\n\t * Shortcut to beginBitmapFill.\n\t * @method bf\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern.\n\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t * will be applied relative to the parent transform.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.bf = p.beginBitmapFill;\n\n\t/**\n\t * Shortcut to endFill.\n\t * @method ef\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.ef = p.endFill;\n\n\t/**\n\t * Shortcut to setStrokeStyle.\n\t * @method ss\n\t * @param {Number} thickness The width of the stroke.\n\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t * the tiny API.\n\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t * for use with the tiny API.\n\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t * controls at what point a mitered joint will be clipped.\n\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t * of active transformations.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.ss = p.setStrokeStyle;\n\n\t/**\n\t * Shortcut to setStrokeDash.\n\t * @method sd\n\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t * For example, [20,10] would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t * Passing null or an empty array will clear any existing dash.\n\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.sd = p.setStrokeDash;\n\n\t/**\n\t * Shortcut to beginStroke.\n\t * @method s\n\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no stroke.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.s = p.beginStroke;\n\n\t/**\n\t * Shortcut to beginLinearGradientStroke.\n\t * @method ls\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.ls = p.beginLinearGradientStroke;\n\n\t/**\n\t * Shortcut to beginRadialGradientStroke.\n\t * @method rs\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t * to 100%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.rs = p.beginRadialGradientStroke;\n\n\t/**\n\t * Shortcut to beginBitmapStroke.\n\t * @method bs\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern.\n\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.bs = p.beginBitmapStroke;\n\n\t/**\n\t * Shortcut to endStroke.\n\t * @method es\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.es = p.endStroke;\n\n\t/**\n\t * Shortcut to drawRect.\n\t * @method dr\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.dr = p.drawRect;\n\n\t/**\n\t * Shortcut to drawRoundRect.\n\t * @method rr\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radius Corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.rr = p.drawRoundRect;\n\n\t/**\n\t * Shortcut to drawRoundRectComplex.\n\t * @method rc\n\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t * @param {Number} w The width of the round rect.\n\t * @param {Number} h The height of the round rect.\n\t * @param {Number} radiusTL Top left corner radius.\n\t * @param {Number} radiusTR Top right corner radius.\n\t * @param {Number} radiusBR Bottom right corner radius.\n\t * @param {Number} radiusBL Bottom left corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.rc = p.drawRoundRectComplex;\n\n\t/**\n\t * Shortcut to drawCircle.\n\t * @method dc\n\t * @param {Number} x x coordinate center point of circle.\n\t * @param {Number} y y coordinate center point of circle.\n\t * @param {Number} radius Radius of circle.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.dc = p.drawCircle;\n\n\t/**\n\t * Shortcut to drawEllipse.\n\t * @method de\n\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from center.\n\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from the center.\n\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t * number.\n\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.de = p.drawEllipse;\n\n\t/**\n\t * Shortcut to drawPolyStar.\n\t * @method dp\n\t * @param {Number} x Position of the center of the shape.\n\t * @param {Number} y Position of the center of the shape.\n\t * @param {Number} radius The outer radius of the shape.\n\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t * directly to the right of the center.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.dp = p.drawPolyStar;\n\n\t/**\n\t * Shortcut to decodePath.\n\t * @method p\n\t * @param {String} str The path string to decode.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n  p.p = p.decodePath;\n\n\n  // private methods:\n\t/**\n\t * @method _updateInstructions\n\t * @param commit\n\t * @protected\n\t **/\n  p._updateInstructions = function (commit) {\n    var instr = this._instructions, active = this._activeInstructions, commitIndex = this._commitIndex;\n\n    if (this._dirty && active.length) {\n      instr.length = commitIndex; // remove old, uncommitted commands\n      instr.push(Graphics.beginCmd);\n\n      var l = active.length, ll = instr.length;\n      instr.length = ll + l;\n      for (var i = 0; i < l; i++) { instr[i + ll] = active[i]; }\n\n      if (this._fill) { instr.push(this._fill); }\n      if (this._stroke) {\n        // doesn't need to be re-applied if it hasn't changed.\n        if (this._strokeDash !== this._oldStrokeDash) {\n          instr.push(this._strokeDash);\n        }\n        if (this._strokeStyle !== this._oldStrokeStyle) {\n          instr.push(this._strokeStyle);\n        }\n        if (commit) {\n          this._oldStrokeStyle = this._strokeStyle;\n          this._oldStrokeDash = this._strokeDash;\n        }\n        instr.push(this._stroke);\n      }\n\n      this._dirty = false;\n    }\n\n    if (commit) {\n      active.length = 0;\n      this._commitIndex = instr.length;\n    }\n  };\n\n\t/**\n\t * @method _setFill\n\t * @param fill\n\t * @protected\n\t **/\n  p._setFill = function (fill) {\n    this._updateInstructions(true);\n    this.command = this._fill = fill;\n    return this;\n  };\n\n\t/**\n\t * @method _setStroke\n\t * @param stroke\n\t * @protected\n\t **/\n  p._setStroke = function (stroke) {\n    this._updateInstructions(true);\n    if (this.command = this._stroke = stroke) {\n      stroke.ignoreScale = this._strokeIgnoreScale;\n    }\n    return this;\n  };\n\n  // Command Objects:\n\t/**\n\t * @namespace Graphics\n\t */\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/lineTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class LineTo\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  (G.LineTo = function (x, y) {\n    this.x = x; this.y = y;\n  }).prototype.exec = function (ctx) { ctx.lineTo(this.x, this.y); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class MoveTo\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n  (G.MoveTo = function (x, y) {\n    this.x = x; this.y = y;\n  }).prototype.exec = function (ctx) { ctx.moveTo(this.x, this.y); };\n\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class ArcTo\n\t * @constructor\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t **/\n\t/**\n\t * @property x1\n\t * @type Number\n\t */\n\t/**\n\t * @property y1\n\t * @type Number\n\t */\n\t/**\n\t * @property x2\n\t * @type Number\n\t */\n\t/**\n\t * @property y2\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  (G.ArcTo = function (x1, y1, x2, y2, radius) {\n    this.x1 = x1; this.y1 = y1;\n    this.x2 = x2; this.y2 = y2;\n    this.radius = radius;\n  }).prototype.exec = function (ctx) { ctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/arc\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Arc\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle\n\t * @param {Number} endAngle\n\t * @param {Number} anticlockwise\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * @property startAngle\n\t * @type Number\n\t */\n\t/**\n\t * @property endAngle\n\t * @type Number\n\t */\n\t/**\n\t * @property anticlockwise\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  (G.Arc = function (x, y, radius, startAngle, endAngle, anticlockwise) {\n    this.x = x; this.y = y;\n    this.radius = radius;\n    this.startAngle = startAngle; this.endAngle = endAngle;\n    this.anticlockwise = !!anticlockwise;\n  }).prototype.exec = function (ctx) { ctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class QuadraticCurveTo\n\t * @constructor\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property cpx\n\t * @type Number\n\t */\n\t/**\n\t * @property cpy\n\t * @type Number\n\t */\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  (G.QuadraticCurveTo = function (cpx, cpy, x, y) {\n    this.cpx = cpx; this.cpy = cpy;\n    this.x = x; this.y = y;\n  }).prototype.exec = function (ctx) { ctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class BezierCurveTo\n\t * @constructor\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property cp1x\n\t * @type Number\n\t */\n\t/**\n\t * @property cp1y\n\t * @type Number\n\t */\n\t/**\n\t * @property cp2x\n\t * @type Number\n\t */\n\t/**\n\t * @property cp2y\n\t * @type Number\n\t */\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  (G.BezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    this.cp1x = cp1x; this.cp1y = cp1y;\n    this.cp2x = cp2x; this.cp2y = cp2y;\n    this.x = x; this.y = y;\n  }).prototype.exec = function (ctx) { ctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/rect\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Rect\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property w\n\t * @type Number\n\t */\n\t/**\n\t * @property h\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  (G.Rect = function (x, y, w, h) {\n    this.x = x; this.y = y;\n    this.w = w; this.h = h;\n  }).prototype.exec = function (ctx) { ctx.rect(this.x, this.y, this.w, this.h); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/closePath\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class ClosePath\n\t * @constructor\n\t **/\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  (G.ClosePath = function () {\n  }).prototype.exec = function (ctx) { ctx.closePath(); };\n\n\t/**\n\t * Graphics command object to begin a new path. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class BeginPath\n\t * @constructor\n\t **/\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  (G.BeginPath = function () {\n  }).prototype.exec = function (ctx) { ctx.beginPath(); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Fill\n\t * @constructor\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Matrix2D} matrix\n\t **/\n\t/**\n\t * A valid Context2D fillStyle.\n\t * @property style\n\t * @type Object\n\t */\n\t/**\n\t * @property matrix\n\t * @type Matrix2D\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  p = (G.Fill = function (style, matrix) {\n    this.style = style;\n    this.matrix = matrix;\n  }).prototype;\n  p.exec = function (ctx) {\n    if (!this.style) { return; }\n    ctx.fillStyle = this.style;\n    var mtx = this.matrix;\n    if (mtx) { ctx.save(); ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty); }\n    ctx.fill();\n    if (mtx) { ctx.restore(); }\n  };\n\t/**\n\t * Creates a linear gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} for more information.\n\t * @method linearGradient\n\t * @param {Array} colors\n\t *\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n  p.linearGradient = function (colors, ratios, x0, y0, x1, y1) {\n    var o = this.style = Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n    for (var i = 0, l = colors.length; i < l; i++) { o.addColorStop(ratios[i], colors[i]); }\n    o.props = { colors: colors, ratios: ratios, x0: x0, y0: y0, x1: x1, y1: y1, type: \"linear\" };\n    return this;\n  };\n\t/**\n\t * Creates a radial gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} for more information.\n\t * @method radialGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n  p.radialGradient = function (colors, ratios, x0, y0, r0, x1, y1, r1) {\n    var o = this.style = Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n    for (var i = 0, l = colors.length; i < l; i++) { o.addColorStop(ratios[i], colors[i]); }\n    o.props = { colors: colors, ratios: ratios, x0: x0, y0: y0, r0: r0, x1: x1, y1: y1, r1: r1, type: \"radial\" };\n    return this;\n  };\n\t/**\n\t * Creates a bitmap fill style and assigns it to the {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} for more information.\n\t * @method bitmap\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n  p.bitmap = function (image, repetition) {\n    if (image.naturalWidth || image.getContext || image.readyState >= 2) {\n      var o = this.style = Graphics._ctx.createPattern(image, repetition || \"\");\n      o.props = { image: image, repetition: repetition, type: \"bitmap\" };\n    }\n    return this;\n  };\n  p.path = false;\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Stroke\n\t * @constructor\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Boolean} ignoreScale\n\t **/\n\t/**\n\t * A valid Context2D strokeStyle.\n\t * @property style\n\t * @type Object\n\t */\n\t/**\n\t * @property ignoreScale\n\t * @type Boolean\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  p = (G.Stroke = function (style, ignoreScale) {\n    this.style = style;\n    this.ignoreScale = ignoreScale;\n  }).prototype;\n  p.exec = function (ctx) {\n    if (!this.style) { return; }\n    ctx.strokeStyle = this.style;\n    if (this.ignoreScale) { ctx.save(); ctx.setTransform(1, 0, 0, 1, 0, 0); }\n    ctx.stroke();\n    if (this.ignoreScale) { ctx.restore(); }\n  };\n\t/**\n\t * Creates a linear gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} for more information.\n\t * @method linearGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n  p.linearGradient = G.Fill.prototype.linearGradient;\n\t/**\n\t * Creates a radial gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} for more information.\n\t * @method radialGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n  p.radialGradient = G.Fill.prototype.radialGradient;\n\t/**\n\t * Creates a bitmap fill style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} for more information.\n\t * @method bitmap\n\t * @param {HTMLImageElement} image\n\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n  p.bitmap = G.Fill.prototype.bitmap;\n  p.path = false;\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class StrokeStyle\n\t * @constructor\n\t * @param {Number} width\n\t * @param {String} [caps=butt]\n\t * @param {String} [joints=miter]\n\t * @param {Number} [miterLimit=10]\n\t * @param {Boolean} [ignoreScale=false]\n\t **/\n\t/**\n\t * @property width\n\t * @type Number\n\t */\n\t/**\n\t * One of: butt, round, square\n\t * @property caps\n\t * @type String\n\t */\n\t/**\n\t * One of: round, bevel, miter\n\t * @property joints\n\t * @type String\n\t */\n\t/**\n\t * @property miterLimit\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  p = (G.StrokeStyle = function (width, caps, joints, miterLimit, ignoreScale) {\n    this.width = width;\n    this.caps = caps;\n    this.joints = joints;\n    this.miterLimit = miterLimit;\n    this.ignoreScale = ignoreScale;\n  }).prototype;\n  p.exec = function (ctx) {\n    ctx.lineWidth = (this.width == null ? \"1\" : this.width);\n    ctx.lineCap = (this.caps == null ? \"butt\" : (isNaN(this.caps) ? this.caps : Graphics.STROKE_CAPS_MAP[this.caps]));\n    ctx.lineJoin = (this.joints == null ? \"miter\" : (isNaN(this.joints) ? this.joints : Graphics.STROKE_JOINTS_MAP[this.joints]));\n    ctx.miterLimit = (this.miterLimit == null ? \"10\" : this.miterLimit);\n    ctx.ignoreScale = (this.ignoreScale == null ? false : this.ignoreScale);\n  };\n  p.path = false;\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class StrokeDash\n\t * @constructor\n\t * @param {Array} [segments]\n\t * @param {Number} [offset=0]\n\t **/\n\t/**\n\t * @property segments\n\t * @type Array\n\t */\n\t/**\n\t * @property offset\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  (G.StrokeDash = function (segments, offset) {\n    this.segments = segments;\n    this.offset = offset || 0;\n  }).prototype.exec = function (ctx) {\n    if (ctx.setLineDash) { // feature detection.\n      ctx.setLineDash(this.segments || G.StrokeDash.EMPTY_SEGMENTS); // instead of [] to reduce churn.\n      ctx.lineDashOffset = this.offset || 0;\n    }\n  };\n\t/**\n\t * The default value for segments (ie. no dash).\n\t * @property EMPTY_SEGMENTS\n\t * @static\n\t * @final\n\t * @readonly\n\t * @protected\n\t * @type {Array}\n\t **/\n  G.StrokeDash.EMPTY_SEGMENTS = [];\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class RoundRect\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radiusTL\n\t * @param {Number} radiusTR\n\t * @param {Number} radiusBR\n\t * @param {Number} radiusBL\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property w\n\t * @type Number\n\t */\n\t/**\n\t * @property h\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusTL\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusTR\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusBR\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusBL\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  (G.RoundRect = function (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n    this.x = x; this.y = y;\n    this.w = w; this.h = h;\n    this.radiusTL = radiusTL; this.radiusTR = radiusTR;\n    this.radiusBR = radiusBR; this.radiusBL = radiusBL;\n  }).prototype.exec = function (ctx) {\n    var max = (w < h ? w : h) / 2;\n    var mTL = 0, mTR = 0, mBR = 0, mBL = 0;\n    var x = this.x, y = this.y, w = this.w, h = this.h;\n    var rTL = this.radiusTL, rTR = this.radiusTR, rBR = this.radiusBR, rBL = this.radiusBL;\n\n    if (rTL < 0) { rTL *= (mTL = -1); }\n    if (rTL > max) { rTL = max; }\n    if (rTR < 0) { rTR *= (mTR = -1); }\n    if (rTR > max) { rTR = max; }\n    if (rBR < 0) { rBR *= (mBR = -1); }\n    if (rBR > max) { rBR = max; }\n    if (rBL < 0) { rBL *= (mBL = -1); }\n    if (rBL > max) { rBL = max; }\n\n    ctx.moveTo(x + w - rTR, y);\n    ctx.arcTo(x + w + rTR * mTR, y - rTR * mTR, x + w, y + rTR, rTR);\n    ctx.lineTo(x + w, y + h - rBR);\n    ctx.arcTo(x + w + rBR * mBR, y + h + rBR * mBR, x + w - rBR, y + h, rBR);\n    ctx.lineTo(x + rBL, y + h);\n    ctx.arcTo(x - rBL * mBL, y + h + rBL * mBL, x, y + h - rBL, rBL);\n    ctx.lineTo(x, y + rTL);\n    ctx.arcTo(x - rTL * mTL, y - rTL * mTL, x + rTL, y, rTL);\n    ctx.closePath();\n  };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Circle\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  (G.Circle = function (x, y, radius) {\n    this.x = x; this.y = y;\n    this.radius = radius;\n  }).prototype.exec = function (ctx) { ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Ellipse\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property w\n\t * @type Number\n\t */\n\t/**\n\t * @property h\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  (G.Ellipse = function (x, y, w, h) {\n    this.x = x; this.y = y;\n    this.w = w; this.h = h;\n  }).prototype.exec = function (ctx) {\n    var x = this.x, y = this.y;\n    var w = this.w, h = this.h;\n\n    var k = 0.5522848;\n    var ox = (w / 2) * k;\n    var oy = (h / 2) * k;\n    var xe = x + w;\n    var ye = y + h;\n    var xm = x + w / 2;\n    var ym = y + h / 2;\n\n    ctx.moveTo(x, ym);\n    ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class PolyStar\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} sides\n\t * @param {Number} pointSize\n\t * @param {Number} angle\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * @property sides\n\t * @type Number\n\t */\n\t/**\n\t * @property pointSize\n\t * @type Number\n\t */\n\t/**\n\t * @property angle\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n  (G.PolyStar = function (x, y, radius, sides, pointSize, angle) {\n    this.x = x; this.y = y;\n    this.radius = radius;\n    this.sides = sides;\n    this.pointSize = pointSize;\n    this.angle = angle;\n  }).prototype.exec = function (ctx) {\n    var x = this.x, y = this.y;\n    var radius = this.radius;\n    var angle = (this.angle || 0) / 180 * Math.PI;\n    var sides = this.sides;\n    var ps = 1 - (this.pointSize || 0);\n    var a = Math.PI / sides;\n\n    ctx.moveTo(x + Math.cos(angle) * radius, y + Math.sin(angle) * radius);\n    for (var i = 0; i < sides; i++) {\n      angle += a;\n      if (ps != 1) {\n        ctx.lineTo(x + Math.cos(angle) * radius * ps, y + Math.sin(angle) * radius * ps);\n      }\n      angle += a;\n      ctx.lineTo(x + Math.cos(angle) * radius, y + Math.sin(angle) * radius);\n    }\n    ctx.closePath();\n  };\n\n  // docced above.\n  Graphics.beginCmd = new G.BeginPath(); // so we don't have to instantiate multiple instances.\n\n\n  createjs.Graphics = Graphics;\n}());\n\n//##############################################################################\n// DisplayObject.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\n\t * {{#crossLink \"Container\"}}{{/crossLink}}, {{#crossLink \"Bitmap\"}}{{/crossLink}}, and {{#crossLink \"Shape\"}}{{/crossLink}}.\n\t * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\n\t * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\n\t * caching, and mouse handlers.\n\t * @class DisplayObject\n\t * @extends EventDispatcher\n\t * @constructor\n\t **/\n  function DisplayObject() {\n    this.EventDispatcher_constructor();\n\n\n    // public properties:\n\t\t/**\n\t\t * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\n\t\t * @property alpha\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t **/\n    this.alpha = 1;\n\n\t\t/**\n\t\t * If a cache is active, this returns the canvas that holds the image of this display object. See {{#crossLink \"DisplayObject/cache:method\"}}{{/crossLink}}\n\t\t * for more information. Use this to display the result of a cache. This will be a HTMLCanvasElement unless special cache rules have been deliberately enabled for this cache.\n\t\t * @property cacheCanvas\n\t\t * @type {HTMLCanvasElement | Object}\n\t\t * @default null\n\t\t * @readonly\n\t\t **/\n    this.cacheCanvas = null;\n\n\t\t/**\n\t\t * If a cache has been made, this returns the class that is managing the cacheCanvas and its properties. See {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t\t * for more information. Use this to control, inspect, and change the cache. In special circumstances this may be a modified or subclassed BitmapCache.\n\t\t * @property bitmapCache\n\t\t * @type {BitmapCache}\n\t\t * @default null\n\t\t * @readonly\n\t\t **/\n    this.bitmapCache = null;\n\n\t\t/**\n\t\t * Unique ID for this display object. Makes display objects easier for some uses.\n\t\t * @property id\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t **/\n    this.id = createjs.UID.get();\n\n\t\t/**\n\t\t * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\n\t\t * of a {{#crossLink \"Container\"}}{{/crossLink}} will cause events on the Container to not fire when that child is\n\t\t * clicked. Setting this property to `false` does not prevent the {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}\n\t\t * method from returning the child.\n\t\t *\n\t\t * <strong>Note:</strong> In EaselJS 0.7.0, the mouseEnabled property will not work properly with nested Containers. Please\n\t\t * check out the latest NEXT version in <a href=\"https://github.com/CreateJS/EaselJS/tree/master/lib\">GitHub</a> for an updated version with this issue resolved. The fix will be\n\t\t * provided in the next release of EaselJS.\n\t\t * @property mouseEnabled\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t **/\n    this.mouseEnabled = true;\n\n\t\t/**\n\t\t * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\n\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, and DOMElement display properties).\n\t\t * @property tickEnabled\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n    this.tickEnabled = true;\n\n\t\t/**\n\t\t * An optional name for this display object. Included in {{#crossLink \"DisplayObject/toString\"}}{{/crossLink}} . Useful for\n\t\t * debugging.\n\t\t * @property name\n\t\t * @type {String}\n\t\t * @default null\n\t\t **/\n    this.name = null;\n\n\t\t/**\n\t\t * A reference to the {{#crossLink \"Container\"}}{{/crossLink}} or {{#crossLink \"Stage\"}}{{/crossLink}} object that\n\t\t * contains this display object, or null if it has not been added\n\t\t * to one.\n\t\t * @property parent\n\t\t * @final\n\t\t * @type {Container}\n\t\t * @default null\n\t\t * @readonly\n\t\t **/\n    this.parent = null;\n\n\t\t/**\n\t\t * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\n\t\t * around its center, you would set regX and {{#crossLink \"DisplayObject/regY:property\"}}{{/crossLink}} to 50.\n\t\t * Cached object's registration points should be set based on pre-cache conditions, not cached size.\n\t\t * @property regX\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this.regX = 0;\n\n\t\t/**\n\t\t * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\n\t\t * its center, you would set {{#crossLink \"DisplayObject/regX:property\"}}{{/crossLink}} and regY to 50.\n\t\t * Cached object's registration points should be set based on pre-cache conditions, not cached size.\n\t\t * @property regY\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this.regY = 0;\n\n\t\t/**\n\t\t * The rotation in degrees for this display object.\n\t\t * @property rotation\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this.rotation = 0;\n\n\t\t/**\n\t\t * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\n\t\t * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\n\t\t * @property scaleX\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t **/\n    this.scaleX = 1;\n\n\t\t/**\n\t\t * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\n\t\t * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\n\t\t * @property scaleY\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t **/\n    this.scaleY = 1;\n\n\t\t/**\n\t\t * The factor to skew this display object horizontally.\n\t\t * @property skewX\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this.skewX = 0;\n\n\t\t/**\n\t\t * The factor to skew this display object vertically.\n\t\t * @property skewY\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this.skewY = 0;\n\n\t\t/**\n\t\t * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\n\t\t * null, this property is inherited from the parent container.\n\t\t * @property shadow\n\t\t * @type {Shadow}\n\t\t * @default null\n\t\t **/\n    this.shadow = null;\n\n\t\t/**\n\t\t * Indicates whether this display object should be rendered to the canvas and included when running the Stage\n\t\t * {{#crossLink \"Stage/getObjectsUnderPoint\"}}{{/crossLink}} method.\n\t\t * @property visible\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t **/\n    this.visible = true;\n\n\t\t/**\n\t\t * The x (horizontal) position of the display object, relative to its parent.\n\t\t * @property x\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this.x = 0;\n\n\t\t/** The y (vertical) position of the display object, relative to its parent.\n\t\t * @property y\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this.y = 0;\n\n\t\t/**\n\t\t * If set, defines the transformation for this display object, overriding all other transformation properties\n\t\t * (x, y, rotation, scale, skew).\n\t\t * @property transformMatrix\n\t\t * @type {Matrix2D}\n\t\t * @default null\n\t\t **/\n    this.transformMatrix = null;\n\n\t\t/**\n\t\t * The composite operation indicates how the pixels of this display object will be composited with the elements\n\t\t * behind it. If `null`, this property is inherited from the parent container. For more information, read the\n\t\t * <a href=\"https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-globalcompositeoperation\">\n\t\t * whatwg spec on compositing</a>. For a list of supported compositeOperation value, visit\n\t\t * <a href=\"https://drafts.fxtf.org/compositing/\">the W3C draft on Compositing and Blending</a>.\n\t\t * @property compositeOperation\n\t\t * @type {String}\n\t\t * @default null\n\t\t **/\n    this.compositeOperation = null;\n\n\t\t/**\n\t\t * Indicates whether the display object should be drawn to a whole pixel when\n\t\t * {{#crossLink \"Stage/snapToPixelEnabled\"}}{{/crossLink}} is true. To enable/disable snapping on whole\n\t\t * categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\n\t\t * @property snapToPixel\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t **/\n    this.snapToPixel = true;\n\n\t\t/**\n\t\t * An array of Filter objects to apply to this display object. Filters are only applied / updated when {{#crossLink \"cache\"}}{{/crossLink}}\n\t\t * or {{#crossLink \"updateCache\"}}{{/crossLink}} is called on the display object, and only apply to the area that is\n\t\t * cached.\n\t\t * @property filters\n\t\t * @type {Array}\n\t\t * @default null\n\t\t **/\n    this.filters = null;\n\n\t\t/**\n\t\t * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\n\t\t * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\n\t\t * @property mask\n\t\t * @type {Shape}\n\t\t * @default null\n\t\t */\n    this.mask = null;\n\n\t\t/**\n\t\t * A display object that will be tested when checking mouse interactions or testing {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}.\n\t\t * The hit area will have its transformation applied relative to this display object's coordinate space (as though\n\t\t * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\n\t\t * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\n\t\t * ancestors (parents).\n\t\t * \n\t\t * If set on a {{#crossLink \"Container\"}}{{/crossLink}}, children of the Container will not receive mouse events.\n\t\t * This is similar to setting {{#crossLink \"mouseChildren\"}}{{/crossLink}} to false.\n\t\t *\n\t\t * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {{#crossLink \"Stage\"}}{{/crossLink}}.\n\t\t * @property hitArea\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n    this.hitArea = null;\n\n\t\t/**\n\t\t * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\n\t\t * object. You must enable mouseover events using the {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}} method to\n\t\t * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\n\t\t * @property cursor\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n    this.cursor = null;\n\n\n    // private properties:\n\t\t/**\n\t\t * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t\t * @property _cacheScale\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t * @deprecated\n\t\t **/\n\n\t\t/**\n\t\t * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t\t * @property _cacheDataURLID\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @deprecated\n\t\t */\n\n\t\t/**\n\t\t * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t\t * @property _cacheDataURL\n\t\t * @protected\n\t\t * @type {String}\n\t\t * @default null\n\t\t * @deprecated\n\t\t */\n\n\t\t/**\n\t\t * @property _props\n\t\t * @protected\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t **/\n    this._props = new createjs.DisplayProps();\n\n\t\t/**\n\t\t * @property _rectangle\n\t\t * @protected\n\t\t * @type {Rectangle}\n\t\t * @default null\n\t\t **/\n    this._rectangle = new createjs.Rectangle();\n\n\t\t/**\n\t\t * @property _bounds\n\t\t * @protected\n\t\t * @type {Rectangle}\n\t\t * @default null\n\t\t **/\n    this._bounds = null;\n\n\t\t/**\n\t\t * Where StageGL should look for required display properties, matters only for leaf display objects. Containers\n\t\t * or cached objects won't use this property, it's for native display of terminal elements.\n\t\t * @property _webGLRenderStyle\n\t\t * @protected\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n    this._webGLRenderStyle = DisplayObject._StageGL_NONE;\n  }\n  var p = createjs.extend(DisplayObject, createjs.EventDispatcher);\n\n  // static properties:\n\t/**\n\t * Listing of mouse event names. Used in _hasMouseEventListener.\n\t * @property _MOUSE_EVENTS\n\t * @protected\n\t * @static\n\t * @type {Array}\n\t **/\n  DisplayObject._MOUSE_EVENTS = [\"click\", \"dblclick\", \"mousedown\", \"mouseout\", \"mouseover\", \"pressmove\", \"pressup\", \"rollout\", \"rollover\"];\n\n\t/**\n\t * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\n\t * with cross domain content.\n\t * @property suppressCrossDomainErrors\n\t * @static\n\t * @type {Boolean}\n\t * @default false\n\t **/\n  DisplayObject.suppressCrossDomainErrors = false;\n\n\t/**\n\t * @property _snapToPixelEnabled\n\t * @protected\n\t * @static\n\t * @type {Boolean}\n\t * @default false\n\t **/\n  DisplayObject._snapToPixelEnabled = false; // stage.snapToPixelEnabled is temporarily copied here during a draw to provide global access.\n\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_NONE\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n  DisplayObject._StageGL_NONE = 0;\n\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_SPRITE\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n  DisplayObject._StageGL_SPRITE = 1;\n\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_BITMAP\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n  DisplayObject._StageGL_BITMAP = 2;\n\n\t/**\n\t * @property _hitTestCanvas\n\t * @type {HTMLCanvasElement | Object}\n\t * @static\n\t * @protected\n\t **/\n\t/**\n\t * @property _hitTestContext\n\t * @type {CanvasRenderingContext2D}\n\t * @static\n\t * @protected\n\t **/\n  var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\n  if (canvas.getContext) {\n    DisplayObject._hitTestCanvas = canvas;\n    DisplayObject._hitTestContext = canvas.getContext(\"2d\");\n    canvas.width = canvas.height = 1;\n  }\n\n  // events:\n\t/**\n\t * Dispatched when the user presses their left mouse button over the display object. See the \n\t * {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mousedown\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user presses their left mouse button and then releases it while over the display object.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event click\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user double clicks their left mouse button over this display object.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event dblclick\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user's mouse enters this display object. This event must be enabled using \n\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mouseover\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user's mouse leaves this display object. This event must be enabled using \n\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mouseout\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * This event is similar to {{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}, with the following\n\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\n\t * aggregate of their content.\n\t * \n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n\t * shapeA and then directly on to shapeB. With a listener for {{#crossLink \"mouseover:event\"}}{{/crossLink}} on\n\t * myContainer, two events would be received, each targeting a child element:<OL>\n\t * <LI>when the mouse enters shapeA (target=shapeA)</LI>\n\t * <LI>when the mouse enters shapeB (target=shapeB)</LI>\n\t * </OL>\n\t * However, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\n\t * the aggregate myContainer content (target=myContainer).\n\t * \n\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event rollover\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * This event is similar to {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}, with the following\n\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\n\t * aggregate of their content.\n\t * \n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n\t * shapeA, then directly on to shapeB, then off both. With a listener for {{#crossLink \"mouseout:event\"}}{{/crossLink}}\n\t * on myContainer, two events would be received, each targeting a child element:<OL>\n\t * <LI>when the mouse leaves shapeA (target=shapeA)</LI>\n\t * <LI>when the mouse leaves shapeB (target=shapeB)</LI>\n\t * </OL>\n\t * However, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\n\t * the aggregate myContainer content (target=myContainer).\n\t * \n\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event rollout\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressmove\n\t * event will be generated on that object whenever the mouse moves until the mouse press is released. This can be\n\t * useful for dragging and similar operations.\n\t *\n\t * **Please note** that if the initial mouse target from a `mousedown` event is removed from the stage after being pressed\n\t * (e.g. during a `pressmove` event), a `pressmove` event is still generated. However since it is no longer in the\n\t * display list, the event can not bubble. This means that previous ancestors (parent containers) will not receive\n\t * the event, and therefore can not re-dispatch it. If you intend to listen for `{{#crossLink \"DisplayObject/pressup:event\"}}{{/crossLink}}`\n\t * or `pressmove` on a dynamic object (such as a {{#crossLink \"MovieClip\"}}{{/crossLink}} or {{#crossLink \"Container\"}}{{/crossLink}}),\n\t * then ensure you set {{#crossLink \"Container/mouseChildren:property\"}}{{/crossLink}} to `false`.\n\t * @event pressmove\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressup event\n\t * will be generated on that object when that mouse press is released. This can be useful for dragging and similar\n\t * operations.\n\t *\n\t * **Please note** that if the initial mouse target from a `mousedown` event is removed from the stage after being pressed\n\t * (e.g. during a `pressmove` event), a `pressup` event is still generated. However since it is no longer in the\n\t * display list, the event can not bubble. This means that previous ancestors (parent containers) will not receive\n\t * the event, and therefore can not re-dispatch it. If you intend to listen for `{{#crossLink \"DisplayObject/pressmove:event\"}}{{/crossLink}}`\n\t * or `pressup` on a dynamic object (such as a {{#crossLink \"MovieClip\"}}{{/crossLink}} or {{#crossLink \"Container\"}}{{/crossLink}}),\n\t * then ensure you set {{#crossLink \"Container/mouseChildren:property\"}}{{/crossLink}} to `false`.\n\t * @event pressup\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched when the display object is added to a parent container.\n\t * @event added\n\t */\n\n\t/**\n\t * Dispatched when the display object is removed from its parent container.\n\t * @event removed\n\t */\n\n\t/**\n\t * Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\n\t * rendering (draw) pass. When {{#crossLink \"Stage/update\"}}{{/crossLink}} is called, first all display objects on\n\t * the stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\n\t * {{#crossLink \"tick:event\"}}{{/crossLink}} event dispatched in order of their depth prior to the event being\n\t * dispatched on their parent.\n\t * @event tick\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Array} params An array containing any arguments that were passed to the Stage.update() method. For\n\t *      example if you called stage.update(\"hello\"), then the params would be [\"hello\"].\n\t * @since 0.6.0\n\t */\n\n\n  // getter / setters:\n\t/**\n\t * Use the {{#crossLink \"DisplayObject/stage:property\"}}{{/crossLink}} property instead.\n\t * @method _getStage\n\t * @protected\n\t * @return {Stage}\n\t **/\n  p._getStage = function () {\n    // uses dynamic access to avoid circular dependencies;\n    var o = this, _Stage = createjs[\"Stage\"];\n    while (o.parent) { o = o.parent; }\n    if (o instanceof _Stage) { return o; }\n    return null;\n  };\n  // DisplayObject.getStage is @deprecated. Remove for 1.1+\n  p.getStage = createjs.deprecate(p._getStage, \"DisplayObject.getStage\");\n\n\t/**\n\t * Returns the Stage instance that this display object will be rendered on, or null if it has not been added to one.\n\t * @property stage\n\t * @type {Stage}\n\t * @readonly\n\t **/\n\n\t/**\n\t * Returns an ID number that uniquely identifies the current cache for this display object. This can be used to\n\t * determine if the cache has changed since a previous check.\n\t * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t * @property cacheID\n\t * @deprecated\n\t * @type {Number}\n\t * @default 0\n\t */\n\n\t/**\n\t * Set both the {{#crossLink \"DisplayObject/scaleX:property\"}}{{/crossLink}} and the {{#crossLink \"DisplayObject/scaleY\"}}{{/crossLink}}\n\t * property to the same value. Note that when you get the value, if the `scaleX` and `scaleY` are different values,\n\t * it will return only the `scaleX`.\n\t * @property scale\n\t * @type {Number}\n\t * @default 1\n\t */\n  try {\n    Object.defineProperties(p, {\n      stage: { get: p._getStage },\n      cacheID: {\n        get: function () { return this.bitmapCache && this.bitmapCache.cacheID },\n        set: function (a) { this.bitmapCache && (this.bitmapCache.cacheID = a) }\n      },\n      scale: {\n        get: function () { return this.scaleX; },\n        set: function (scale) { this.scaleX = this.scaleY = scale; }\n      }\n    });\n  } catch (e) { }\n\n\n  // public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n  p.isVisible = function () {\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n  };\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns <code>true</code> if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t **/\n  p.draw = function (ctx, ignoreCache) {\n    var cache = this.bitmapCache;\n    if (cache && !ignoreCache) {\n      return cache.draw(ctx);\n    }\n    return false;\n  };\n\n\t/**\n\t * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\n\t * to the specified context. This is typically called prior to {{#crossLink \"DisplayObject/draw\"}}{{/crossLink}}.\n\t * @method updateContext\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\n\t **/\n  p.updateContext = function (ctx) {\n    var o = this, mask = o.mask, mtx = o._props.matrix;\n\n    if (mask && mask.graphics && !mask.graphics.isEmpty()) {\n      mask.getMatrix(mtx);\n      ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\n      mask.graphics.drawAsPath(ctx);\n      ctx.clip();\n\n      mtx.invert();\n      ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n    }\n\n    this.getMatrix(mtx);\n    var tx = mtx.tx, ty = mtx.ty;\n    if (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\n      tx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\n      ty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\n    }\n    ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, tx, ty);\n    ctx.globalAlpha *= o.alpha;\n    if (o.compositeOperation) { ctx.globalCompositeOperation = o.compositeOperation; }\n    if (o.shadow) { this._applyShadow(ctx, o.shadow); }\n  };\n\n\t/**\n\t * Draws the display object into a new element, which is then used for subsequent draws. Intended for complex content\n\t * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\n\t * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\n\t * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must manually\n\t * update the cache by calling <code>updateCache()</code> again. You must specify the cached area via the x, y, w,\n\t * and h parameters. This defines the rectangle that will be rendered and cached using this display object's coordinates.\n\t *\n\t * <h4>Example</h4>\n\t * For example if you defined a Shape that drew a circle at 0, 0 with a radius of 25:\n\t *\n\t *      var shape = new createjs.Shape();\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t *      shape.cache(-25, -25, 50, 50);\n\t *\n\t * Note that filters need to be defined <em>before</em> the cache is applied or you will have to call updateCache after\n\t * application. Check out the {{#crossLink \"Filter\"}}{{/crossLink}} class for more information. Some filters\n\t * (ex. BlurFilter) may not work as expected in conjunction with the scale param.\n\t * \n\t * Usually, the resulting cacheCanvas will have the dimensions width * scale, height * scale, however some filters (ex. BlurFilter)\n\t * will add padding to the canvas dimensions.\n\t *\n\t * In previous versions caching was handled on DisplayObject but has since been moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}.\n\t * This allows for easier interaction and alternate cache methods like WebGL with {{#crossLink \"StageGL\"}}{{/crossLink}}.\n\t * For more information on the options object, see the BitmapCache {{#crossLink \"BitmapCache/define\"}}{{/crossLink}}.\n\t *\n\t * @method cache\n\t * @param {Number} x The x coordinate origin for the cache region.\n\t * @param {Number} y The y coordinate origin for the cache region.\n\t * @param {Number} width The width of the cache region.\n\t * @param {Number} height The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n\t * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n\t * \tcached elements with greater fidelity. Default is 1.\n\t * @param {Object} [options=undefined] Specify additional parameters for the cache logic\n\t **/\n  p.cache = function (x, y, width, height, scale, options) {\n    if (!this.bitmapCache) {\n      this.bitmapCache = new createjs.BitmapCache();\n    }\n    this.bitmapCache.define(this, x, y, width, height, scale, options);\n  };\n\n\t/**\n\t * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\n\t * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\n\t * will be drawn over the existing cache using the specified compositeOperation.\n\t *\n\t * <h4>Example</h4>\n\t * Clear the current graphics of a cached shape, draw some new instructions, and then update the cache. The new line\n\t * will be drawn on top of the old one.\n\t *\n\t *      // Not shown: Creating the shape, and caching it.\n\t *      shapeInstance.clear();\n\t *      shapeInstance.setStrokeStyle(3).beginStroke(\"#ff0000\").moveTo(100, 100).lineTo(200,200);\n\t *      shapeInstance.updateCache();\n\t *\n\t * In previous versions caching was handled on DisplayObject but has since been moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}.\n\t * This allows for easier interaction and alternate cache methods like WebGL and {{#crossLink \"StageGL\"}}{{/crossLink}}.\n\t *\n\t * @method updateCache\n\t * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\n\t * <a href=\"https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-globalcompositeoperation\">\n\t * whatwg spec on compositing</a>.\n\t **/\n  p.updateCache = function (compositeOperation) {\n    if (!this.bitmapCache) {\n      throw \"cache() must be called before updateCache()\";\n    }\n    this.bitmapCache.update(compositeOperation);\n  };\n\n\t/**\n\t * Clears the current cache. See {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} for more information.\n\t * @method uncache\n\t **/\n  p.uncache = function () {\n    if (this.bitmapCache) {\n      this.bitmapCache.release();\n      this.bitmapCache = undefined;\n    }\n  };\n\n\t/**\n\t * Returns a data URL for the cache, or null if this display object is not cached.\n\t * Only generated if the cache has changed, otherwise returns last result.\n\t * @method getCacheDataURL\n\t * @return {String} The image data url for the cache.\n\t **/\n  p.getCacheDataURL = function () {\n    return this.bitmapCache ? this.bitmapCache.getDataURL() : null;\n  };\n\n\t/**\n\t * Transforms the specified x and y position from the coordinate space of the display object\n\t * to the global (stage) coordinate space. For example, this could be used to position an HTML label\n\t * over a specific point on a nested display object. Returns a Point instance with x and y properties\n\t * correlating to the transformed coordinates on the stage.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.x = 300;\n\t *      displayObject.y = 200;\n\t *      stage.addChild(displayObject);\n\t *      var point = displayObject.localToGlobal(100, 100);\n\t *      // Results in x=400, y=300\n\t *\n\t * @method localToGlobal\n\t * @param {Number} x The x position in the source display object to transform.\n\t * @param {Number} y The y position in the source display object to transform.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \n\t * @return {Point} A Point instance with x and y properties correlating to the transformed coordinates\n\t * on the stage.\n\t **/\n  p.localToGlobal = function (x, y, pt) {\n    return this.getConcatenatedMatrix(this._props.matrix).transformPoint(x, y, pt || new createjs.Point());\n  };\n\n\t/**\n\t * Transforms the specified x and y position from the global (stage) coordinate space to the\n\t * coordinate space of the display object. For example, this could be used to determine\n\t * the current mouse position within the display object. Returns a Point instance with x and y properties\n\t * correlating to the transformed position in the display object's coordinate space.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.x = 300;\n\t *      displayObject.y = 200;\n\t *      stage.addChild(displayObject);\n\t *      var point = displayObject.globalToLocal(100, 100);\n\t *      // Results in x=-200, y=-100\n\t *\n\t * @method globalToLocal\n\t * @param {Number} x The x position on the stage to transform.\n\t * @param {Number} y The y position on the stage to transform.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \n\t * @return {Point} A Point instance with x and y properties correlating to the transformed position in the\n\t * display object's coordinate space.\n\t **/\n  p.globalToLocal = function (x, y, pt) {\n    return this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x, y, pt || new createjs.Point());\n  };\n\n\t/**\n\t * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\n\t * space of the target display object. Returns a Point instance with x and y properties correlating to the\n\t * transformed position in the target's coordinate space. Effectively the same as using the following code with\n\t * {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\n\t *\n\t *      var pt = this.localToGlobal(x, y);\n\t *      pt = target.globalToLocal(pt.x, pt.y);\n\t *\n\t * @method localToLocal\n\t * @param {Number} x The x position in the source display object to transform.\n\t * @param {Number} y The y position on the source display object to transform.\n\t * @param {DisplayObject} target The target display object to which the coordinates will be transformed.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \n\t * @return {Point} Returns a Point instance with x and y properties correlating to the transformed position\n\t * in the target's coordinate space.\n\t **/\n  p.localToLocal = function (x, y, target, pt) {\n    pt = this.localToGlobal(x, y, pt);\n    return target.globalToLocal(pt.x, pt.y, pt);\n  };\n\n\t/**\n\t * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\n\t * Omitted parameters will have the default value set.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.setTransform(100, 100, 2, 2);\n\t *\n\t * @method setTransform\n\t * @param {Number} [x=0] The horizontal translation (x position) in pixels\n\t * @param {Number} [y=0] The vertical translation (y position) in pixels\n\t * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\n\t * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\n\t * @param {Number} [rotation=0] The rotation, in degrees\n\t * @param {Number} [skewX=0] The horizontal skew factor\n\t * @param {Number} [skewY=0] The vertical skew factor\n\t * @param {Number} [regX=0] The horizontal registration point in pixels\n\t * @param {Number} [regY=0] The vertical registration point in pixels\n\t * @return {DisplayObject} Returns this instance. Useful for chaining commands.\n\t * @chainable\n\t*/\n  p.setTransform = function (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.scaleX = scaleX == null ? 1 : scaleX;\n    this.scaleY = scaleY == null ? 1 : scaleY;\n    this.rotation = rotation || 0;\n    this.skewX = skewX || 0;\n    this.skewY = skewY || 0;\n    this.regX = regX || 0;\n    this.regY = regY || 0;\n    return this;\n  };\n\n\t/**\n\t * Returns a matrix based on this object's current transform.\n\t * @method getMatrix\n\t * @param {Matrix2D} matrix Optional. A Matrix2D object to populate with the calculated values. If null, a new\n\t * Matrix object is returned.\n\t * @return {Matrix2D} A matrix representing this display object's transform.\n\t **/\n  p.getMatrix = function (matrix) {\n    var o = this, mtx = matrix && matrix.identity() || new createjs.Matrix2D();\n    return o.transformMatrix ? mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n  };\n\n\t/**\n\t * Generates a Matrix2D object representing the combined transform of the display object and all of its\n\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}). This can\n\t * be used to transform positions between coordinate spaces, such as with {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\n\t * @method getConcatenatedMatrix\n\t * @param {Matrix2D} [matrix] A {{#crossLink \"Matrix2D\"}}{{/crossLink}} object to populate with the calculated values.\n\t * If null, a new Matrix2D object is returned.\n\t * @return {Matrix2D} The combined matrix.\n\t **/\n  p.getConcatenatedMatrix = function (matrix) {\n    var o = this, mtx = this.getMatrix(matrix);\n    while (o = o.parent) {\n      mtx.prependMatrix(o.getMatrix(o._props.matrix));\n    }\n    return mtx;\n  };\n\n\t/**\n\t * Generates a DisplayProps object representing the combined display properties of the  object and all of its\n\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}).\n\t * @method getConcatenatedDisplayProps\n\t * @param {DisplayProps} [props] A {{#crossLink \"DisplayProps\"}}{{/crossLink}} object to populate with the calculated values.\n\t * If null, a new DisplayProps object is returned.\n\t * @return {DisplayProps} The combined display properties.\n\t **/\n  p.getConcatenatedDisplayProps = function (props) {\n    props = props ? props.identity() : new createjs.DisplayProps();\n    var o = this, mtx = o.getMatrix(props.matrix);\n    do {\n      props.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation);\n\n      // we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\n      // this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\n      if (o != this) { mtx.prependMatrix(o.getMatrix(o._props.matrix)); }\n    } while (o = o.parent);\n    return props;\n  };\n\n\t/**\n\t * Tests whether the display object intersects the specified point in local coordinates (ie. draws a pixel with alpha > 0 at\n\t * the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation of the display object.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      stage.addEventListener(\"stagemousedown\", handleMouseDown);\n\t *      function handleMouseDown(event) {\n\t *          var hit = myShape.hitTest(event.stageX, event.stageY);\n\t *      }\n\t *\n\t * Please note that shape-to-shape collision is not currently supported by EaselJS.\n\t * @method hitTest\n\t * @param {Number} x The x position to check in the display object's local coordinates.\n\t * @param {Number} y The y position to check in the display object's local coordinates.\n\t * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\n\t * local Point.\n\t*/\n  p.hitTest = function (x, y) {\n    var ctx = DisplayObject._hitTestContext;\n    ctx.setTransform(1, 0, 0, 1, -x, -y);\n    this.draw(ctx);\n\n    var hit = this._testHit(ctx);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, 2, 2);\n    return hit;\n  };\n\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var myGraphics = new createjs.Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t *      var shape = stage.addChild(new Shape()).set({graphics:myGraphics, x:100, y:100, alpha:0.5});\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\n\t * @return {DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t*/\n  p.set = function (props) {\n    for (var n in props) { this[n] = props[n]; }\n    return this;\n  };\n\n\t/**\n\t * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\n\t * Objects that have been cached will return the bounds of the cache.\n\t * \n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \n\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\n\t * bounds.\n\t * \n\t * <table>\n\t * \t<tr><td><b>All</b></td><td>\n\t * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\n\t * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\n\t * \t\tthe automatic calculations listed below.\n\t * \t</td></tr>\n\t * \t<tr><td><b>Bitmap</b></td><td>\n\t * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\n\t * \t</td></tr>\n\t * \t<tr><td><b>Sprite</b></td><td>\n\t * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\n\t * \t\tin the spritesheet data. See also {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}}\n\t * \t</td></tr>\n\t * \t<tr><td><b>Container</b></td><td>\n\t * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\n\t * \t</td></tr>\n\t * \t<tr><td><b>Shape</b></td><td>\n\t * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\n\t * \t</td></tr>\n\t * \t<tr><td><b>Text</b></td><td>\n\t * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\n\t * \t\tnot, especially when using textBaseline values other than \"top\".\n\t * \t</td></tr>\n\t * \t<tr><td><b>BitmapText</b></td><td>\n\t * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\n\t * \t\tto (x=0,y=0).\n\t * \t</td></tr>\n\t* </table>\n\t * \n\t * Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\n\t * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\n\t * bounds explicitly:\n\t * \n\t * \tvar bounds = obj.getBounds();\n\t * \tobj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\n\t * \t// getBounds will now use the set values, instead of recalculating\n\t * \n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n\t * values if you need to retain it.\n\t * \n\t * \tvar myBounds = obj.getBounds().clone();\n\t * \t// OR:\n\t * \tmyRect.copy(obj.getBounds());\n\t * \n\t * @method getBounds\n\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this\n\t * object.\n\t **/\n  p.getBounds = function () {\n    if (this._bounds) { return this._rectangle.copy(this._bounds); }\n    var cache = this.bitmapCache;\n    if (cache) {\n      return cache.getBounds();\n    }\n    return null;\n  };\n\n\t/**\n\t * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\n\t * Objects that have been cached will return the transformed bounds of the cache.\n\t * \n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \n\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\n\t * bounds.\n\t * \n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n\t * values if you need to retain it.\n\t * \n\t * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\n\t * @method getTransformedBounds\n\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n\t **/\n  p.getTransformedBounds = function () {\n    return this._getBounds();\n  };\n\n\t/**\n\t * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\n\t * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\n\t * override calculated bounds.\n\t * \n\t * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\n\t * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\n\t * @method setBounds\n\t * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\n\t * @param {Number} y The y origin of the bounds.\n\t * @param {Number} width The width of the bounds.\n\t * @param {Number} height The height of the bounds.\n\t **/\n  p.setBounds = function (x, y, width, height) {\n    if (x == null) { this._bounds = x; return; }\n    this._bounds = (this._bounds || new createjs.Rectangle()).setValues(x, y, width, height);\n  };\n\n\t/**\n\t * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\n\t * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\n\t * are copied by reference (masks, individual filter instances, hit area)\n\t * @method clone\n\t * @return {DisplayObject} A clone of the current DisplayObject instance.\n\t **/\n  p.clone = function () {\n    return this._cloneProps(new DisplayObject());\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[DisplayObject (name=\" + this.name + \")]\";\n  };\n\n\n  // private methods:\n\t/**\n\t * Called before the object gets drawn and is a chance to ensure the display state of the object is correct.\n\t * Mostly used by {{#crossLink \"MovieClip\"}}{{/crossLink}} and {{#crossLink \"BitmapText\"}}{{/crossLink}} to\n\t * correct their internal state and children prior to being drawn.\n\t *\n\t * Is manually called via draw in a {{#crossLink \"Stage\"}}{{/crossLink}} but is automatically called when\n\t * present in a {{#crossLink \"StageGL\"}}{{/crossLink}} instance.\n\t *\n\t * @method _updateState\n\t * @default null\n\t */\n  p._updateState = null;\n\n  // separated so it can be used more easily in subclasses:\n\t/**\n\t * @method _cloneProps\n\t * @param {DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\n\t * instance copied into.\n\t * @return {DisplayObject} o\n\t * @protected\n\t **/\n  p._cloneProps = function (o) {\n    o.alpha = this.alpha;\n    o.mouseEnabled = this.mouseEnabled;\n    o.tickEnabled = this.tickEnabled;\n    o.name = this.name;\n    o.regX = this.regX;\n    o.regY = this.regY;\n    o.rotation = this.rotation;\n    o.scaleX = this.scaleX;\n    o.scaleY = this.scaleY;\n    o.shadow = this.shadow;\n    o.skewX = this.skewX;\n    o.skewY = this.skewY;\n    o.visible = this.visible;\n    o.x = this.x;\n    o.y = this.y;\n    o.compositeOperation = this.compositeOperation;\n    o.snapToPixel = this.snapToPixel;\n    o.filters = this.filters == null ? null : this.filters.slice(0);\n    o.mask = this.mask;\n    o.hitArea = this.hitArea;\n    o.cursor = this.cursor;\n    o._bounds = this._bounds;\n    return o;\n  };\n\n\t/**\n\t * @method _applyShadow\n\t * @protected\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Shadow} shadow\n\t **/\n  p._applyShadow = function (ctx, shadow) {\n    shadow = shadow || Shadow.identity;\n    ctx.shadowColor = shadow.color;\n    ctx.shadowOffsetX = shadow.offsetX;\n    ctx.shadowOffsetY = shadow.offsetY;\n    ctx.shadowBlur = shadow.blur;\n  };\n\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t **/\n  p._tick = function (evtObj) {\n    // because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\n    var ls = this._listeners;\n    if (ls && ls[\"tick\"]) {\n      // reset & reuse the event object to avoid construction / GC costs:\n      evtObj.target = null;\n      evtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\n      this.dispatchEvent(evtObj);\n    }\n  };\n\n\t/**\n\t * @method _testHit\n\t * @protected\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @return {Boolean}\n\t **/\n  p._testHit = function (ctx) {\n    try {\n      var hit = ctx.getImageData(0, 0, 1, 1).data[3] > 1;\n    } catch (e) {\n      if (!DisplayObject.suppressCrossDomainErrors) {\n        throw \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\n      }\n    }\n    return hit;\n  };\n\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t * @return {Rectangle}\n\t * @protected\n\t **/\n  p._getBounds = function (matrix, ignoreTransform) {\n    return this._transformBounds(this.getBounds(), matrix, ignoreTransform);\n  };\n\n\t/**\n\t * @method _transformBounds\n\t * @param {Rectangle} bounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {Rectangle}\n\t * @protected\n\t **/\n  p._transformBounds = function (bounds, matrix, ignoreTransform) {\n    if (!bounds) { return bounds; }\n    var x = bounds.x, y = bounds.y, width = bounds.width, height = bounds.height, mtx = this._props.matrix;\n    mtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\n    if (x || y) { mtx.appendTransform(0, 0, 1, 1, 0, 0, 0, -x, -y); } // TODO: simplify this.\n    if (matrix) { mtx.prependMatrix(matrix); }\n\n    var x_a = width * mtx.a, x_b = width * mtx.b;\n    var y_c = height * mtx.c, y_d = height * mtx.d;\n    var tx = mtx.tx, ty = mtx.ty;\n\n    var minX = tx, maxX = tx, minY = ty, maxY = ty;\n\n    if ((x = x_a + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n    if ((x = x_a + y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n    if ((x = y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\n    if ((y = x_b + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n    if ((y = x_b + y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n    if ((y = y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\n    return bounds.setValues(minX, minY, maxX - minX, maxY - minY);\n  };\n\n\t/**\n\t * Indicates whether the display object has any mouse event listeners or a cursor.\n\t * @method _isMouseOpaque\n\t * @return {Boolean}\n\t * @protected\n\t **/\n  p._hasMouseEventListener = function () {\n    var evts = DisplayObject._MOUSE_EVENTS;\n    for (var i = 0, l = evts.length; i < l; i++) {\n      if (this.hasEventListener(evts[i])) { return true; }\n    }\n    return !!this.cursor;\n  };\n\n  createjs.DisplayObject = createjs.promote(DisplayObject, \"EventDispatcher\");\n}());\n\n//##############################################################################\n// Container.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n  /**\n   * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\n   * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\n   * transform them as a group, while still being able to move the individual parts relative to each other. Children of\n   * containers have their <code>transform</code> and <code>alpha</code> properties concatenated with their parent\n   * Container.\n   *\n   * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with <code>x=50</code>\n   * and <code>alpha=0.7</code> will be rendered to the canvas at <code>x=150</code> and <code>alpha=0.35</code>.\n   * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\n   *\n   * <h4>Example</h4>\n   *\n   *      var container = new createjs.Container();\n   *      container.addChild(bitmapInstance, shapeInstance);\n   *      container.x = 100;\n   *\n   * @class Container\n   * @extends DisplayObject\n   * @constructor\n   **/\n  function Container() {\n    this.DisplayObject_constructor();\n\n    // public properties:\n\t\t/**\n\t\t * The array of children in the display list. You should usually use the child management methods such as\n\t\t * {{#crossLink \"Container/addChild\"}}{{/crossLink}}, {{#crossLink \"Container/removeChild\"}}{{/crossLink}},\n\t\t * {{#crossLink \"Container/swapChildren\"}}{{/crossLink}}, etc, rather than accessing this directly, but it is\n\t\t * included for advanced uses.\n\t\t * @property children\n\t\t * @type Array\n\t\t * @default null\n\t\t **/\n    this.children = [];\n\n\t\t/**\n\t\t * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\n\t\t * If false, the children will be aggregated under the container - for example, a click on a child shape would\n\t\t * trigger a click event on the container.\n\t\t * @property mouseChildren\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n    this.mouseChildren = true;\n\n\t\t/**\n\t\t * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\n\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n\t\t * @property tickChildren\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n    this.tickChildren = true;\n  }\n  var p = createjs.extend(Container, createjs.DisplayObject);\n\n\n  // getter / setters:\n\t/**\n\t * Use the {{#crossLink \"Container/numChildren:property\"}}{{/crossLink}} property instead.\n\t * @method _getNumChildren\n\t * @protected\n\t * @return {Number}\n\t **/\n  p._getNumChildren = function () {\n    return this.children.length;\n  };\n  // Container.getNumChildren is @deprecated. Remove for 1.1+\n  p.getNumChildren = createjs.deprecate(p._getNumChildren, \"Container.getNumChildren\");\n\n\t/**\n\t * Returns the number of children in the container.\n\t * @property numChildren\n\t * @type {Number}\n\t * @readonly\n\t **/\n  try {\n    Object.defineProperties(p, {\n      numChildren: { get: p._getNumChildren }\n    });\n  } catch (e) { }\n\n\n  // public methods:\n\t/**\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t * @method initialize\n\t * @deprecated in favour of `createjs.promote()`\n\t **/\n  p.initialize = Container; // TODO: deprecated.\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || this.children.length;\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t **/\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\n    // this ensures we don't have issues with display list changes that occur during a draw:\n    var list = this.children.slice();\n    for (var i = 0, l = list.length; i < l; i++) {\n      var child = list[i];\n      if (!child.isVisible()) { continue; }\n\n      // draw the child:\n      ctx.save();\n      child.updateContext(ctx);\n      child.draw(ctx);\n      ctx.restore();\n    }\n    return true;\n  };\n\n\t/**\n\t * Adds a child to the top of the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \t\tcontainer.addChild(bitmapInstance);\n\t *\n\t * You can also add multiple children at once:\n\t *\n\t * \t\tcontainer.addChild(bitmapInstance, shapeInstance, textInstance);\n\t *\n\t * @method addChild\n\t * @param {DisplayObject} child The display object to add.\n\t * @return {DisplayObject} The child that was added, or the last child if multiple children were added.\n\t **/\n  p.addChild = function (child) {\n    if (child == null) { return child; }\n    var l = arguments.length;\n    if (l > 1) {\n      for (var i = 0; i < l; i++) { this.addChild(arguments[i]); }\n      return arguments[l - 1];\n    }\n    // Note: a lot of duplication with addChildAt, but push is WAY faster than splice.\n    var par = child.parent, silent = par === this;\n    par && par._removeChildAt(createjs.indexOf(par.children, child), silent);\n    child.parent = this;\n    this.children.push(child);\n    if (!silent) { child.dispatchEvent(\"added\"); }\n    return child;\n  };\n\n\t/**\n\t * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\n\t * setting its parent to this Container.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      addChildAt(child1, index);\n\t *\n\t * You can also add multiple children, such as:\n\t *\n\t *      addChildAt(child1, child2, ..., index);\n\t *\n\t * The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\n\t * you could use:\n\t *\n\t *      container.addChildAt(myShape, container.getChildIndex(otherShape));\n\t *\n\t * This would also bump otherShape's index up by one. Fails silently if the index is out of range.\n\t *\n\t * @method addChildAt\n\t * @param {DisplayObject} child The display object to add.\n\t * @param {Number} index The index to add the child at.\n\t * @return {DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\n\t **/\n  p.addChildAt = function (child, index) {\n    var l = arguments.length;\n    var indx = arguments[l - 1]; // can't use the same name as the index param or it replaces arguments[1]\n    if (indx < 0 || indx > this.children.length) { return arguments[l - 2]; }\n    if (l > 2) {\n      for (var i = 0; i < l - 1; i++) { this.addChildAt(arguments[i], indx + i); }\n      return arguments[l - 2];\n    }\n    var par = child.parent, silent = par === this;\n    par && par._removeChildAt(createjs.indexOf(par.children, child), silent);\n    child.parent = this;\n    this.children.splice(index, 0, child);\n    if (!silent) { child.dispatchEvent(\"added\"); }\n    return child;\n  };\n\n\t/**\n\t * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\n\t * already known.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.removeChild(child);\n\t *\n\t * You can also remove multiple children:\n\t *\n\t *      removeChild(child1, child2, ...);\n\t *\n\t * Returns true if the child (or children) was removed, or false if it was not in the display list.\n\t * @method removeChild\n\t * @param {DisplayObject} child The child to remove.\n\t * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\n\t **/\n  p.removeChild = function (child) {\n    var l = arguments.length;\n    if (l > 1) {\n      var good = true;\n      for (var i = 0; i < l; i++) { good = good && this.removeChild(arguments[i]); }\n      return good;\n    }\n    return this._removeChildAt(createjs.indexOf(this.children, child));\n  };\n\n\t/**\n\t * Removes the child at the specified index from the display list, and sets its parent to null.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.removeChildAt(2);\n\t *\n\t * You can also remove multiple children:\n\t *\n\t *      container.removeChild(2, 7, ...)\n\t *\n\t * Returns true if the child (or children) was removed, or false if any index was out of range.\n\t * @method removeChildAt\n\t * @param {Number} index The index of the child to remove.\n\t * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n\t **/\n  p.removeChildAt = function (index) {\n    var l = arguments.length;\n    if (l > 1) {\n      var a = [];\n      for (var i = 0; i < l; i++) { a[i] = arguments[i]; }\n      a.sort(function (a, b) { return b - a; });\n      var good = true;\n      for (var i = 0; i < l; i++) { good = good && this._removeChildAt(a[i]); }\n      return good;\n    }\n    return this._removeChildAt(index);\n  };\n\n\t/**\n\t * Removes all children from the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \tcontainer.removeAllChildren();\n\t *\n\t * @method removeAllChildren\n\t **/\n  p.removeAllChildren = function () {\n    var kids = this.children;\n    while (kids.length) { this._removeChildAt(0); }\n  };\n\n\t/**\n\t * Returns the child at the specified index.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.getChildAt(2);\n\t *\n\t * @method getChildAt\n\t * @param {Number} index The index of the child to return.\n\t * @return {DisplayObject} The child at the specified index. Returns null if there is no child at the index.\n\t **/\n  p.getChildAt = function (index) {\n    return this.children[index];\n  };\n\n\t/**\n\t * Returns the child with the specified name.\n\t * @method getChildByName\n\t * @param {String} name The name of the child to return.\n\t * @return {DisplayObject} The child with the specified name.\n\t **/\n  p.getChildByName = function (name) {\n    var kids = this.children;\n    for (var i = 0, l = kids.length; i < l; i++) {\n      if (kids[i].name == name) { return kids[i]; }\n    }\n    return null;\n  };\n\n\t/**\n\t * Performs an array sort operation on the child list.\n\t *\n\t * <h4>Example: Display children with a higher y in front.</h4>\n\t * \n\t *      var sortFunction = function(obj1, obj2, options) {\n\t *          if (obj1.y > obj2.y) { return 1; }\n\t *          if (obj1.y < obj2.y) { return -1; }\n\t *          return 0;\n\t *      }\n\t *      container.sortChildren(sortFunction);\n\t *\n\t * @method sortChildren\n\t * @param {Function} sortFunction the function to use to sort the child list. See JavaScript's <code>Array.sort</code>\n\t * documentation for details.\n\t **/\n  p.sortChildren = function (sortFunction) {\n    this.children.sort(sortFunction);\n  };\n\n\t/**\n\t * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var index = container.getChildIndex(child);\n\t *\n\t * @method getChildIndex\n\t * @param {DisplayObject} child The child to return the index of.\n\t * @return {Number} The index of the specified child. -1 if the child is not found.\n\t **/\n  p.getChildIndex = function (child) {\n    return createjs.indexOf(this.children, child);\n  };\n\n\t/**\n\t * Swaps the children at the specified indexes. Fails silently if either index is out of range.\n\t * @method swapChildrenAt\n\t * @param {Number} index1\n\t * @param {Number} index2\n\t **/\n  p.swapChildrenAt = function (index1, index2) {\n    var kids = this.children;\n    var o1 = kids[index1];\n    var o2 = kids[index2];\n    if (!o1 || !o2) { return; }\n    kids[index1] = o2;\n    kids[index2] = o1;\n  };\n\n\t/**\n\t * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\n\t * Container.\n\t * @method swapChildren\n\t * @param {DisplayObject} child1\n\t * @param {DisplayObject} child2\n\t **/\n  p.swapChildren = function (child1, child2) {\n    var kids = this.children;\n    var index1, index2;\n    for (var i = 0, l = kids.length; i < l; i++) {\n      if (kids[i] == child1) { index1 = i; }\n      if (kids[i] == child2) { index2 = i; }\n      if (index1 != null && index2 != null) { break; }\n    }\n    if (i == l) { return; } // TODO: throw error?\n    kids[index1] = child2;\n    kids[index2] = child1;\n  };\n\n\t/**\n\t * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\n\t * @param {DisplayObject} child\n\t * @param {Number} index  \n\t * @method setChildIndex\n\t **/\n  p.setChildIndex = function (child, index) {\n    var kids = this.children, l = kids.length;\n    if (child.parent != this || index < 0 || index >= l) { return; }\n    for (var i = 0; i < l; i++) {\n      if (kids[i] == child) { break; }\n    }\n    if (i == l || i == index) { return; }\n    kids.splice(i, 1);\n    kids.splice(index, 0, child);\n  };\n\n\t/**\n\t * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\n\t * of this container.\n\t * @method contains\n\t * @param {DisplayObject} child The DisplayObject to be checked.\n\t * @return {Boolean} true if the specified display object either is this container or is a descendent.\n\t **/\n  p.contains = function (child) {\n    while (child) {\n      if (child == this) { return true; }\n      child = child.parent;\n    }\n    return false;\n  };\n\n\t/**\n\t * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\n\t * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\n\t * transform properties including regX/Y.\n\t * @method hitTest\n\t * @param {Number} x The x position to check in the display object's local coordinates.\n\t * @param {Number} y The y position to check in the display object's local coordinates.\n\t * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\n\t * coordinates.\n\t **/\n  p.hitTest = function (x, y) {\n    // TODO: optimize to use the fast cache check where possible.\n    return (this.getObjectUnderPoint(x, y) != null);\n  };\n\n\t/**\n\t * Returns an array of all display objects under the specified coordinates that are in this container's display\n\t * list. This routine ignores any display objects with {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\n\t * set to `false`. The array will be sorted in order of visual depth, with the top-most display object at index 0.\n\t * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\n\t * For example, if testing for objects under the mouse, test on tick (instead of on {{#crossLink \"DisplayObject/mousemove:event\"}}{{/crossLink}}),\n\t * and only if the mouse's position has changed.\n\t * \n\t * <ul>\n\t *     <li>By default (mode=0) this method evaluates all display objects.</li>\n\t *     <li>By setting the `mode` parameter to `1`, the {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\n\t * \t\tand {{#crossLink \"mouseChildren:property\"}}{{/crossLink}} properties will be respected.</li>\n\t * \t   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\n\t * \t   \tlisteners or a {{#crossLink \"DisplayObject:cursor:property\"}}{{/crossLink}} property. That is, only objects\n\t * \t   \tthat would normally intercept mouse interaction will be included. This can significantly improve performance\n\t * \t   \tin some cases by reducing the number of display objects that need to be tested.</li>\n\t * </li>\n\t * \n\t * This method accounts for both {{#crossLink \"DisplayObject/hitArea:property\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/mask:property\"}}{{/crossLink}}.\n\t * @method getObjectsUnderPoint\n\t * @param {Number} x The x position in the container to test.\n\t * @param {Number} y The y position in the container to test.\n\t * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t * @return {Array} An Array of DisplayObjects under the specified coordinates.\n\t **/\n  p.getObjectsUnderPoint = function (x, y, mode) {\n    var arr = [];\n    var pt = this.localToGlobal(x, y);\n    this._getObjectsUnderPoint(pt.x, pt.y, arr, mode > 0, mode == 1);\n    return arr;\n  };\n\n\t/**\n\t * Similar to {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}, but returns only the top-most display\n\t * object. This runs significantly faster than <code>getObjectsUnderPoint()</code>, but is still potentially an expensive\n\t * operation. See {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}} for more information.\n\t * @method getObjectUnderPoint\n\t * @param {Number} x The x position in the container to test.\n\t * @param {Number} y The y position in the container to test.\n\t * @param {Number} mode The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t * @return {DisplayObject} The top-most display object under the specified coordinates.\n\t **/\n  p.getObjectUnderPoint = function (x, y, mode) {\n    var pt = this.localToGlobal(x, y);\n    return this._getObjectsUnderPoint(pt.x, pt.y, null, mode > 0, mode == 1);\n  };\n\n\t/**\n\t * Docced in superclass.\n\t */\n  p.getBounds = function () {\n    return this._getBounds(null, true);\n  };\n\n\n\t/**\n\t * Docced in superclass.\n\t */\n  p.getTransformedBounds = function () {\n    return this._getBounds();\n  };\n\n\t/**\n\t * Returns a clone of this Container. Some properties that are specific to this instance's current context are\n\t * reverted to their defaults (for example .parent).\n\t * @method clone\n\t * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\n\t * properties of the container will be cloned, but the new instance will not have any children.\n\t * @return {Container} A clone of the current Container instance.\n\t **/\n  p.clone = function (recursive) {\n    var o = this._cloneProps(new Container());\n    if (recursive) { this._cloneChildren(o); }\n    return o;\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[Container (name=\" + this.name + \")]\";\n  };\n\n\n  // private methods:\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t **/\n  p._tick = function (evtObj) {\n    if (this.tickChildren) {\n      for (var i = this.children.length - 1; i >= 0; i--) {\n        var child = this.children[i];\n        if (child.tickEnabled && child._tick) { child._tick(evtObj); }\n      }\n    }\n    this.DisplayObject__tick(evtObj);\n  };\n\n\t/**\n\t * Recursively clones all children of this container, and adds them to the target container.\n\t * @method cloneChildren\n\t * @protected\n\t * @param {Container} o The target container.\n\t **/\n  p._cloneChildren = function (o) {\n    if (o.children.length) { o.removeAllChildren(); }\n    var arr = o.children;\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var clone = this.children[i].clone(true);\n      clone.parent = o;\n      arr.push(clone);\n    }\n  };\n\n\t/**\n\t * Removes the child at the specified index from the display list, and sets its parent to null.\n\t * Used by `removeChildAt`, `addChild`, and `addChildAt`.\n\t * @method removeChildAt\n\t * @protected\n\t * @param {Number} index The index of the child to remove.\n\t * @param {Boolean} [silent] Prevents dispatch of `removed` event if true.\n\t * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n\t **/\n  p._removeChildAt = function (index, silent) {\n    if (index < 0 || index > this.children.length - 1) { return false; }\n    var child = this.children[index];\n    if (child) { child.parent = null; }\n    this.children.splice(index, 1);\n    if (!silent) { child.dispatchEvent(\"removed\"); }\n    return true;\n  };\n\n\t/**\n\t * @method _getObjectsUnderPoint\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Array} arr\n\t * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\n\t * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\n\t * @param {Number} currentDepth Indicates the current depth of the search.\n\t * @return {DisplayObject}\n\t * @protected\n\t **/\n  p._getObjectsUnderPoint = function (x, y, arr, mouse, activeListener, currentDepth) {\n    currentDepth = currentDepth || 0;\n    if (!currentDepth && !this._testMask(this, x, y)) { return null; }\n    var mtx, ctx = createjs.DisplayObject._hitTestContext;\n    activeListener = activeListener || (mouse && this._hasMouseEventListener());\n\n    // draw children one at a time, and check if we get a hit:\n    var children = this.children, l = children.length;\n    for (var i = l - 1; i >= 0; i--) {\n      var child = children[i];\n      var hitArea = child.hitArea;\n      if (!child.visible || (!hitArea && !child.isVisible()) || (mouse && !child.mouseEnabled)) { continue; }\n      if (!hitArea && !this._testMask(child, x, y)) { continue; }\n\n      // if a child container has a hitArea then we only need to check its hitAre2a, so we can treat it as a normal DO:\n      if (!hitArea && child instanceof Container) {\n        var result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth + 1);\n        if (!arr && result) { return (mouse && !this.mouseChildren) ? this : result; }\n      } else {\n        if (mouse && !activeListener && !child._hasMouseEventListener()) { continue; }\n\n        // TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\n        var props = child.getConcatenatedDisplayProps(child._props);\n        mtx = props.matrix;\n\n        if (hitArea) {\n          mtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\n          props.alpha = hitArea.alpha;\n        }\n\n        ctx.globalAlpha = props.alpha;\n        ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx - x, mtx.ty - y);\n        (hitArea || child).draw(ctx);\n        if (!this._testHit(ctx)) { continue; }\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.clearRect(0, 0, 2, 2);\n        if (arr) { arr.push(child); }\n        else { return (mouse && !this.mouseChildren) ? this : child; }\n      }\n    }\n    return null;\n  };\n\n\t/**\n\t * @method _testMask\n\t * @param {DisplayObject} target\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Boolean} Indicates whether the x/y is within the masked region.\n\t * @protected\n\t **/\n  p._testMask = function (target, x, y) {\n    var mask = target.mask;\n    if (!mask || !mask.graphics || mask.graphics.isEmpty()) { return true; }\n\n    var mtx = this._props.matrix, parent = target.parent;\n    mtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\n    mtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\n\n    var ctx = createjs.DisplayObject._hitTestContext;\n    ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx - x, mtx.ty - y);\n\n    // draw the mask as a solid fill:\n    mask.graphics.drawAsPath(ctx);\n    ctx.fillStyle = \"#000\";\n    ctx.fill();\n\n    if (!this._testHit(ctx)) { return false; }\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, 2, 2);\n\n    return true;\n  };\n\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t * @return {Rectangle}\n\t * @protected\n\t **/\n  p._getBounds = function (matrix, ignoreTransform) {\n    var bounds = this.DisplayObject_getBounds();\n    if (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\n    var mtx = this._props.matrix;\n    mtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n    if (matrix) { mtx.prependMatrix(matrix); }\n\n    var l = this.children.length, rect = null;\n    for (var i = 0; i < l; i++) {\n      var child = this.children[i];\n      if (!child.visible || !(bounds = child._getBounds(mtx))) { continue; }\n      if (rect) { rect.extend(bounds.x, bounds.y, bounds.width, bounds.height); }\n      else { rect = bounds.clone(); }\n    }\n    return rect;\n  };\n\n\n  createjs.Container = createjs.promote(Container, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Stage.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * A stage is the root level {{#crossLink \"Container\"}}{{/crossLink}} for a display list. Each time its {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n\t * method is called, it will render its display list to its target canvas.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a stage, adds a child to it, then uses {{#crossLink \"Ticker\"}}{{/crossLink}} to update the child\n\t * and redraw the stage using {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t *\n\t *      var stage = new createjs.Stage(\"canvasElementId\");\n\t *      var image = new createjs.Bitmap(\"imagePath.png\");\n\t *      stage.addChild(image);\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      function handleTick(event) {\n\t *          image.x += 10;\n\t *          stage.update();\n\t *      }\n\t *\n\t * @class Stage\n\t * @extends Container\n\t * @constructor\n\t * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n\t * of a canvas object in the current document.\n\t **/\n  function Stage(canvas) {\n    this.Container_constructor();\n\n\n    // public properties:\n\t\t/**\n\t\t * Indicates whether the stage should automatically clear the canvas before each render. You can set this to <code>false</code>\n\t\t * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n\t\t * example).\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var stage = new createjs.Stage(\"canvasId\");\n\t\t *      stage.autoClear = false;\n\t\t *\n\t\t * @property autoClear\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n    this.autoClear = true;\n\n\t\t/**\n\t\t * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n\t\t * first stage that will be ticked (or they will clear each other's render).\n\t\t *\n\t\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t\t * new canvas or mouse events will not work as expected. For example:\n\t\t *\n\t\t *      myStage.enableDOMEvents(false);\n\t\t *      myStage.canvas = anotherCanvas;\n\t\t *      myStage.enableDOMEvents(true);\n\t\t *\n\t\t * @property canvas\n\t\t * @type HTMLCanvasElement | Object\n\t\t **/\n    this.canvas = (typeof canvas == \"string\") ? document.getElementById(canvas) : canvas;\n\n\t\t/**\n\t\t * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @property mouseX\n\t\t * @type Number\n\t\t * @readonly\n\t\t **/\n    this.mouseX = 0;\n\n\t\t/**\n\t\t * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @property mouseY\n\t\t * @type Number\n\t\t * @readonly\n\t\t **/\n    this.mouseY = 0;\n\n\t\t/**\n\t\t * Specifies the area of the stage to affect when calling update. This can be use to selectively\n\t\t * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n\t\t * @property drawRect\n\t\t * @type {Rectangle}\n\t\t */\n    this.drawRect = null;\n\n\t\t/**\n\t\t * Indicates whether display objects should be rendered on whole pixels. You can set the\n\t\t * {{#crossLink \"DisplayObject/snapToPixel\"}}{{/crossLink}} property of\n\t\t * display objects to false to enable/disable this behaviour on a per instance basis.\n\t\t * @property snapToPixelEnabled\n\t\t * @type Boolean\n\t\t * @default false\n\t\t **/\n    this.snapToPixelEnabled = false;\n\n\t\t/**\n\t\t * Indicates whether the mouse is currently within the bounds of the canvas.\n\t\t * @property mouseInBounds\n\t\t * @type Boolean\n\t\t * @default false\n\t\t **/\n    this.mouseInBounds = false;\n\n\t\t/**\n\t\t * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n\t\t * @property tickOnUpdate\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n    this.tickOnUpdate = true;\n\n\t\t/**\n\t\t * If true, mouse move events will continue to be called when the mouse leaves the target canvas. See\n\t\t * {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}}, and {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t\t * x/y/rawX/rawY.\n\t\t * @property mouseMoveOutside\n\t\t * @type Boolean\n\t\t * @default false\n\t\t **/\n    this.mouseMoveOutside = false;\n\n\n\t\t/**\n\t\t * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n\t\t * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n\t\t * @property preventSelection\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n    this.preventSelection = true;\n\n\t\t/**\n\t\t * The hitArea property is not supported for Stage.\n\t\t * @property hitArea\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n\n\n    // private properties:\n\t\t/**\n\t\t * Holds objects with data for each active pointer id. Each object has the following properties:\n\t\t * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n\t\t * @property _pointerData\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n    this._pointerData = {};\n\n\t\t/**\n\t\t * Number of active pointers.\n\t\t * @property _pointerCount\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n    this._pointerCount = 0;\n\n\t\t/**\n\t\t * The ID of the primary pointer.\n\t\t * @property _primaryPointerID\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n    this._primaryPointerID = null;\n\n\t\t/**\n\t\t * @property _mouseOverIntervalID\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n    this._mouseOverIntervalID = null;\n\n\t\t/**\n\t\t * @property _nextStage\n\t\t * @protected\n\t\t * @type Stage\n\t\t **/\n    this._nextStage = null;\n\n\t\t/**\n\t\t * @property _prevStage\n\t\t * @protected\n\t\t * @type Stage\n\t\t **/\n    this._prevStage = null;\n\n\n    // initialize:\n    this.enableDOMEvents(true);\n  }\n  var p = createjs.extend(Stage, createjs.Container);\n\n  // events:\n\t/**\n\t * Dispatched when the user moves the mouse over the canvas.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event stagemousemove\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user presses their left mouse button on the canvas. See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t * class for a listing of event properties.\n\t * @event stagemousedown\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\n\t * You can use {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}} to check whether the mouse is currently within the stage bounds.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event stagemouseup\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the mouse moves from within the canvas area (mouseInBounds == true) to outside it (mouseInBounds == false).\n\t * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t * class for a listing of event properties.\n\t * @event mouseleave\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched when the mouse moves into the canvas area (mouseInBounds == false) from outside it (mouseInBounds == true).\n\t * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t * class for a listing of event properties.\n\t * @event mouseenter\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched each update immediately before the tick event is propagated through the display list.\n\t * You can call preventDefault on the event object to cancel propagating the tick event.\n\t * @event tickstart\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\n\t * tickOnUpdate is false. Precedes the \"drawstart\" event.\n\t * @event tickend\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\n\t * You can call preventDefault on the event object to cancel the draw.\n\t * @event drawstart\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n\t * @event drawend\n\t * @since 0.7.0\n\t */\n\n\n  // getter / setters:\n\t/**\n\t * Specifies a target stage that will have mouse / touch interactions relayed to it after this stage handles them.\n\t * This can be useful in cases where you have multiple layered canvases and want user interactions\n\t * events to pass through. For example, this would relay mouse events from topStage to bottomStage:\n\t *\n\t *      topStage.nextStage = bottomStage;\n\t *\n\t * To disable relaying, set nextStage to null.\n\t * \n\t * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n\t * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n\t * Considerations when using roll over in relay targets:<OL>\n\t * <LI> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</LI>\n\t * <LI> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</LI>\n\t * <LI> All relay targets will share the frequency value of the top-most stage</LI>\n\t * </OL>\n\t * To illustrate, in this example the targetStage would process mouse over interactions at 10hz (despite passing\n\t * 30 as it's desired frequency):\n\t * \ttopStage.nextStage = targetStage;\n\t * \ttopStage.enableMouseOver(10);\n\t * \ttargetStage.enableMouseOver(30);\n\t * \n\t * If the target stage's canvas is completely covered by this stage's canvas, you may also want to disable its\n\t * DOM events using:\n\t * \n\t *\ttargetStage.enableDOMEvents(false);\n\t * \n\t * @property nextStage\n\t * @type {Stage}\n\t **/\n  p._get_nextStage = function () {\n    return this._nextStage;\n  };\n  p._set_nextStage = function (value) {\n    if (this._nextStage) { this._nextStage._prevStage = null; }\n    if (value) { value._prevStage = this; }\n    this._nextStage = value;\n  };\n\n  try {\n    Object.defineProperties(p, {\n      nextStage: { get: p._get_nextStage, set: p._set_nextStage }\n    });\n  } catch (e) { } // TODO: use Log\n\n\n  // public methods:\n\t/**\n\t * Each time the update method is called, the stage will call {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false,\n\t * and then render the display list to the canvas.\n\t *\n\t * @method update\n\t * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {{#crossLink \"Ticker\"}}{{/crossLink}} event object, or similar object with a delta property.\n\t **/\n  p.update = function (props) {\n    if (!this.canvas) { return; }\n    if (this.tickOnUpdate) { this.tick(props); }\n    if (this.dispatchEvent(\"drawstart\", false, true) === false) { return; }\n    createjs.DisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n    var r = this.drawRect, ctx = this.canvas.getContext(\"2d\");\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    if (this.autoClear) {\n      if (r) { ctx.clearRect(r.x, r.y, r.width, r.height); }\n      else { ctx.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1); }\n    }\n    ctx.save();\n    if (this.drawRect) {\n      ctx.beginPath();\n      ctx.rect(r.x, r.y, r.width, r.height);\n      ctx.clip();\n    }\n    this.updateContext(ctx);\n    this.draw(ctx, false);\n    ctx.restore();\n    this.dispatchEvent(\"drawend\");\n  };\n\n\t/**\n\t * Propagates a tick event through the display list. This is automatically called by {{#crossLink \"Stage/update\"}}{{/crossLink}}\n\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false.\n\t *\n\t * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n\t * propagated to listeners.\n\t *\n\t * Some time-based features in EaselJS (for example {{#crossLink \"Sprite/framerate\"}}{{/crossLink}} require that\n\t * a {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} event object (or equivalent object with a delta property) be\n\t * passed as the `props` parameter to `tick()`. For example:\n\t *\n\t * \tTicker.on(\"tick\", handleTick);\n\t * \tfunction handleTick(evtObj) {\n\t * \t\t// clone the event object from Ticker, and add some custom data to it:\n\t * \t\tvar evt = evtObj.clone().set({greeting:\"hello\", name:\"world\"});\n\t * \t\t\n\t * \t\t// pass it to stage.update():\n\t * \t\tmyStage.update(evt); // subsequently calls tick() with the same param\n\t * \t}\n\t * \t\n\t * \t// ...\n\t * \tmyDisplayObject.on(\"tick\", handleDisplayObjectTick);\n\t * \tfunction handleDisplayObjectTick(evt) {\n\t * \t\tconsole.log(evt.delta); // the delta property from the Ticker tick event object\n\t * \t\tconsole.log(evt.greeting, evt.name); // custom data: \"hello world\"\n\t * \t}\n\t * \n\t * @method tick\n\t * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n\t **/\n  p.tick = function (props) {\n    if (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) { return; }\n    var evtObj = new createjs.Event(\"tick\");\n    if (props) {\n      for (var n in props) {\n        if (props.hasOwnProperty(n)) { evtObj[n] = props[n]; }\n      }\n    }\n    this._tick(evtObj);\n    this.dispatchEvent(\"tickend\");\n  };\n\n\t/**\n\t * Default event handler that calls the Stage {{#crossLink \"Stage/update\"}}{{/crossLink}} method when a {{#crossLink \"DisplayObject/tick:event\"}}{{/crossLink}}\n\t * event is received. This allows you to register a Stage instance as a event listener on {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t * directly, using:\n\t *\n\t *      Ticker.addEventListener(\"tick\", myStage);\n\t *\n\t * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n\t * display object tick handlers, instead of <code>delta</code> and <code>paused</code> parameters.\n\t * @property handleEvent\n\t * @type Function\n\t **/\n  p.handleEvent = function (evt) {\n    if (evt.type == \"tick\") { this.update(evt); }\n  };\n\n\t/**\n\t * Clears the target canvas. Useful if {{#crossLink \"Stage/autoClear:property\"}}{{/crossLink}} is set to `false`.\n\t * @method clear\n\t **/\n  p.clear = function () {\n    if (!this.canvas) { return; }\n    var ctx = this.canvas.getContext(\"2d\");\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1);\n  };\n\n\t/**\n\t * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n\t * be specified as the src value of an image element.\n\t * @method toDataURL\n\t * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n\t * value is allowed. The default value is a transparent background.\n\t * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. The default is \"image/png\". If an unknown MIME type\n\t * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n\t * @return {String} a Base64 encoded image.\n\t **/\n  p.toDataURL = function (backgroundColor, mimeType) {\n    var data, ctx = this.canvas.getContext('2d'), w = this.canvas.width, h = this.canvas.height;\n\n    if (backgroundColor) {\n      data = ctx.getImageData(0, 0, w, h);\n      var compositeOperation = ctx.globalCompositeOperation;\n      ctx.globalCompositeOperation = \"destination-over\";\n\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(0, 0, w, h);\n    }\n\n    var dataURL = this.canvas.toDataURL(mimeType || \"image/png\");\n\n    if (backgroundColor) {\n      ctx.putImageData(data, 0, 0);\n      ctx.globalCompositeOperation = compositeOperation;\n    }\n\n    return dataURL;\n  };\n\n\t/**\n\t * Enables or disables (by passing a frequency of 0) mouse over ({{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}) and roll over events ({{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}) for this stage's display list. These events can\n\t * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n\t * independently of mouse move events via the optional `frequency` parameter.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var stage = new createjs.Stage(\"canvasId\");\n\t *      stage.enableMouseOver(10); // 10 updates per second\n\t *\n\t * @method enableMouseOver\n\t * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n\t * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n\t * responsive, but uses less CPU.\n\t **/\n  p.enableMouseOver = function (frequency) {\n    if (this._mouseOverIntervalID) {\n      clearInterval(this._mouseOverIntervalID);\n      this._mouseOverIntervalID = null;\n      if (frequency == 0) {\n        this._testMouseOver(true);\n      }\n    }\n    if (frequency == null) { frequency = 20; }\n    else if (frequency <= 0) { return; }\n    var o = this;\n    this._mouseOverIntervalID = setInterval(function () { o._testMouseOver(); }, 1000 / Math.min(50, frequency));\n  };\n\n\t/**\n\t * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n\t * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n\t * events from the page.\n\t *\n\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t * new canvas or mouse events will not work as expected. For example:\n\t *\n\t *      myStage.enableDOMEvents(false);\n\t *      myStage.canvas = anotherCanvas;\n\t *      myStage.enableDOMEvents(true);\n\t *\n\t * @method enableDOMEvents\n\t * @param {Boolean} [enable=true] Indicates whether to enable or disable the events. Default is true.\n\t **/\n  p.enableDOMEvents = function (enable) {\n    if (enable == null) { enable = true; }\n    var n, o, ls = this._eventListeners;\n    if (!enable && ls) {\n      for (n in ls) {\n        o = ls[n];\n        o.t.removeEventListener(n, o.f, false);\n      }\n      this._eventListeners = null;\n    } else if (enable && !ls && this.canvas) {\n      var t = window.addEventListener ? window : document;\n      var _this = this;\n      ls = this._eventListeners = {};\n      ls[\"mouseup\"] = { t: t, f: function (e) { _this._handleMouseUp(e) } };\n      ls[\"mousemove\"] = { t: t, f: function (e) { _this._handleMouseMove(e) } };\n      ls[\"dblclick\"] = { t: this.canvas, f: function (e) { _this._handleDoubleClick(e) } };\n      ls[\"mousedown\"] = { t: this.canvas, f: function (e) { _this._handleMouseDown(e) } };\n\n      for (n in ls) {\n        o = ls[n];\n        o.t.addEventListener(n, o.f, false);\n      }\n    }\n  };\n\n\t/**\n\t * Stage instances cannot be cloned.\n\t * @method clone\n\t **/\n  p.clone = function () {\n    throw (\"Stage cannot be cloned.\");\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[Stage (name=\" + this.name + \")]\";\n  };\n\n\n  // private methods:\n\t/**\n\t * @method _getElementRect\n\t * @protected\n\t * @param {HTMLElement} e\n\t **/\n  p._getElementRect = function (e) {\n    var bounds;\n    try { bounds = e.getBoundingClientRect(); } // this can fail on disconnected DOM elements in IE9\n    catch (err) { bounds = { top: e.offsetTop, left: e.offsetLeft, width: e.offsetWidth, height: e.offsetHeight }; }\n\n    var offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n    var offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || document.body.clientTop || 0);\n\n    var styles = window.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle; // IE <9 compatibility.\n    var padL = parseInt(styles.paddingLeft) + parseInt(styles.borderLeftWidth);\n    var padT = parseInt(styles.paddingTop) + parseInt(styles.borderTopWidth);\n    var padR = parseInt(styles.paddingRight) + parseInt(styles.borderRightWidth);\n    var padB = parseInt(styles.paddingBottom) + parseInt(styles.borderBottomWidth);\n\n    // note: in some browsers bounds properties are read only.\n    return {\n      left: bounds.left + offX + padL,\n      right: bounds.right + offX - padR,\n      top: bounds.top + offY + padT,\n      bottom: bounds.bottom + offY - padB\n    }\n  };\n\n\t/**\n\t * @method _getPointerData\n\t * @protected\n\t * @param {Number} id\n\t **/\n  p._getPointerData = function (id) {\n    var data = this._pointerData[id];\n    if (!data) { data = this._pointerData[id] = { x: 0, y: 0 }; }\n    return data;\n  };\n\n\t/**\n\t * @method _handleMouseMove\n\t * @protected\n\t * @param {MouseEvent} e\n\t **/\n  p._handleMouseMove = function (e) {\n    if (!e) { e = window.event; }\n    this._handlePointerMove(-1, e, e.pageX, e.pageY);\n  };\n\n\t/**\n\t * @method _handlePointerMove\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n  p._handlePointerMove = function (id, e, pageX, pageY, owner) {\n    if (this._prevStage && owner === undefined) { return; } // redundant listener.\n    if (!this.canvas) { return; }\n    var nextStage = this._nextStage, o = this._getPointerData(id);\n\n    var inBounds = o.inBounds;\n    this._updatePointerPosition(id, e, pageX, pageY);\n    if (inBounds || o.inBounds || this.mouseMoveOutside) {\n      if (id === -1 && o.inBounds == !inBounds) {\n        this._dispatchMouseEvent(this, (inBounds ? \"mouseleave\" : \"mouseenter\"), false, id, o, e);\n      }\n\n      this._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n      this._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n    }\n\n    nextStage && nextStage._handlePointerMove(id, e, pageX, pageY, null);\n  };\n\n\t/**\n\t * @method _updatePointerPosition\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t **/\n  p._updatePointerPosition = function (id, e, pageX, pageY) {\n    var rect = this._getElementRect(this.canvas);\n    pageX -= rect.left;\n    pageY -= rect.top;\n\n    var w = this.canvas.width;\n    var h = this.canvas.height;\n    pageX /= (rect.right - rect.left) / w;\n    pageY /= (rect.bottom - rect.top) / h;\n    var o = this._getPointerData(id);\n    if (o.inBounds = (pageX >= 0 && pageY >= 0 && pageX <= w - 1 && pageY <= h - 1)) {\n      o.x = pageX;\n      o.y = pageY;\n    } else if (this.mouseMoveOutside) {\n      o.x = pageX < 0 ? 0 : (pageX > w - 1 ? w - 1 : pageX);\n      o.y = pageY < 0 ? 0 : (pageY > h - 1 ? h - 1 : pageY);\n    }\n\n    o.posEvtObj = e;\n    o.rawX = pageX;\n    o.rawY = pageY;\n\n    if (id === this._primaryPointerID || id === -1) {\n      this.mouseX = o.x;\n      this.mouseY = o.y;\n      this.mouseInBounds = o.inBounds;\n    }\n  };\n\n\t/**\n\t * @method _handleMouseUp\n\t * @protected\n\t * @param {MouseEvent} e\n\t **/\n  p._handleMouseUp = function (e) {\n    this._handlePointerUp(-1, e, false);\n  };\n\n\t/**\n\t * @method _handlePointerUp\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Boolean} clear\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n  p._handlePointerUp = function (id, e, clear, owner) {\n    var nextStage = this._nextStage, o = this._getPointerData(id);\n    if (this._prevStage && owner === undefined) { return; } // redundant listener.\n\n    var target = null, oTarget = o.target;\n    if (!owner && (oTarget || nextStage)) { target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n    if (o.down) { this._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target); o.down = false; }\n\n    if (target == oTarget) { this._dispatchMouseEvent(oTarget, \"click\", true, id, o, e); }\n    this._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n\n    if (clear) {\n      if (id == this._primaryPointerID) { this._primaryPointerID = null; }\n      delete (this._pointerData[id]);\n    } else { o.target = null; }\n\n    nextStage && nextStage._handlePointerUp(id, e, clear, owner || target && this);\n  };\n\n\t/**\n\t * @method _handleMouseDown\n\t * @protected\n\t * @param {MouseEvent} e\n\t **/\n  p._handleMouseDown = function (e) {\n    this._handlePointerDown(-1, e, e.pageX, e.pageY);\n  };\n\n\t/**\n\t * @method _handlePointerDown\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n  p._handlePointerDown = function (id, e, pageX, pageY, owner) {\n    if (this.preventSelection) { e.preventDefault(); }\n    if (this._primaryPointerID == null || id === -1) { this._primaryPointerID = id; } // mouse always takes over.\n\n    if (pageY != null) { this._updatePointerPosition(id, e, pageX, pageY); }\n    var target = null, nextStage = this._nextStage, o = this._getPointerData(id);\n    if (!owner) { target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n    if (o.inBounds) { this._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target); o.down = true; }\n    this._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n\n    nextStage && nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n  };\n\n\t/**\n\t * @method _testMouseOver\n\t * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t * @param {Stage} eventTarget The stage that the cursor is actively over.\n\t * @protected\n\t **/\n  p._testMouseOver = function (clear, owner, eventTarget) {\n    if (this._prevStage && owner === undefined) { return; } // redundant listener.\n\n    var nextStage = this._nextStage;\n    if (!this._mouseOverIntervalID) {\n      // not enabled for mouseover, but should still relay the event.\n      nextStage && nextStage._testMouseOver(clear, owner, eventTarget);\n      return;\n    }\n    var o = this._getPointerData(-1);\n    // only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n    if (!o || (!clear && this.mouseX == this._mouseOverX && this.mouseY == this._mouseOverY && this.mouseInBounds)) { return; }\n\n    var e = o.posEvtObj;\n    var isEventTarget = eventTarget || e && (e.target == this.canvas);\n    var target = null, common = -1, cursor = \"\", t, i, l;\n\n    if (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n      target = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n      this._mouseOverX = this.mouseX;\n      this._mouseOverY = this.mouseY;\n    }\n\n    var oldList = this._mouseOverTarget || [];\n    var oldTarget = oldList[oldList.length - 1];\n    var list = this._mouseOverTarget = [];\n\n    // generate ancestor list and check for cursor:\n    t = target;\n    while (t) {\n      list.unshift(t);\n      if (!cursor) { cursor = t.cursor; }\n      t = t.parent;\n    }\n    this.canvas.style.cursor = cursor;\n    if (!owner && eventTarget) { eventTarget.canvas.style.cursor = cursor; }\n\n    // find common ancestor:\n    for (i = 0, l = list.length; i < l; i++) {\n      if (list[i] != oldList[i]) { break; }\n      common = i;\n    }\n\n    if (oldTarget != target) {\n      this._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n    }\n\n    for (i = oldList.length - 1; i > common; i--) {\n      this._dispatchMouseEvent(oldList[i], \"rollout\", false, -1, o, e, target);\n    }\n\n    for (i = list.length - 1; i > common; i--) {\n      this._dispatchMouseEvent(list[i], \"rollover\", false, -1, o, e, oldTarget);\n    }\n\n    if (oldTarget != target) {\n      this._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n    }\n\n    nextStage && nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n  };\n\n\t/**\n\t * @method _handleDoubleClick\n\t * @protected\n\t * @param {MouseEvent} e\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n  p._handleDoubleClick = function (e, owner) {\n    var target = null, nextStage = this._nextStage, o = this._getPointerData(-1);\n    if (!owner) {\n      target = this._getObjectsUnderPoint(o.x, o.y, null, true);\n      this._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n    }\n    nextStage && nextStage._handleDoubleClick(e, owner || target && this);\n  };\n\n\t/**\n\t * @method _dispatchMouseEvent\n\t * @protected\n\t * @param {DisplayObject} target\n\t * @param {String} type\n\t * @param {Boolean} bubbles\n\t * @param {Number} pointerId\n\t * @param {Object} o\n\t * @param {MouseEvent} [nativeEvent]\n\t * @param {DisplayObject} [relatedTarget]\n\t **/\n  p._dispatchMouseEvent = function (target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n    // TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n    if (!target || (!bubbles && !target.hasEventListener(type))) { return; }\n\t\t/*\n\t\t// TODO: account for stage transformations?\n\t\tthis._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n\t\tvar pt = this._mtx.transformPoint(o.x, o.y);\n\t\tvar evt = new createjs.MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n\t\t*/\n    var evt = new createjs.MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n    target.dispatchEvent(evt);\n  };\n\n\n  createjs.Stage = createjs.promote(Stage, \"Container\");\n}());\n\n//##############################################################################\n// StageGL.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/*\n * README IF EDITING:\n * Terminology for developers:\n *\n * Vertex: a point that help defines a shape, 3 per triangle. Usually has an x,y,z but can have more/less info.\n * Vertex Property: a piece of information attached to the vertex like a vector3 containing x,y,z\n * Index/Indices: used in groups of 3 to define a triangle, points to vertices by their index in an array (some render\n * \t\tmodes do not use these)\n * Card: a group of 2 triangles used to display a rectangular image\n * U/V: common names for the [0-1] texture co-ordinates on an image\n * Batch: a single call to the renderer, best done as little as possible so multiple cards are put into a single batch\n * Buffer: WebGL array data\n * Program/Shader: For every vertex we run the Vertex shader. The results are used per pixel by the Fragment shader. When\n * \t\tcombined and paired these are a shader \"program\"\n * Texture: WebGL representation of image data and associated extra information\n * Slot: A space on the GPU into which textures can be loaded for use in a batch, using \"ActiveTexture\" switches texture slot.\n */\n\n(function () {\n  \"use strict\";\n\n\t/**\n\t * A StageGL instance is the root level {{#crossLink \"Container\"}}{{/crossLink}} for an WebGL-optimized display list,\n\t * which is used in place of the usual {{#crossLink \"Stage\"}}{{/crossLink}}. This class should behave identically to\n\t * a {{#crossLink \"Stage\"}}{{/crossLink}} except for WebGL-specific functionality.\n\t *\n\t * Each time the {{#crossLink \"Stage/tick\"}}{{/crossLink}} method is called, the display list is rendered to the\n\t * target &lt;canvas/&gt; instance, ignoring non-WebGL-compatible display objects. On devices and browsers that don't\n\t * support WebGL, content will automatically be rendered to canvas 2D context instead.\n\t *\n\t * <h4>Limitations</h4>\n\t * - {{#crossLink \"Shape\"}}{{/crossLink}}, {{#crossLink \"Shadow\"}}{{/crossLink}}, and {{#crossLink \"Text\"}}{{/crossLink}}\n\t * \tare not rendered when added to the display list.\n\t * - To display something StageGL cannot render, {{#crossLink \"displayObject/cache\"}}{{/crossLink}} the object.\n\t *\tCaches can be rendered regardless of source.\n\t * - Images are wrapped as a webGL \"Texture\". Each graphics card has a limit to its concurrent Textures, too many \n\t * Textures will noticeably slow performance.\n\t * - Each cache counts as an individual Texture. As such {{#crossLink \"SpriteSheet\"}}{{/crossLink}} and \n\t * {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}} are recommended practices to help keep texture counts low.\n\t * - To use any image node (DOM Image/Canvas Element) between multiple StageGL instances it must be a \n\t * {{#crossLink \"Bitmap/clone\"}}{{/crossLink}}, otherwise the GPU texture loading and tracking will get confused.\n\t * - to avoid an up/down scaled render you must call {{#crossLink \"StageGL/updateViewport\"}}{{/crossLink}} if you\n\t * resize your canvas after making a StageGL instance, this will properly size the WebGL context stored in memory.\n\t * - Best performance in demanding scenarios will come from manual management of texture memory, but it is handled\n\t * automatically by default. See {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}} for details.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a StageGL instance, adds a child to it, then uses the EaselJS {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t * to update the child and redraw the stage.\n\t *\n\t *      var stage = new createjs.StageGL(\"canvasElementId\");\n\t *\n\t *      var image = new createjs.Bitmap(\"imagePath.png\");\n\t *      stage.addChild(image);\n\t *\n\t *      createjs.Ticker.on(\"tick\", handleTick);\n\t *\n\t *      function handleTick(event) {\n\t *          image.x += 10;\n\t *          stage.update();\n\t *      }\n\t *\n\t * <h4>Notes</h4>\n\t * - StageGL is not currently included in the minified version of EaselJS.\n\t * - {{#crossLink \"SpriteContainer\"}}{{/crossLink}} (the previous approach to WebGL with EaselJS) has been deprecated.\n\t * - Earlier versions of WebGL support in EaselJS (SpriteStage and SpriteContainer) had hard limitations on images\n\t * \tper container, which have been solved.\n\t *\n\t * @class StageGL\n\t * @extends Stage\n\t * @constructor\n\t * @param {HTMLCanvasElement | String | Object} canvas A canvas object that StageGL will render to, or the string id\n\t *  of a canvas object in the current DOM.\n\t * @param {Object} options All the option parameters in a reference object, some are not supported by some browsers.\n\t * @param {Boolean} [options.preserveBuffer=false] If `true`, the canvas is NOT auto-cleared by WebGL (the spec\n\t *  discourages setting this to `true`). This is useful if you want persistent draw effects.\n\t * @param {Boolean} [options.antialias=false] Specifies whether or not the browser's WebGL implementation should try\n\t *  to perform anti-aliasing. This will also enable linear pixel sampling on power-of-two textures (smoother images).\n\t * @param {Boolean} [options.transparent=false] If `true`, the canvas is transparent. This is <strong>very</strong>\n\t * expensive, and should be used with caution.\n\t * @param {Boolean} [options.premultiply=false] Alters color handling. If `true`, this assumes the shader must\n\t * account for pre-multiplied alpha. This can help avoid visual halo effects with some assets, but may also cause\n\t * problems with other assets.\n\t * @param {Integer} [options.autoPurge=1200] How often the system should automatically dump unused textures with\n\t * `purgeTextures(autoPurge)` every `autoPurge/2` draws. See {{#crossLink \"StageGL/purgeTextures\"}}{{/crossLink}} for more\n\t * information.\n\t */\n  function StageGL(canvas, options) {\n    this.Stage_constructor(canvas);\n\n    if (options !== undefined) {\n      if (typeof options !== \"object\") { throw (\"Invalid options object\"); }\n      var premultiply = options.premultiply;\n      var transparent = options.transparent;\n      var antialias = options.antialias;\n      var preserveBuffer = options.preserveBuffer;\n      var autoPurge = options.autoPurge;\n    }\n\n    // public properties:\n\t\t/**\n\t\t * Console log potential issues and problems. This is designed to have <em>minimal</em> performance impact, so\n\t\t * if extensive debugging information is required, this may be inadequate. See {{#crossLink \"WebGLInspector\"}}{{/crossLink}}\n\t\t * @property vocalDebug\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n    this.vocalDebug = false;\n\n    // private properties:\n\t\t/**\n\t\t * Specifies whether or not the canvas is auto-cleared by WebGL. The WebGL spec discourages `true`.\n\t\t * If true, the canvas is NOT auto-cleared by WebGL. Used when the canvas context is created and requires\n\t\t * context re-creation to update.\n\t\t * @property _preserveBuffer\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n    this._preserveBuffer = preserveBuffer || false;\n\n\t\t/**\n\t\t * Specifies whether or not the browser's WebGL implementation should try to perform anti-aliasing.\n\t\t * @property _antialias\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n    this._antialias = antialias || false;\n\n\t\t/**\n\t\t * Specifies whether or not the browser's WebGL implementation should be transparent.\n\t\t * @property _transparent\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n    this._transparent = transparent || false;\n\n\t\t/**\n\t\t * Specifies whether or not StageGL is handling colours as premultiplied alpha.\n\t\t * @property _premultiply\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n    this._premultiply = premultiply || false;\n\n\t\t/**\n\t\t * Internal value of {{#crossLink \"StageGL/autoPurge\"}}{{/crossLink}}\n\t\t * @property _autoPurge\n\t\t * @protected\n\t\t * @type {Integer}\n\t\t * @default null\n\t\t */\n    this._autoPurge = undefined;\n    this.autoPurge = autoPurge;\t//getter/setter handles setting the real value and validating\n\n\t\t/**\n\t\t * The width in px of the drawing surface saved in memory.\n\t\t * @property _viewportWidth\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n    this._viewportWidth = 0;\n\n\t\t/**\n\t\t * The height in px of the drawing surface saved in memory.\n\t\t * @property _viewportHeight\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n    this._viewportHeight = 0;\n\n\t\t/**\n\t\t * A 2D projection matrix used to convert WebGL's viewspace into canvas co-ordinates. Regular canvas display\n\t\t * uses Top-Left values of [0,0] where WebGL uses a Center [0,0] Top-Right [1,1] (euclidean) system.\n\t\t * @property _projectionMatrix\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n    this._projectionMatrix = null;\n\n\t\t/**\n\t\t * The current WebGL canvas context. Often shorthanded to just \"gl\" in many parts of the code.\n\t\t * @property _webGLContext\n\t\t * @protected\n\t\t * @type {WebGLRenderingContext}\n\t\t * @default null\n\t\t */\n    this._webGLContext = null;\n\n\t\t/**\n\t\t * The color to use when the WebGL canvas has been cleared. May appear as a background color. Defaults to grey.\n\t\t * @property _clearColor\n\t\t * @protected\n\t\t * @type {Object}\n\t\t * @default {r: 0.50, g: 0.50, b: 0.50, a: 0.00}\n\t\t */\n    this._clearColor = { r: 0.50, g: 0.50, b: 0.50, a: 0.00 };\n\n\t\t/**\n\t\t * The maximum number of cards (aka a single sprite) that can be drawn in one draw call. Use getter/setters to\n\t\t * modify otherwise internal buffers may be incorrect sizes.\n\t\t * @property _maxCardsPerBatch\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default StageGL.DEFAULT_MAX_BATCH_SIZE (10000)\n\t\t */\n    this._maxCardsPerBatch = StageGL.DEFAULT_MAX_BATCH_SIZE;\t\t\t\t\t\t\t\t\t\t\t\t\t\t//TODO: write getter/setters for this\n\n\t\t/**\n\t\t * The shader program used to draw the current batch.\n\t\t * @property _activeShader\n\t\t * @protected\n\t\t * @type {WebGLProgram}\n\t\t * @default null\n\t\t */\n    this._activeShader = null;\n\n\t\t/**\n\t\t * The vertex position data for the current draw call.\n\t\t * @property _vertices\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n    this._vertices = null;\n\n\t\t/**\n\t\t * The WebGL buffer attached to {{#crossLink \"StageGL/_vertices:property\"}}{{/crossLink}}.\n\t\t * @property _vertexPositionBuffer\n\t\t * @protected\n\t\t * @type {WebGLBuffer}\n\t\t * @default null\n\t\t */\n    this._vertexPositionBuffer = null;\n\n\t\t/**\n\t\t * The vertex U/V data for the current draw call.\n\t\t * @property _uvs\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n    this._uvs = null;\n\n\t\t/**\n\t\t * The WebGL buffer attached to {{#crossLink \"StageGL/_uvs:property\"}}{{/crossLink}}.\n\t\t * @property _uvPositionBuffer\n\t\t * @protected\n\t\t * @type {WebGLBuffer}\n\t\t * @default null\n\t\t */\n    this._uvPositionBuffer = null;\n\n\t\t/**\n\t\t * The vertex indices data for the current draw call.\n\t\t * @property _indices\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n    this._indices = null;\n\n\t\t/**\n\t\t * The WebGL buffer attached to {{#crossLink \"StageGL/_indices:property\"}}{{/crossLink}}.\n\t\t * @property _textureIndexBuffer\n\t\t * @protected\n\t\t * @type {WebGLBuffer}\n\t\t * @default null\n\t\t */\n    this._textureIndexBuffer = null;\n\n\t\t/**\n\t\t * The vertices data for the current draw call.\n\t\t * @property _alphas\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n    this._alphas = null;\n\n\t\t/**\n\t\t * The WebGL buffer attached to {{#crossLink \"StageGL/_alphas:property\"}}{{/crossLink}}.\n\t\t * @property _alphaBuffer\n\t\t * @protected\n\t\t * @type {WebGLBuffer}\n\t\t * @default null\n\t\t */\n    this._alphaBuffer = null;\n\n\t\t/**\n\t\t * An index based lookup of every WebGL Texture currently in use.\n\t\t * @property _drawTexture\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n    this._textureDictionary = [];\n\n\t\t/**\n\t\t * A string based lookup hash of which index a texture is stored at in the dictionary. The lookup string is\n\t\t * often the src url.\n\t\t * @property _textureIDs\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n    this._textureIDs = {};\n\n\t\t/**\n\t\t * An array of all the textures currently loaded into the GPU. The index in the array matches the GPU index.\n\t\t * @property _batchTextures\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n    this._batchTextures = [];\n\n\t\t/**\n\t\t * An array of all the simple filler textures used to prevent issues with missing textures in a batch.\n\t\t * @property _baseTextures\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n    this._baseTextures = [];\n\n\t\t/**\n\t\t * The number of concurrent textures the GPU can handle. This value is dynamically set from WebGL during initialization\n\t\t * via `gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)`. The WebGL spec states that the lowest guaranteed value is 8,\n\t\t * but it could be higher. Do not set this value higher than the value returned by the GPU. Setting it lower will\n\t\t * probably reduce performance, but may be advisable to reserve slots for custom filter work.\n\t\t * NOTE: Can also act as a length for {{#crossLink \"StageGL/_batchTextures:property\"}}.\n\t\t * @property _batchTextureCount\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 8\n\t\t */\n    this._batchTextureCount = 8;\n\n\t\t/**\n\t\t * The location at which the last texture was inserted into a GPU slot in {{#crossLink \"StageGL/_batchTextures:property\"}}{{/crossLink}}.\n\t\t * Manual control of this variable can yield improvements in performance by intelligently replacing textures\n\t\t * inside a batch to reduce texture re-load. It is impossible to write automated general use code, as it requires\n\t\t * display list look ahead inspection and/or render foreknowledge.\n\t\t * @property _lastTextureInsert\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t */\n    this._lastTextureInsert = -1;\n\n\t\t/**\n\t\t * The current batch being drawn, A batch consists of a call to `drawElements` on the GPU. Many of these calls\n\t\t * can occur per draw.\n\t\t * @property _batchId\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n    this._batchID = 0;\n\n\t\t/**\n\t\t * The current draw being performed, may contain multiple batches. Comparing to {{#crossLink \"StageGL/_batchID:property\"}}{{/crossLink}}\n\t\t * can reveal batching efficiency.\n\t\t * @property _drawID\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n    this._drawID = 0;\n\n\t\t/**\n\t\t * Used to prevent textures in certain GPU slots from being replaced by an insert.\n\t\t * @property _slotBlackList\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n    this._slotBlacklist = [];\n\n\t\t/**\n\t\t * Used to prevent nested draw calls from accidentally overwriting drawing information by tracking depth.\n\t\t * @property _isDrawing\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n    this._isDrawing = 0;\n\n\t\t/**\n\t\t * Used to ensure every canvas used as a texture source has a unique ID.\n\t\t * @property _lastTrackedCanvas\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n    this._lastTrackedCanvas = -1;\n\n\t\t/**\n\t\t * Controls whether final rendering output of a {{#crossLink \"cacheDraw\"}}{{/crossLink}} is the canvas or a render\n\t\t * texture. See the {{#crossLink \"cache\"}}{{/crossLink}} function modifications for full implications and discussion.\n\t\t * @property isCacheControlled\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @todo LM: is this supposed to be _isCacheControlled since its private?\n\t\t */\n    this.isCacheControlled = false;\n\n\t\t/**\n\t\t * Used to counter-position the object being cached so it aligns with the cache surface. Additionally ensures\n\t\t * that all rendering starts with a top level container.\n\t\t * @property _cacheContainer\n\t\t * @protected\n\t\t * @type {Container}\n\t\t * @default An instance of an EaselJS Container.\n\t\t */\n    this._cacheContainer = new createjs.Container();\n\n    // and begin\n    this._initializeWebGL();\n  }\n  var p = createjs.extend(StageGL, createjs.Stage);\n\n  // static methods:\n\t/**\n\t * Calculate the U/V co-ordinate based info for sprite frames. Instead of pixel count it uses a 0-1 space. Also includes\n\t * the ability to get info back for a specific frame, or only calculate that one frame.\n\t *\n\t *     //generate UV rects for all entries\n\t *     StageGL.buildUVRects( spriteSheetA );\n\t *     //generate all, fetch the first\n\t *     var firstFrame = StageGL.buildUVRects( spriteSheetB, 0 );\n\t *     //generate the rect for just a single frame for performance's sake\n\t *     var newFrame = StageGL.buildUVRects( dynamicSpriteSheet, newFrameIndex, true );\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method buildUVRects\n\t * @param  {SpriteSheet} spritesheet The spritesheet to find the frames on\n\t * @param  {int} [target=-1] The index of the frame to return\n\t * @param  {Boolean} [onlyTarget=false] Whether \"target\" is the only frame that gets calculated\n\t * @static\n\t * @return {Object} the target frame if supplied and present or a generic frame {t, l, b, r}\n\t */\n  StageGL.buildUVRects = function (spritesheet, target, onlyTarget) {\n    if (!spritesheet || !spritesheet._frames) { return null; }\n    if (target === undefined) { target = -1; }\n    if (onlyTarget === undefined) { onlyTarget = false; }\n\n    var start = (target != -1 && onlyTarget) ? (target) : (0);\n    var end = (target != -1 && onlyTarget) ? (target + 1) : (spritesheet._frames.length);\n    for (var i = start; i < end; i++) {\n      var f = spritesheet._frames[i];\n      if (f.uvRect || f.image.width <= 0 || f.image.height <= 0) { continue; }\n\n      var r = f.rect;\n      f.uvRect = {\n        t: r.y / f.image.height,\n        l: r.x / f.image.width,\n        b: (r.y + r.height) / f.image.height,\n        r: (r.x + r.width) / f.image.width\n      };\n    }\n\n    return spritesheet._frames[(target != -1) ? target : 0].uvRect || { t: 0, l: 0, b: 1, r: 1 };\n  };\n\n\t/**\n\t * Test a context to see if it has WebGL enabled on it.\n\t * @method isWebGLActive\n\t * @param {CanvasContext} ctx The context to test\n\t * @static\n\t * @return {Boolean} Whether WebGL is enabled\n\t */\n  StageGL.isWebGLActive = function (ctx) {\n    return ctx &&\n      ctx instanceof WebGLRenderingContext &&\n      typeof WebGLRenderingContext !== 'undefined';\n  };\n\n  // static properties:\n\t/**\n\t * The number of properties defined per vertex (x, y, textureU, textureV, textureIndex, alpha)\n\t * @property VERTEX_PROPERTY_COUNT\n\t * @static\n\t * @final\n\t * @type {Number}\n\t * @default 6\n\t * @readonly\n\t */\n  StageGL.VERTEX_PROPERTY_COUNT = 6;\n\n\t/**\n\t * The number of triangle indices it takes to form a Card. 3 per triangle, 2 triangles.\n\t * @property INDICIES_PER_CARD\n\t * @static\n\t * @final\n\t * @type {Number}\n\t * @default 6\n\t * @readonly\n\t */\n  StageGL.INDICIES_PER_CARD = 6;\n\n\t/**\n\t * The default value for the maximum number of cards we want to process in a batch. See\n\t * {{#crossLink \"StageGL/WEBGL_MAX_INDEX_NUM:property\"}}{{/crossLink}} for a hard limit.\n\t * @property DEFAULT_MAX_BATCH_SIZE\n\t * @static\n\t * @final\n\t * @type {Number}\n\t * @default 10000\n\t * @readonly\n\t */\n  StageGL.DEFAULT_MAX_BATCH_SIZE = 10000;\n\n\t/**\n\t * The maximum size WebGL allows for element index numbers. Uses a 16 bit unsigned integer. It takes 6 indices to\n\t * make a unique card.\n\t * @property WEBGL_MAX_INDEX_NUM\n\t * @static\n\t * @final\n\t * @type {Number}\n\t * @default 65536\n\t * @readonly\n\t */\n  StageGL.WEBGL_MAX_INDEX_NUM = Math.pow(2, 16);\n\n\t/**\n\t * Default U/V rect for dealing with full coverage from an image source.\n\t * @property UV_RECT\n\t * @static\n\t * @final\n\t * @type {Object}\n\t * @default {t:0, l:0, b:1, r:1}\n\t * @readonly\n\t */\n  StageGL.UV_RECT = { t: 0, l: 0, b: 1, r: 1 };\n\n  try {\n\t\t/**\n\t\t * Vertex positions for a card that covers the entire render. Used with render targets primarily.\n\t\t * @property COVER_VERT\n\t\t * @static\n\t\t * @final\n\t\t * @type {Float32Array}\n\t\t * @readonly\n\t\t */\n    StageGL.COVER_VERT = new Float32Array([\n      -1, 1,\t\t//TL\n      1, 1,\t\t//TR\n      -1, -1,\t\t//BL\n      1, 1,\t\t//TR\n      1, -1,\t\t//BR\n      -1, -1\t\t//BL\n    ]);\n\n\t\t/**\n\t\t * U/V for {{#crossLink \"StageGL/COVER_VERT:property\"}}{{/crossLink}}.\n\t\t * @property COVER_UV\n\t\t * @static\n\t\t * @final\n\t\t * @type {Float32Array}\n\t\t * @readonly\n\t\t */\n    StageGL.COVER_UV = new Float32Array([\n      0, 0,\t\t//TL\n      1, 0,\t\t//TR\n      0, 1,\t\t//BL\n      1, 0,\t\t//TR\n      1, 1,\t\t//BR\n      0, 1\t\t//BL\n    ]);\n\n\t\t/**\n\t\t * Flipped U/V for {{#crossLink \"StageGL:COVER_VERT:property\"}}{{/crossLink}}.\n\t\t * @property COVER_UV_FLIP\n\t\t * @static\n\t\t * @final\n\t\t * @type {Float32Array}\n\t\t * @readonly\n\t\t */\n    StageGL.COVER_UV_FLIP = new Float32Array([\n      0, 1,\t\t//TL\n      1, 1,\t\t//TR\n      0, 0,\t\t//BL\n      1, 1,\t\t//TR\n      1, 0,\t\t//BR\n      0, 0\t\t//BL\n    ]);\n  } catch (e) { /* Breaking in older browsers, but those browsers wont run StageGL so no recovery or warning needed */ }\n\n\t/**\n\t * Portion of the shader that contains the \"varying\" properties required in both vertex and fragment shaders. The\n\t * regular shader is designed to render all expected objects. Shader code may contain templates that are replaced\n\t * pre-compile.\n\t * @property REGULAR_VARYING_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n  StageGL.REGULAR_VARYING_HEADER = (\n    \"precision mediump float;\" +\n    \"varying vec2 vTextureCoord;\" +\n    \"varying lowp float indexPicker;\" +\n    \"varying lowp float alphaValue;\"\n  );\n\n\t/**\n\t * Actual full header for the vertex shader. Includes the varying header. The regular shader is designed to render\n\t * all expected objects. Shader code may contain templates that are replaced pre-compile.\n\t * @property REGULAR_VERTEX_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n  StageGL.REGULAR_VERTEX_HEADER = (\n    StageGL.REGULAR_VARYING_HEADER +\n    \"attribute vec2 vertexPosition;\" +\n    \"attribute vec2 uvPosition;\" +\n    \"attribute lowp float textureIndex;\" +\n    \"attribute lowp float objectAlpha;\" +\n    \"uniform mat4 pMatrix;\"\n  );\n\n\t/**\n\t * Actual full header for the fragment shader. Includes the varying header. The regular shader is designed to render\n\t * all expected objects. Shader code may contain templates that are replaced pre-compile.\n\t * @property REGULAR_FRAGMENT_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n  StageGL.REGULAR_FRAGMENT_HEADER = (\n    StageGL.REGULAR_VARYING_HEADER +\n    \"uniform sampler2D uSampler[{{count}}];\"\n  );\n\n\t/**\n\t * Body of the vertex shader. The regular shader is designed to render all expected objects. Shader code may contain\n\t * templates that are replaced pre-compile.\n\t * @property REGULAR_VERTEX_BODY\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n  StageGL.REGULAR_VERTEX_BODY = (\n    \"void main(void) {\" +\n    //DHG TODO: This doesn't work. Must be something wrong with the hand built matrix see js... bypass for now\n    //vertexPosition, round if flag\n    //\"gl_Position = pMatrix * vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);\" +\n    \"gl_Position = vec4(\" +\n    \"(vertexPosition.x * pMatrix[0][0]) + pMatrix[3][0],\" +\n    \"(vertexPosition.y * pMatrix[1][1]) + pMatrix[3][1],\" +\n    \"pMatrix[3][2],\" +\n    \"1.0\" +\n    \");\" +\n    \"alphaValue = objectAlpha;\" +\n    \"indexPicker = textureIndex;\" +\n    \"vTextureCoord = uvPosition;\" +\n    \"}\"\n  );\n\n\t/**\n\t * Body of the fragment shader. The regular shader is designed to render all expected objects. Shader code may\n\t * contain templates that are replaced pre-compile.\n\t * @property REGULAR_FRAGMENT_BODY\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n  StageGL.REGULAR_FRAGMENT_BODY = (\n    \"void main(void) {\" +\n    \"vec4 color = vec4(1.0, 0.0, 0.0, 1.0);\" +\n\n    \"if (indexPicker <= 0.5) {\" +\n    \"color = texture2D(uSampler[0], vTextureCoord);\" +\n    \"{{alternates}}\" +\n    \"}\" +\n\n    \"{{fragColor}}\" +\n    \"}\"\n  );\n  StageGL.REGULAR_FRAG_COLOR_NORMAL = (\n    \"gl_FragColor = vec4(color.rgb, color.a * alphaValue);\"\n  );\n  StageGL.REGULAR_FRAG_COLOR_PREMULTIPLY = (\n    \"if(color.a > 0.0035) {\" +\t\t// 1/255 = 0.0039, so ignore any value below 1 because it's probably noise\n    \"gl_FragColor = vec4(color.rgb/color.a, color.a * alphaValue);\" +\n    \"} else {\" +\n    \"gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\" +\n    \"}\"\n  );\n\n  //TODO: DHG: a real particle shader\n\t/**\n\t * @property PARTICLE_VERTEX_BODY\n\t * @todo\n\t * @final\n\t * @static\n\t * @type {String}\n\t * @readonly\n\t */\n  StageGL.PARTICLE_VERTEX_BODY = (\n    StageGL.REGULAR_VERTEX_BODY\n  );\n\t/**\n\t * @property PARTICLE_FRAGMENT_BODY\n\t * @todo\n\t * @final\n\t * @static\n\t * @type {String}\n\t * @readonly\n\t */\n  StageGL.PARTICLE_FRAGMENT_BODY = (\n    StageGL.REGULAR_FRAGMENT_BODY\n  );\n\n\t/**\n\t * Portion of the shader that contains the \"varying\" properties required in both vertex and fragment shaders. The\n\t * cover shader is designed to be a simple vertex/uv only texture render that covers the render surface. Shader\n\t * code may contain templates that are replaced pre-compile.\n\t * @property COVER_VARYING_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n  StageGL.COVER_VARYING_HEADER = (\n    \"precision mediump float;\" +\n\n    \"varying highp vec2 vRenderCoord;\" +\n    \"varying highp vec2 vTextureCoord;\"\n  );\n\n\t/**\n\t * Actual full header for the vertex shader. Includes the varying header. The cover shader is designed to be a\n\t * simple vertex/uv only texture render that covers the render surface. Shader code may contain templates that are\n\t * replaced pre-compile.\n\t * @property COVER_VERTEX_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n  StageGL.COVER_VERTEX_HEADER = (\n    StageGL.COVER_VARYING_HEADER +\n    \"attribute vec2 vertexPosition;\" +\n    \"attribute vec2 uvPosition;\" +\n    \"uniform float uUpright;\"\n  );\n\n\t/**\n\t * Actual full header for the fragment shader. Includes the varying header. The cover shader is designed to be a\n\t * simple vertex/uv only texture render that covers the render surface. Shader code may contain templates that are\n\t * replaced pre-compile.\n\t * @property COVER_FRAGMENT_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n  StageGL.COVER_FRAGMENT_HEADER = (\n    StageGL.COVER_VARYING_HEADER +\n    \"uniform sampler2D uSampler;\"\n  );\n\n\t/**\n\t * Body of the vertex shader. The cover shader is designed to be a simple vertex/uv only texture render that covers\n\t * the render surface. Shader code may contain templates that are replaced pre-compile.\n\t * @property COVER_VERTEX_BODY\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n  StageGL.COVER_VERTEX_BODY = (\n    \"void main(void) {\" +\n    \"gl_Position = vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);\" +\n    \"vRenderCoord = uvPosition;\" +\n    \"vTextureCoord = vec2(uvPosition.x, abs(uUpright - uvPosition.y));\" +\n    \"}\"\n  );\n\n\t/**\n\t * Body of the fragment shader. The cover shader is designed to be a simple vertex/uv only texture render that\n\t * covers the render surface. Shader code may contain templates that are replaced pre-compile.\n\t * @property COVER_FRAGMENT_BODY\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n  StageGL.COVER_FRAGMENT_BODY = (\n    \"void main(void) {\" +\n    \"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n    \"gl_FragColor = color;\" +\n    \"}\"\n  );\n\n  // events:\n\t/**\n\t * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it. You can call\n\t * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} on the event to cancel the draw.\n\t * @event drawstart\n\t */\n\n\t/**\n\t * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n\t * @event drawend\n\t */\n\n  // getter / setters:\n  p._get_isWebGL = function () {\n    return !!this._webGLContext;\n  };\n\n  p._set_autoPurge = function (value) {\n    value = isNaN(value) ? 1200 : value;\n    if (value != -1) {\n      value = value < 10 ? 10 : value;\n    }\n    this._autoPurge = value;\n  };\n  p._get_autoPurge = function () {\n    return Number(this._autoPurge);\n  };\n\n  try {\n    Object.defineProperties(p, {\n\t\t\t/**\n\t\t\t * Indicates whether WebGL is being used for rendering. For example, this would be `false` if WebGL is not\n\t\t\t * supported in the browser.\n\t\t\t * @property isWebGL\n\t\t\t * @type {Boolean}\n\t\t\t * @readonly\n\t\t\t */\n      isWebGL: { get: p._get_isWebGL },\n\n\t\t\t/**\n\t\t\t * Specifies whether or not StageGL is automatically purging unused textures. Higher numbers purge less\n\t\t\t * often. Values below 10 are upgraded to 10, and -1 disables this feature.\n\t\t\t * @property autoPurge\n\t\t\t * @protected\n\t\t\t * @type {Integer}\n\t\t\t * @default 1000\n\t\t\t */\n      autoPurge: { get: p._get_autoPurge, set: p._set_autoPurge }\n    });\n  } catch (e) { } // TODO: use Log\n\n\n  // constructor methods:\n\t/**\n\t * Create and properly initialize the WebGL instance.\n\t * @method _initializeWebGL\n\t * @protected\n\t * @return {WebGLRenderingContext}\n\t */\n  p._initializeWebGL = function () {\n    if (this.canvas) {\n      if (!this._webGLContext || this._webGLContext.canvas !== this.canvas) {\n        // A context hasn't been defined yet,\n        // OR the defined context belongs to a different canvas, so reinitialize.\n\n        // defaults and options\n        var options = {\n          depth: false, // Disable the depth buffer as it isn't used.\n          alpha: this._transparent, // Make the canvas background transparent.\n          stencil: true,\n          antialias: this._antialias,\n          premultipliedAlpha: this._premultiply, // Assume the drawing buffer contains colors with premultiplied alpha.\n          preserveDrawingBuffer: this._preserveBuffer\n        };\n\n        var gl = this._webGLContext = this._fetchWebGLContext(this.canvas, options);\n        if (!gl) { return null; }\n\n        this.updateSimultaneousTextureCount(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\n        this._maxTextureSlots = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this._createBuffers(gl);\n        this._initTextures(gl);\n\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this._premultiply);\n        //gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n\n        this._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a);\n        this.updateViewport(this._viewportWidth || this.canvas.width, this._viewportHeight || this.canvas.height);\n      }\n    } else {\n      this._webGLContext = null;\n    }\n    return this._webGLContext;\n  };\n\n  // public methods:\n\t/**\n\t * Docced in superclass\n\t */\n  p.update = function (props) {\n    if (!this.canvas) { return; }\n    if (this.tickOnUpdate) { this.tick(props); }\n    this.dispatchEvent(\"drawstart\");\n    if (this.autoClear) { this.clear(); }\n\n    if (this._webGLContext) {\n      // Use WebGL.\n      this._batchDraw(this, this._webGLContext);\n      if (this._autoPurge != -1 && !(this._drawID % ((this._autoPurge / 2) | 0))) {\n        this.purgeTextures(this._autoPurge);\n      }\n    } else {\n      // Use 2D.\n      var ctx = this.canvas.getContext(\"2d\");\n      ctx.save();\n      this.updateContext(ctx);\n      this.draw(ctx, false);\n      ctx.restore();\n    }\n    this.dispatchEvent(\"drawend\");\n  };\n\n\t/**\n\t * Docced in superclass\n\t */\n  p.clear = function () {\n    if (!this.canvas) { return; }\n    if (StageGL.isWebGLActive(this._webGLContext)) {\n      var gl = this._webGLContext;\n      var cc = this._clearColor;\n      var adjust = this._transparent ? cc.a : 1.0;\n      // Use WebGL settings; adjust for pre multiplied alpha appropriate to scenario\n      this._webGLContext.clearColor(cc.r * adjust, cc.g * adjust, cc.b * adjust, adjust);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      this._webGLContext.clearColor(cc.r, cc.g, cc.b, cc.a);\n    } else {\n      // Use 2D.\n      this.Stage_clear();\n    }\n  };\n\n\t/**\n\t * Draws the stage into the supplied context if possible. Many WebGL properties only exist on their context. As such\n\t * you cannot share contexts among many StageGLs and each context requires a unique StageGL instance. Contexts that\n\t * don't match the context managed by this StageGL will be treated as a 2D context.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D | WebGLRenderingContext} context The context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For\n\t *  example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean} If the draw was handled by this function\n\t */\n  p.draw = function (context, ignoreCache) {\n    if (context === this._webGLContext && StageGL.isWebGLActive(this._webGLContext)) {\n      var gl = this._webGLContext;\n      this._batchDraw(this, gl, ignoreCache);\n      return true;\n    } else {\n      return this.Stage_draw(context, ignoreCache);\n    }\n  };\n\n\t/**\n\t * Draws the target into the correct context, be it a canvas or Render Texture using WebGL.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method cacheDraw\n\t * @param {DisplayObject} target The object we're drawing into cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @param {Array} filters The filters we're drawing into cache.\n\t * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n\t * @return {Boolean} If the draw was handled by this function\n\t */\n  p.cacheDraw = function (target, filters, manager) {\n    if (StageGL.isWebGLActive(this._webGLContext)) {\n      var gl = this._webGLContext;\n      this._cacheDraw(gl, target, filters, manager);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\t/**\n\t * Blocks, or frees a texture \"slot\" on the GPU. Can be useful if you are overflowing textures. When overflowing\n\t * textures they are re-uploaded to the GPU every time they're encountered, this can be expensive with large textures.\n\t * By blocking the slot you reduce available slots, potentially increasing draw calls, but mostly you prevent a\n\t * texture being re-uploaded if it would have moved slots due to overflow.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * For example, block the slot a background image is stored in so there is less re-loading of that image.\n\t * @method protectTextureSlot\n\t * @param  {Number} id The slot to be affected\n\t * @param  {Boolean} [lock=false] Whether this slot is the one being locked.\n\t */\n  p.protectTextureSlot = function (id, lock) {\n    if (id > this._maxTextureSlots || id < 0) {\n      throw \"Slot outside of acceptable range\";\n    }\n    this._slotBlacklist[id] = !!lock;\n  };\n\n\t/**\n\t * Render textures can't draw into themselves so any item being used for renderTextures needs two to alternate between.\n\t * This function creates, gets, and toggles the render surface between the two.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method getTargetRenderTexture\n\t * @param  {DisplayObject} target The object associated with the render textures, usually a cached object.\n\t * @param  {Number} w The width to create the texture at.\n\t * @param  {Number} h The height to create the texture at.\n\t * @return {Objet}\n\t * @todo fill in return type\n\t */\n  p.getTargetRenderTexture = function (target, w, h) {\n    var result, toggle = false;\n    var gl = this._webGLContext;\n    if (target.__lastRT !== undefined && target.__lastRT === target.__rtA) { toggle = true; }\n    if (!toggle) {\n      if (target.__rtA === undefined) {\n        target.__rtA = this.getRenderBufferTexture(w, h);\n      } else {\n        if (w != target.__rtA._width || h != target.__rtA._height) {\n          this.resizeTexture(target.__rtA, w, h);\n        }\n        this.setTextureParams(gl);\n      }\n      result = target.__rtA;\n    } else {\n      if (target.__rtB === undefined) {\n        target.__rtB = this.getRenderBufferTexture(w, h);\n      } else {\n        if (w != target.__rtB._width || h != target.__rtB._height) {\n          this.resizeTexture(target.__rtB, w, h);\n        }\n        this.setTextureParams(gl);\n      }\n      result = target.__rtB;\n    }\n    if (!result) {\n      throw \"Problems creating render textures, known causes include using too much VRAM by not releasing WebGL texture instances\";\n    }\n    target.__lastRT = result;\n    return result;\n  };\n\n\t/**\n\t * For every image encountered StageGL registers and tracks it automatically. This tracking can cause memory leaks \n\t * if not purged. StageGL, by default, automatically purges them. This does have a cost and may unfortunately find\n\t * false positives. This function is for manual management of this memory instead of the automatic system controlled\n\t * by the {{#crossLink \"StageGL/autoPurge:property\"}}{{/crossLink}} property.\n\t *\n\t * This function will recursively remove all textures found on the object, its children, cache, etc. It will uncache \n\t * objects and remove any texture it finds REGARDLESS of whether it is currently in use elsewhere. It is up to the\n\t * developer to ensure that a texture in use is not removed.\n\t *\n\t * Textures in use, or to be used again shortly, should not be removed. This is simply for performance reasons.\n\t * Removing a texture in use will cause the texture to have to be re-uploaded slowing rendering.\n\t * @method releaseTexture\n\t * @param {DisplayObject | Texture | Image | Canvas} item An object that used the texture to be discarded.\n\t * @param {Boolean} safe Should the release attempt to be \"safe\" and only delete this usage.\n\t */\n  p.releaseTexture = function (item, safe) {\n    var i, l;\n    if (!item) { return; }\n\n    // this is a container object\n    if (item.children) {\n      for (i = 0, l = item.children.length; i < l; i++) {\n        this.releaseTexture(item.children[i]);\n      }\n    }\n\n    // this has a cache canvas\n    if (item.cacheCanvas) {\n      item.uncache();\n    }\n\n    var foundImage = undefined;\n    if (item._storeID !== undefined) {\n      // this is a texture itself\n      if (item === this._textureDictionary[item._storeID]) {\n        this._killTextureObject(item);\n        item._storeID = undefined;\n        return;\n      }\n\n      // this is an image or canvas\n      foundImage = item;\n    } else if (item._webGLRenderStyle === 2) {\n      // this is a Bitmap class\n      foundImage = item.image;\n    } else if (item._webGLRenderStyle === 1) {\n      // this is a SpriteSheet, we can't tell which image we used from the list easily so remove them all!\n      for (i = 0, l = item.spriteSheet._images.length; i < l; i++) {\n        this.releaseTexture(item.spriteSheet._images[i]);\n      }\n      return;\n    }\n\n    // did we find anything\n    if (foundImage === undefined) {\n      if (this.vocalDebug) {\n        console.log(\"No associated texture found on release\");\n      }\n      return;\n    }\n\n    // remove it\n    var texture = this._textureDictionary[foundImage._storeID];\n    if (safe) {\n      var data = texture._imageData;\n      var index = data.indexOf(foundImage);\n      if (index >= 0) { data.splice(index, 1); }\n      foundImage._storeID = undefined;\n      if (data.length === 0) { this._killTextureObject(texture); }\n    } else {\n      this._killTextureObject(texture);\n    }\n  };\n\n\t/**\n\t * Similar to {{#crossLink \"releaseTexture\"}}{{/crossLink}}, but this function differs by searching for textures to\n\t * release. It works by assuming that it can purge any texture which was last used more than \"count\" draw calls ago.\n\t * Because this process is unaware of the objects and whether they may be used later on your stage, false positives can\n\t * occur. It is recommended to manually manage your memory with {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}},\n\t * however, there are many use cases where this is simpler and error-free. This process is also run by default under\n\t * the hood to prevent leaks. To disable it see the {{#crossLink \"StageGL/autoPurge:property\"}}{{/crossLink}} property.\n\t * @method purgeTextures\n\t * @param {Number} [count=100] How many renders ago the texture was last used\n\t */\n  p.purgeTextures = function (count) {\n    if (!(count >= 0)) { count = 100; }\n\n    var dict = this._textureDictionary;\n    var l = dict.length;\n    for (var i = 0; i < l; i++) {\n      var data, texture = dict[i];\n      if (!texture || !(data = texture._imageData)) { continue; }\n\n      for (var j = 0; j < data.length; j++) {\n        var item = data[j];\n        if (item._drawID + count <= this._drawID) {\n          item._storeID = undefined;\n          data.splice(j, 1);\n          j--;\n        }\n      }\n\n      if (!data.length) { this._killTextureObject(texture); }\n    }\n  };\n\n\t/**\n\t * Try to set the max textures the system can handle. It should default to the hardware maximum, and lower values\n\t * may limit performance. Some devices have been known to mis-report their max textures, or you may need a standard\n\t * baseline cross devices for testing. Barring the previous suggestions, there is little need to call this function\n\t * as the library will automatically try to find the best value.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method updateSimultaneousTextureCount\n\t * @param {Number} [count=1] The number of textures intended for simultaneous loading.\n\t */\n  p.updateSimultaneousTextureCount = function (count) {\n    // TODO: DHG: make sure API works in all instances, may be some issues with buffers etc I haven't foreseen\n    var gl = this._webGLContext;\n    var success = false;\n\n    if (count < 1 || isNaN(count)) { count = 1; }\n    this._batchTextureCount = count;\n\n    while (!success) {\n      try {\n        this._activeShader = this._fetchShaderProgram(gl);\n        success = true;\n      } catch (e) {\n        if (this._batchTextureCount == 1) {\n          throw \"Cannot compile shader \" + e;\n        }\n\n        this._batchTextureCount -= 4;\n        if (this._batchTextureCount < 1) { this._batchTextureCount = 1; }\n\n        if (this.vocalDebug) {\n          console.log(\"Reducing desired texture count due to errors: \" + this._batchTextureCount);\n        }\n      }\n    }\n  };\n\n\t/**\n\t * Update the WebGL viewport. Note that this does <strong>not</strong> update the canvas element's width/height, but\n\t * the render surface's instead. This is necessary after manually resizing the canvas element on the DOM to avoid a\n\t * up/down scaled render.\n\t * @method updateViewport\n\t * @param {Integer} width The width of the render surface in pixels.\n\t * @param {Integer} height The height of the render surface in pixels.\n\t */\n  p.updateViewport = function (width, height) {\n    this._viewportWidth = width | 0;\n    this._viewportHeight = height | 0;\n    var gl = this._webGLContext;\n\n    if (gl) {\n      gl.viewport(0, 0, this._viewportWidth, this._viewportHeight);\n\n      // WebGL works with a -1,1 space on its screen. It also follows Y-Up\n      // we need to flip the y, scale and then translate the co-ordinates to match this\n      // additionally we offset into they Y so the polygons are inside the camera's \"clipping\" plane\n      this._projectionMatrix = new Float32Array([\n        2 / this._viewportWidth, 0, 0, 0,\n        0, -2 / this._viewportHeight, 1, 0,\n        0, 0, 1, 0,\n        -1, 1, 0.1, 0\n      ]);\n      // create the flipped version for use with render texture flipping\n      // DHG: this would be a slice/clone but some platforms don't offer them for Float32Array\n      this._projectionMatrixFlip = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n      this._projectionMatrixFlip.set(this._projectionMatrix);\n      this._projectionMatrixFlip[5] *= -1;\n      this._projectionMatrixFlip[13] *= -1;\n    }\n  };\n\n\t/**\n\t * Fetches the shader compiled and set up to work with the provided filter/object. The shader is compiled on first\n\t * use and returned on subsequent calls.\n\t * @method getFilterShader\n\t * @param  {Filter|Object} filter The object which will provide the information needed to construct the filter shader.\n\t * @return {WebGLProgram}\n\t */\n  p.getFilterShader = function (filter) {\n    if (!filter) { filter = this; }\n\n    var gl = this._webGLContext;\n    var targetShader = this._activeShader;\n\n    if (filter._builtShader) {\n      targetShader = filter._builtShader;\n      if (filter.shaderParamSetup) {\n        gl.useProgram(targetShader);\n        filter.shaderParamSetup(gl, this, targetShader);\n      }\n    } else {\n      try {\n        targetShader = this._fetchShaderProgram(\n          gl, \"filter\",\n          filter.VTX_SHADER_BODY, filter.FRAG_SHADER_BODY,\n          filter.shaderParamSetup && filter.shaderParamSetup.bind(filter)\n        );\n        filter._builtShader = targetShader;\n        targetShader._name = filter.toString();\n      } catch (e) {\n        console && console.log(\"SHADER SWITCH FAILURE\", e);\n      }\n    }\n    return targetShader;\n  };\n\n\t/**\n\t * Returns a base texture that has no image or data loaded. Not intended for loading images. It may return `null`\n\t * in some error cases, and trying to use a \"null\" texture can cause renders to fail.\n\t * @method getBaseTexture\n\t * @param  {uint} [w=1] The width of the texture in pixels, defaults to 1\n\t * @param  {uint} [h=1] The height of the texture in pixels, defaults to 1\n\t */\n  p.getBaseTexture = function (w, h) {\n    var width = Math.ceil(w > 0 ? w : 1) || 1;\n    var height = Math.ceil(h > 0 ? h : 1) || 1;\n\n    var gl = this._webGLContext;\n    var texture = gl.createTexture();\n    this.resizeTexture(texture, width, height);\n    this.setTextureParams(gl, false);\n\n    return texture;\n  };\n\n\t/**\n\t * Resizes a supplied texture element. May generate invalid textures in some error cases such as; when the texture\n\t * is too large, when an out of texture memory error occurs, or other error scenarios. Trying to use an invalid texture\n\t * can cause renders to hard stop on some devices. Check the WebGL bound texture after running this function.\n\t *\n\t * NOTE: The supplied texture must have been made with the WebGL \"texImage2D\" function, all default APIs in StageGL\n\t * use this, so this note only matters for library developers and plugins.\n\t *\n\t * @protected\n\t * @method resizeTexture\n\t * @param  {WebGLTexture} texture The GL Texture to be modified.\n\t * @param  {uint} [width=1] The width of the texture in pixels, defaults to 1\n\t * @param  {uint} [height=1] The height of the texture in pixels, defaults to 1\n\t */\n  p.resizeTexture = function (texture, width, height) {\n    var gl = this._webGLContext;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(\n      gl.TEXTURE_2D,\t\t\t\t// target\n      0,\t\t\t\t\t\t\t// level of detail\n      gl.RGBA,\t\t\t\t\t// internal format\n      width, height, 0,\t\t\t// width, height, border (only for array/null sourced textures)\n      gl.RGBA,\t\t\t\t\t// format (match internal format)\n      gl.UNSIGNED_BYTE,\t\t\t// type of texture(pixel color depth)\n      null\t\t\t\t\t\t// image data, we can do null because we're doing array data\n    );\n    texture.width = width;\n    texture.height = height;\n  };\n\n\t/**\n\t * Returns a base texture (see {{#crossLink \"StageGL/getBaseTexture\"}}{{/crossLink}}) for details. Also includes an\n\t * attached and linked render buffer in `texture._frameBuffer`. RenderTextures can be thought of as an internal\n\t * canvas on the GPU that can be drawn to.\n\t * @method getRenderBufferTexture\n\t * @param  {Number} w The width of the texture in pixels.\n\t * @param  {Number} h The height of the texture in pixels.\n\t * @return {Texture} the basic texture instance with a render buffer property.\n\t */\n  p.getRenderBufferTexture = function (w, h) {\n    var gl = this._webGLContext;\n\n    // get the texture\n    var renderTexture = this.getBaseTexture(w, h);\n    if (!renderTexture) { return null; }\n\n    // get the frame buffer\n    var frameBuffer = gl.createFramebuffer();\n    if (!frameBuffer) { return null; }\n\n    // set its width and height for spoofing as an image\n    renderTexture.width = w;\n    renderTexture.height = h;\n\n    // attach frame buffer to texture and provide cross links to look up each other\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, renderTexture, 0);\n    frameBuffer._renderTexture = renderTexture;\n    renderTexture._frameBuffer = frameBuffer;\n\n    // these keep track of themselves simply to reduce complexity of some lookup code\n    renderTexture._storeID = this._textureDictionary.length;\n    this._textureDictionary[renderTexture._storeID] = renderTexture;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    return renderTexture;\n  };\n\n\t/**\n\t * Common utility function used to apply the correct texture processing parameters for the bound texture.\n\t * @method setTextureParams\n\t * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param  {Boolean} [isPOT=false] Marks whether the texture is \"Power of Two\", this may allow better quality AA.\n\t */\n  p.setTextureParams = function (gl, isPOT) {\n    if (isPOT && this._antialias) {\n      //non POT linear works in some devices, but performance is NOT good, investigate\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  };\n\n\t/**\n\t * Changes the webGL clear, aka \"background\" color to the provided value. A transparent clear is recommended, as\n\t * non-transparent colours may create undesired boxes around some visuals.\n\t *\n\t * The clear color will also be used for filters and other \"render textures\". The stage background will ignore the\n\t * transparency value and display a solid color normally. For the stage to recognize and use transparency it must be\n\t * created with the transparent flag set to `true` (see {{#crossLink \"StageGL/constructor\"}}{{/crossLink}})).\n\t *\n\t * Using \"transparent white\" to demonstrate, the valid data formats are as follows:\n\t * <ul>\n\t *     <li>\"#FFF\"</li>\n\t *     <li>\"#FFFFFF\"</li>\n\t *     <li>\"#FFFFFF00\"</li>\n\t *     <li>\"rgba(255,255,255,0.0)\"</li>\n\t * </ul>\n\t * @method setClearColor\n\t * @param {String|int} [color=0x00000000] The new color to use as the background\n\t */\n  p.setClearColor = function (color) {\n    var r, g, b, a, output;\n\n    if (typeof color == \"string\") {\n      if (color.indexOf(\"#\") == 0) {\n        if (color.length == 4) {\n          color = \"#\" + color.charAt(1) + color.charAt(1) + color.charAt(2) + color.charAt(2) + color.charAt(3) + color.charAt(3)\n        }\n        r = Number(\"0x\" + color.slice(1, 3)) / 255;\n        g = Number(\"0x\" + color.slice(3, 5)) / 255;\n        b = Number(\"0x\" + color.slice(5, 7)) / 255;\n        a = Number(\"0x\" + color.slice(7, 9)) / 255;\n      } else if (color.indexOf(\"rgba(\") == 0) {\n        output = color.slice(5, -1).split(\",\");\n        r = Number(output[0]) / 255;\n        g = Number(output[1]) / 255;\n        b = Number(output[2]) / 255;\n        a = Number(output[3]);\n      }\n    } else {\t// >>> is an unsigned shift which is what we want as 0x80000000 and up are negative values\n      r = ((color & 0xFF000000) >>> 24) / 255;\n      g = ((color & 0x00FF0000) >>> 16) / 255;\n      b = ((color & 0x0000FF00) >>> 8) / 255;\n      a = (color & 0x000000FF) / 255;\n    }\n\n    this._clearColor.r = r || 0;\n    this._clearColor.g = g || 0;\n    this._clearColor.b = b || 0;\n    this._clearColor.a = a || 0;\n\n    if (!this._webGLContext) { return; }\n    this._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a);\n  };\n\n\t/**\n\t * docced in subclass\n\t */\n  p.toString = function () {\n    return \"[StageGL (name=\" + this.name + \")]\";\n  };\n\n  // private methods:\n\t/**\n\t * Returns a base texture that has no image or data loaded. Not intended for loading images. In some error cases,\n\t * the texture creation will fail. This function differs from {{#crossLink \"StageGL/getBaseTexture\"}}{{/crossLink}}\n\t * in that the failed textures will be replaced with a safe to render \"nothing\" texture.\n\t * @method _getSafeTexture\n\t * @param  {uint} [w=1] The width of the texture in pixels, defaults to 1\n\t * @param  {uint} [h=1] The height of the texture in pixels, defaults to 1\n\t */\n  p._getSafeTexture = function (w, h) {\n    var texture = this.getBaseTexture(w, h);\n\n    if (!texture) {\n      var msg = \"Problem creating texture, possible cause: using too much VRAM, please try releasing texture memory\";\n      (console.error && console.error(msg)) || console.log(msg);\n\n      texture = this._baseTextures[0];\n    }\n\n    return texture;\n  };\n\n\t/**\n\t * Sets up and returns the WebGL context for the canvas. May return undefined in error scenarios. These can include \n\t * situations where the canvas element already has a context, 2D or GL.\n\t * @param  {Canvas} canvas The DOM canvas element to attach to\n\t * @param  {Object} options The options to be handed into the WebGL object, see WebGL spec\n\t * @method _fetchWebGLContext\n\t * @protected\n\t * @return {WebGLRenderingContext} The WebGL context, may return undefined in error scenarios\n\t */\n  p._fetchWebGLContext = function (canvas, options) {\n    var gl;\n\n    try {\n      gl = canvas.getContext(\"webgl\", options) || canvas.getContext(\"experimental-webgl\", options);\n    } catch (e) {\n      // don't do anything in catch, null check will handle it\n    }\n\n    if (!gl) {\n      var msg = \"Could not initialize WebGL\";\n      console.error ? console.error(msg) : console.log(msg);\n    } else {\n      gl.viewportWidth = canvas.width;\n      gl.viewportHeight = canvas.height;\n    }\n\n    return gl;\n  };\n\n\t/**\n\t * Create the completed Shader Program from the vertex and fragment shaders. Allows building of custom shaders for\n\t * filters. Once compiled, shaders are saved so. If the Shader code requires dynamic alterations re-run this function\n\t * to generate a new shader.\n\t * @method _fetchShaderProgram\n\t * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param  {String} [shaderName=\"regular\"] Working values: \"regular\", \"override\", and \"filter\". Which type of shader to build.\n\t * Filter and override both accept the custom params. Regular and override have all features. Filter is a special case reduced feature shader meant to be over-ridden.\n\t * @param  {String} [customVTX] Extra vertex shader information to replace a regular draw, see \n\t * {{#crossLink \"StageGL/COVER_VERTEX_BODY\"}}{{/crossLink}} for default and {{#crossLink \"Filter\"}}{{/crossLink}} for examples.\n\t * @param  {String} [customFRAG] Extra fragment shader information to replace a regular draw, see \n\t * {{#crossLink \"StageGL/COVER_FRAGMENT_BODY\"}}{{/crossLink}} for default and {{#crossLink \"Filter\"}}{{/crossLink}} for examples.\n\t * @param  {Function} [shaderParamSetup] Function to run so custom shader parameters can get applied for the render.\n\t * @protected\n\t * @return {WebGLProgram} The compiled and linked shader\n\t */\n  p._fetchShaderProgram = function (gl, shaderName, customVTX, customFRAG, shaderParamSetup) {\n    gl.useProgram(null);\t\t// safety to avoid collisions\n\n    // build the correct shader string out of the right headers and bodies\n    var targetFrag, targetVtx;\n    switch (shaderName) {\n      case \"filter\":\n        targetVtx = StageGL.COVER_VERTEX_HEADER + (customVTX || StageGL.COVER_VERTEX_BODY);\n        targetFrag = StageGL.COVER_FRAGMENT_HEADER + (customFRAG || StageGL.COVER_FRAGMENT_BODY);\n        break;\n      case \"particle\": //TODO\n        targetVtx = StageGL.REGULAR_VERTEX_HEADER + StageGL.PARTICLE_VERTEX_BODY;\n        targetFrag = StageGL.REGULAR_FRAGMENT_HEADER + StageGL.PARTICLE_FRAGMENT_BODY;\n        break;\n      case \"override\":\n        targetVtx = StageGL.REGULAR_VERTEX_HEADER + (customVTX || StageGL.REGULAR_VERTEX_BODY);\n        targetFrag = StageGL.REGULAR_FRAGMENT_HEADER + (customFRAG || StageGL.REGULAR_FRAGMENT_BODY);\n        break;\n      case \"regular\":\n      default:\n        targetVtx = StageGL.REGULAR_VERTEX_HEADER + StageGL.REGULAR_VERTEX_BODY;\n        targetFrag = StageGL.REGULAR_FRAGMENT_HEADER + StageGL.REGULAR_FRAGMENT_BODY;\n        break;\n    }\n\n    // create the separate vars\n    var vertexShader = this._createShader(gl, gl.VERTEX_SHADER, targetVtx);\n    var fragmentShader = this._createShader(gl, gl.FRAGMENT_SHADER, targetFrag);\n\n    // link them together\n    var shaderProgram = gl.createProgram();\n    gl.attachShader(shaderProgram, vertexShader);\n    gl.attachShader(shaderProgram, fragmentShader);\n    gl.linkProgram(shaderProgram);\n    shaderProgram._type = shaderName;\n\n    // check compile status\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n      gl.useProgram(this._activeShader);\n      throw gl.getProgramInfoLog(shaderProgram);\n    }\n\n    // set up the parameters on the shader\n    gl.useProgram(shaderProgram);\n    switch (shaderName) {\n      case \"filter\":\n        // get the places in memory the shader is stored so we can feed information into them\n        // then save it off on the shader because it's so tied to the shader itself\n        shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"vertexPosition\");\n        gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n\n        shaderProgram.uvPositionAttribute = gl.getAttribLocation(shaderProgram, \"uvPosition\");\n        gl.enableVertexAttribArray(shaderProgram.uvPositionAttribute);\n\n        shaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\n        gl.uniform1i(shaderProgram.samplerUniform, 0);\n\n        shaderProgram.uprightUniform = gl.getUniformLocation(shaderProgram, \"uUpright\");\n        gl.uniform1f(shaderProgram.uprightUniform, 0);\n\n        // if there's some custom attributes be sure to hook them up\n        if (shaderParamSetup) {\n          shaderParamSetup(gl, this, shaderProgram);\n        }\n        break;\n      case \"override\":\n      case \"particle\":\n      case \"regular\":\n      default:\n        // get the places in memory the shader is stored so we can feed information into them\n        // then save it off on the shader because it's so tied to the shader itself\n        shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"vertexPosition\");\n        gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n\n        shaderProgram.uvPositionAttribute = gl.getAttribLocation(shaderProgram, \"uvPosition\");\n        gl.enableVertexAttribArray(shaderProgram.uvPositionAttribute);\n\n        shaderProgram.textureIndexAttribute = gl.getAttribLocation(shaderProgram, \"textureIndex\");\n        gl.enableVertexAttribArray(shaderProgram.textureIndexAttribute);\n\n        shaderProgram.alphaAttribute = gl.getAttribLocation(shaderProgram, \"objectAlpha\");\n        gl.enableVertexAttribArray(shaderProgram.alphaAttribute);\n\n        var samplers = [];\n        for (var i = 0; i < this._batchTextureCount; i++) {\n          samplers[i] = i;\n        }\n\n        shaderProgram.samplerData = samplers;\n        shaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\n        gl.uniform1iv(shaderProgram.samplerUniform, samplers);\n\n        shaderProgram.pMatrixUniform = gl.getUniformLocation(shaderProgram, \"pMatrix\");\n        break;\n    }\n\n    gl.useProgram(this._activeShader);\n    return shaderProgram;\n  };\n\n\t/**\n\t * Creates a shader from the specified string replacing templates. Template items are defined via `{{` `key` `}}``.\n\t * @method _createShader\n\t * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param  {Number} type The type of shader to create. gl.VERTEX_SHADER | gl.FRAGMENT_SHADER\n\t * @param  {String} str The definition for the shader.\n\t * @return {WebGLShader}\n\t * @protected\n\t */\n  p._createShader = function (gl, type, str) {\n    // inject the static number\n    str = str.replace(/\\{\\{count}}/g, this._batchTextureCount);\n\n    // resolve issue with no dynamic samplers by creating correct samplers in if else chain\n    // TODO: WebGL 2.0 does not need this support\n    var insert = \"\";\n    for (var i = 1; i < this._batchTextureCount; i++) {\n      insert += \"} else if (indexPicker <= \" + i + \".5) { color = texture2D(uSampler[\" + i + \"], vTextureCoord);\";\n    }\n    str = str.replace(/\\{\\{alternates}}/g, insert);\n    str = str.replace(/\\{\\{fragColor}}/g, this._premultiply ? StageGL.REGULAR_FRAG_COLOR_PREMULTIPLY : StageGL.REGULAR_FRAG_COLOR_NORMAL);\n\n    // actually compile the shader\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, str);\n    gl.compileShader(shader);\n\n    // check compile status\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw gl.getShaderInfoLog(shader);\n    }\n\n    return shader;\n  };\n\n\t/**\n\t * Sets up the necessary vertex property buffers, including position and U/V.\n\t * @method _createBuffers\n\t * @param {WebGLRenderingContext} gl\n\t * @protected\n\t */\n  p._createBuffers = function (gl) {\n    var groupCount = this._maxCardsPerBatch * StageGL.INDICIES_PER_CARD;\n    var groupSize, i, l;\n\n    // INFO:\n    // all buffers are created using this pattern\n    // create a WebGL buffer\n    // attach it to context\n    // figure out how many parts it has to an entry\n    // fill it with empty data to reserve the memory\n    // attach the empty data to the GPU\n    // track the sizes on the buffer object\n\n    // INFO:\n    // a single buffer may be optimal in some situations and would be approached like this,\n    // currently not implemented due to lack of need and potential complications with drawCover\n\n    // var vertexBuffer = this._vertexBuffer = gl.createBuffer();\n    // gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    // groupSize = 2 + 2 + 1 + 1; //x/y, u/v, index, alpha\n    // var vertexData = this._vertexData = new Float32Array(groupCount * groupSize);\n    // for (i=0; i<vertexData.length; i+=groupSize) {\n    // \tvertexData[i+0] = vertexData[i+1] = 0;\n    // \tvertexData[i+2] = vertexData[i+3] = 0.5;\n    // \tvertexData[i+4] = 0;\n    // \tvertexData[i+5] = 1;\n    // }\n    // vertexBuffer.itemSize = groupSize;\n    // vertexBuffer.numItems = groupCount;\n    // TODO bechmark and test using unified buffer\n\n    // the actual position information\n    var vertexPositionBuffer = this._vertexPositionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n    groupSize = 2;\n    var vertices = this._vertices = new Float32Array(groupCount * groupSize);\n    for (i = 0, l = vertices.length; i < l; i += groupSize) { vertices[i] = vertices[i + 1] = 0; }\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.DYNAMIC_DRAW);\n    vertexPositionBuffer.itemSize = groupSize;\n    vertexPositionBuffer.numItems = groupCount;\n\n    // where on the texture it gets its information\n    var uvPositionBuffer = this._uvPositionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n    groupSize = 2;\n    var uvs = this._uvs = new Float32Array(groupCount * groupSize);\n    for (i = 0, l = uvs.length; i < l; i += groupSize) { uvs[i] = uvs[i + 1] = 0; }\n    gl.bufferData(gl.ARRAY_BUFFER, uvs, gl.DYNAMIC_DRAW);\n    uvPositionBuffer.itemSize = groupSize;\n    uvPositionBuffer.numItems = groupCount;\n\n    // what texture it should use\n    var textureIndexBuffer = this._textureIndexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, textureIndexBuffer);\n    groupSize = 1;\n    var indices = this._indices = new Float32Array(groupCount * groupSize);\n    for (i = 0, l = indices.length; i < l; i++) { indices[i] = 0; }\n    gl.bufferData(gl.ARRAY_BUFFER, indices, gl.DYNAMIC_DRAW);\n    textureIndexBuffer.itemSize = groupSize;\n    textureIndexBuffer.numItems = groupCount;\n\n    // what alpha it should have\n    var alphaBuffer = this._alphaBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, alphaBuffer);\n    groupSize = 1;\n    var alphas = this._alphas = new Float32Array(groupCount * groupSize);\n    for (i = 0, l = alphas.length; i < l; i++) { alphas[i] = 1; }\n    gl.bufferData(gl.ARRAY_BUFFER, alphas, gl.DYNAMIC_DRAW);\n    alphaBuffer.itemSize = groupSize;\n    alphaBuffer.numItems = groupCount;\n  };\n\n\t/**\n\t * Do all the setup steps for textures in the system.\n\t * @method _initTextures\n\t * @protected\n\t */\n  p._initTextures = function () {\n    //TODO: DHG: add a cleanup routine in here in case this happens mid stream\n\n    // reset counters\n    this._lastTextureInsert = -1;\n\n    // clear containers\n    this._textureDictionary = [];\n    this._textureIDs = {};\n    this._baseTextures = [];\n    this._batchTextures = [];\n\n    // fill in blanks as it helps the renderer be stable while textures are loading and reduces need for safety code\n    for (var i = 0; i < this._batchTextureCount; i++) {\n      var texture = this.getBaseTexture();\n      this._baseTextures[i] = this._batchTextures[i] = texture;\n      if (!texture) {\n        throw \"Problems creating basic textures, known causes include using too much VRAM by not releasing WebGL texture instances\";\n      } else {\n        texture._storeID = -1;\n      }\n    }\n  };\n\n\t/**\n\t * Load a specific texture, accounting for potential delay, as it might not be preloaded.\n\t * @method _loadTextureImage\n\t * @param {WebGLRenderingContext} gl\n\t * @param {Image | Canvas} image Actual image to be loaded\n\t * @return {WebGLTexture} The resulting Texture object\n\t * @protected\n\t */\n  p._loadTextureImage = function (gl, image) {\n    var srcPath, texture, msg;\n    if (image instanceof Image && image.src) {\n      srcPath = image.src;\n    } else if (image instanceof HTMLCanvasElement) {\n      image._isCanvas = true; //canvases are already loaded and assumed unique so note that\n      srcPath = \"canvas_\" + (++this._lastTrackedCanvas);\n    } else {\n      msg = \"Invalid image provided as source. Please ensure source is a correct DOM element.\";\n      (console.error && console.error(msg, image)) || console.log(msg, image);\n      return;\n    }\n\n    // create the texture lookup and texture\n    var storeID = this._textureIDs[srcPath];\n    if (storeID === undefined) {\n      this._textureIDs[srcPath] = storeID = this._textureDictionary.length;\n      image._storeID = storeID;\n      image._invalid = !image.isCanvas;\n      texture = this._getSafeTexture();\n      this._textureDictionary[storeID] = texture;\n    } else {\n      image._storeID = storeID;\n      texture = this._textureDictionary[storeID];\n    }\n\n    // allow the texture to track its references for cleanup, if it's not an error ref\n    if (texture._storeID != -1) {\n      texture._storeID = storeID;\n      if (texture._imageData) {\n        texture._imageData.push(image);\n      } else {\n        texture._imageData = [image];\n      }\n    }\n\n    // insert texture into batch\n    this._insertTextureInBatch(gl, texture);\n\n    return texture;\n  };\n\n\t/**\n\t * Necessary to upload the actual image data to the GPU. Without this the texture will be blank. Called automatically\n\t * in most cases due to loading and caching APIs. Flagging an image source with `_invalid = true` will trigger this\n\t * next time the image is rendered.\n\t * @param {WebGLRenderingContext} gl\n\t * @param {Image | Canvas} image The image data to be uploaded\n\t * @protected\n\t */\n  p._updateTextureImageData = function (gl, image) {\n    // the image isn't loaded and isn't ready to be updated, because we don't set the invalid flag we should try again later\n    if (!(image.complete || image._isCanvas || image.naturalWidth)) {\n      return;\n    }\n\n    // the bitwise & is intentional, cheap exponent 2 check\n    var isNPOT = (image.width & image.width - 1) || (image.height & image.height - 1);\n    var texture = this._textureDictionary[image._storeID];\n\n    gl.activeTexture(gl.TEXTURE0 + texture._activeIndex);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    texture.isPOT = !isNPOT;\n    this.setTextureParams(gl, texture.isPOT);\n\n    try {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    } catch (e) {\n      var errString = \"\\nAn error has occurred. This is most likely due to security restrictions on WebGL images with local or cross-domain origins\";\n      if (console.error) {\n        //TODO: LM: I recommend putting this into a log function internally, since you do it so often, and each is implemented differently.\n        console.error(errString);\n        console.error(e);\n      } else if (console) {\n        console.log(errString);\n        console.log(e);\n      }\n    }\n\n    image._invalid = false;\n\n    texture._w = image.width;\n    texture._h = image.height;\n\n    if (this.vocalDebug) {\n      if (isNPOT && this._antialias) {\n        console.warn(\"NPOT(Non Power of Two) Texture w/ antialias on: \" + image.src);\n      }\n      if (image.width > gl.MAX_TEXTURE_SIZE || image.height > gl.MAX_TEXTURE_SIZE) {\n        console && console.error(\"Oversized Texture: \" + image.width + \"x\" + image.height + \" vs \" + gl.MAX_TEXTURE_SIZE + \"max\");\n      }\n    }\n  };\n\n\t/**\n\t * Adds the texture to a spot in the current batch, forcing a draw if no spots are free.\n\t * @method _insertTextureInBatch\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param {WebGLTexture} texture The texture to be inserted.\n\t * @protected\n\t */\n  p._insertTextureInBatch = function (gl, texture) {\n    if (this._batchTextures[texture._activeIndex] !== texture) {\t// if it wasn't used last batch\n      // we've got to find it a a spot.\n      var found = -1;\n      var start = (this._lastTextureInsert + 1) % this._batchTextureCount;\n      var look = start;\n      do {\n        if (this._batchTextures[look]._batchID != this._batchID && !this._slotBlacklist[look]) {\n          found = look;\n          break;\n        }\n        look = (look + 1) % this._batchTextureCount;\n      } while (look !== start);\n\n      // we couldn't find anywhere for it go, meaning we're maxed out\n      if (found === -1) {\n        this.batchReason = \"textureOverflow\";\n        this._drawBuffers(gl);\t\t// <------------------------------------------------------------------------\n        this.batchCardCount = 0;\n        found = start; //TODO: how do we optimize this to be smarter?\n      }\n\n      // lets put it into that spot\n      this._batchTextures[found] = texture;\n      texture._activeIndex = found;\n      var image = texture._imageData && texture._imageData[0]; // first come first served, potentially problematic\n      if (image && image._invalid) {\n        this._updateTextureImageData(gl, image);\n      } else {\n        gl.activeTexture(gl.TEXTURE0 + found);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        this.setTextureParams(gl);\n      }\n      this._lastTextureInsert = found;\n\n    } else if (texture._drawID !== this._drawID) {\t// hanging around from previous draws means the content might be out of date\n      var image = texture._imageData && texture._imageData[0];\n      if (image && image._invalid) {\n        this._updateTextureImageData(gl, image);\n      }\n    }\n\n    texture._drawID = this._drawID;\n    texture._batchID = this._batchID;\n  };\n\n\t/**\n\t * Remove and clean the texture, expects a texture and is inflexible. Mostly for internal use, recommended to call \n\t * {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}} instead as it will call this with the correct texture object(s).\n\t * Note: Testing shows this may not happen immediately, have to wait frames for WebGL to have actually adjust memory.\n\t * @method _killTextureObject\n\t * @param {Texture} texture The texture to be cleaned out\n\t * @protected\n\t */\n  p._killTextureObject = function (texture) {\n    if (!texture) { return; }\n    var gl = this._webGLContext;\n\n    // remove linkage\n    if (texture._storeID !== undefined && texture._storeID >= 0) {\n      this._textureDictionary[texture._storeID] = undefined;\n      for (var n in this._textureIDs) {\n        if (this._textureIDs[n] == texture._storeID) { delete this._textureIDs[n]; }\n      }\n      var data = texture._imageData;\n      for (var i = data.length - 1; i >= 0; i--) { data[i]._storeID = undefined; }\n      texture._imageData = texture._storeID = undefined;\n    }\n\n    // make sure to drop it out of an active slot\n    if (texture._activeIndex !== undefined && this._batchTextures[texture._activeIndex] === texture) {\n      this._batchTextures[texture._activeIndex] = this._baseTextures[texture._activeIndex];\n    }\n\n    // remove buffers if present\n    try {\n      if (texture._frameBuffer) { gl.deleteFramebuffer(texture._frameBuffer); }\n      texture._frameBuffer = undefined;\n    } catch (e) {\n      /* suppress delete errors because it's already gone or didn't need deleting probably */\n      if (this.vocalDebug) { console.log(e); }\n    }\n\n    // remove entry\n    try {\n      gl.deleteTexture(texture);\n    } catch (e) {\n      /* suppress delete errors because it's already gone or didn't need deleting probably */\n      if (this.vocalDebug) { console.log(e); }\n    }\n  };\n\n\t/**\n\t * Store or restore current batch textures into a backup array\n\t * @method _backupBatchTextures\n\t * @param {Boolean} restore Perform a restore instead of a store.\n\t * @param {Array} [target=this._backupTextures] Where to perform the backup, defaults to internal backup.\n\t * @protected\n\t */\n  p._backupBatchTextures = function (restore, target) {\n    var gl = this._webGLContext;\n\n    if (!this._backupTextures) { this._backupTextures = []; }\n    if (target === undefined) { target = this._backupTextures; }\n\n    for (var i = 0; i < this._batchTextureCount; i++) {\n      gl.activeTexture(gl.TEXTURE0 + i);\n      if (restore) {\n        this._batchTextures[i] = target[i];\n      } else {\n        target[i] = this._batchTextures[i];\n        this._batchTextures[i] = this._baseTextures[i];\n      }\n      gl.bindTexture(gl.TEXTURE_2D, this._batchTextures[i]);\n      this.setTextureParams(gl, this._batchTextures[i].isPOT);\n    }\n\n    if (restore && target === this._backupTextures) { this._backupTextures = []; }\n  };\n\n\t/**\n\t * Begin the drawing process for a regular render.\n\t * @method _batchDraw\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param {Stage || Container} sceneGraph {{#crossLink \"Container\"}}{{/crossLink}} object with all that needs to rendered, preferably a Stage.\n\t * @param {Boolean} ignoreCache\n\t * @protected\n\t */\n  p._batchDraw = function (sceneGraph, gl, ignoreCache) {\n    if (this._isDrawing > 0) {\n      this._drawBuffers(gl);\n    }\n    this._isDrawing++;\n    this._drawID++;\n\n    this.batchCardCount = 0;\n    this.depth = 0;\n\n    this._appendToBatchGroup(sceneGraph, gl, new createjs.Matrix2D(), this.alpha, ignoreCache);\n\n    this.batchReason = \"drawFinish\";\n    this._drawBuffers(gl);\t\t\t\t\t\t\t\t// <--------------------------------------------------------\n    this._isDrawing--;\n  };\n\n\t/**\n\t * Perform the drawing process to fill a specific cache texture, including applying filters.\n\t * @method _cacheDraw\n\t * @param {DisplayObject} target The object we're drawing into the cache. For example, used for drawing the cache\n\t * (to prevent it from simply drawing an existing cache back into itself).\n\t * @param {Array} filters The filters we're drawing into cache.\n\t * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n\t * @protected\n\t */\n  p._cacheDraw = function (gl, target, filters, manager) {\n\t\t/*\n\t\tImplicitly there are 4 modes to this function: filtered-sameContext, filtered-uniqueContext, sameContext, uniqueContext.\n\t\tEach situation must be handled slightly differently as 'sameContext' or 'uniqueContext' define how the output works,\n\t\tone drawing directly into the main context and the other drawing into a stored renderTexture respectively.\n\t\tWhen the draw is a 'filtered' draw, the filters are applied sequentially and will draw into saved textures repeatedly.\n\t\tOnce the final filter is done the final output is treated depending upon whether it is a same or unique context.\n\t\tThe internal complexity comes from reducing over-draw, shared code, and issues like textures needing to be flipped\n\t\tsometimes when written to render textures.\n\t\t*/\n    var renderTexture;\n    var shaderBackup = this._activeShader;\n    var blackListBackup = this._slotBlacklist;\n    var lastTextureSlot = this._maxTextureSlots - 1;\n    var wBackup = this._viewportWidth, hBackup = this._viewportHeight;\n\n    // protect the last slot so that we have somewhere to bind the renderTextures so it doesn't get upset\n    this.protectTextureSlot(lastTextureSlot, true);\n\n    // create offset container for drawing item\n    var mtx = target.getMatrix();\n    mtx = mtx.clone();\n    mtx.scale(1 / manager.scale, 1 / manager.scale);\n    mtx = mtx.invert();\n    mtx.translate(-manager.offX / manager.scale * target.scaleX, -manager.offY / manager.scale * target.scaleY);\n    var container = this._cacheContainer;\n    container.children = [target];\n    container.transformMatrix = mtx;\n\n    this._backupBatchTextures(false);\n\n    if (filters && filters.length) {\n      this._drawFilters(target, filters, manager);\n    } else {\n      // is this for another stage or mine?\n      if (this.isCacheControlled) {\n        // draw item to canvas\t\t\t\tI -> C\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        this._batchDraw(container, gl, true);\n      } else {\n        gl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n        target.cacheCanvas = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n        renderTexture = target.cacheCanvas;\n\n        // draw item to render texture\t\tI -> T\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n        this.updateViewport(manager._drawWidth, manager._drawHeight);\n        this._projectionMatrix = this._projectionMatrixFlip;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        this._batchDraw(container, gl, true);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        this.updateViewport(wBackup, hBackup);\n      }\n    }\n\n    this._backupBatchTextures(true);\n\n    this.protectTextureSlot(lastTextureSlot, false);\n    this._activeShader = shaderBackup;\n    this._slotBlacklist = blackListBackup;\n  };\n\n\t/**\n\t * Sub portion of _cacheDraw, split off for readability. Do not call independently.\n\t * @method _drawFilters\n\t * @param {DisplayObject} target The object we're drawing with a filter.\n\t * @param {Array} filters The filters we're drawing into cache.\n\t * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n\t */\n  p._drawFilters = function (target, filters, manager) {\n    var gl = this._webGLContext;\n    var renderTexture;\n    var lastTextureSlot = this._maxTextureSlots - 1;\n    var wBackup = this._viewportWidth, hBackup = this._viewportHeight;\n\n    var container = this._cacheContainer;\n    var filterCount = filters.length;\n\n    // we don't know which texture slot we're dealing with previously and we need one out of the way\n    // once we're using that slot activate it so when we make and bind our RenderTexture it's safe there\n    gl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n    renderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n\n    // draw item to render texture\t\tI -> T\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n    this.updateViewport(manager._drawWidth, manager._drawHeight);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    this._batchDraw(container, gl, true);\n\n    // bind the result texture to slot 0 as all filters and cover draws assume original content is in slot 0\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, renderTexture);\n    this.setTextureParams(gl);\n\n    var flipY = false;\n    var i = 0, filter = filters[i];\n    do { // this is safe because we wouldn't be in apply filters without a filter count of at least 1\n\n      // swap to correct shader\n      this._activeShader = this.getFilterShader(filter);\n      if (!this._activeShader) { continue; }\n\n      // now the old result is stored in slot 0, make a new render texture\n      gl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n      renderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n\n      // draw result to render texture\tR -> T\n      gl.viewport(0, 0, manager._drawWidth, manager._drawHeight);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      this._drawCover(gl, flipY);\n\n      // bind the result texture to slot 0 as all filters and cover draws assume original content is in slot 0\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindTexture(gl.TEXTURE_2D, renderTexture);\n      this.setTextureParams(gl);\n\n      // use flipping to keep things upright, things already cancel out on a single filter\n      // this needs to be here as multiPass is not accurate to _this_ frame until after shader acquisition\n      if (filterCount > 1 || filters[0]._multiPass) {\n        flipY = !flipY;\n      }\n\n      // work through the multipass if it's there, otherwise move on\n      filter = filter._multiPass !== null ? filter._multiPass : filters[++i];\n    } while (filter);\n\n    // is this for another stage or mine\n    if (this.isCacheControlled) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      this.updateViewport(wBackup, hBackup);\n\n      // draw result to canvas\t\t\tR -> C\n      this._activeShader = this.getFilterShader(this);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      this._drawCover(gl, flipY);\n    } else {\n      //TODO: DHG: this is less than ideal. A flipped initial render for this circumstance might help. Adjust the perspective matrix?\n      if (flipY) {\n        gl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n        renderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n\n        this._activeShader = this.getFilterShader(this);\n        gl.viewport(0, 0, manager._drawWidth, manager._drawHeight);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        this._drawCover(gl, !flipY);\n      }\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      this.updateViewport(wBackup, hBackup);\n\n      // make sure the last texture is the active thing to draw\n      target.cacheCanvas = renderTexture;\n    }\n  };\n\n\t/**\n\t * Add all the contents of a container to the pending buffers, called recursively on each container. This may\n\t * trigger a draw if a buffer runs out of space. This is the main workforce of the render loop.\n\t * @method _appendToBatchGroup\n\t * @param {Container} container The {{#crossLink \"Container\"}}{{/crossLink}} that contains everything to be drawn.\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param {Matrix2D} concatMtx The effective (concatenated) transformation matrix when beginning this container\n\t * @param {Number} concatAlpha The effective (concatenated) alpha when beginning this container\n\t * @param {Boolean} ignoreCache Don't use an element's cache during this draw\n\t * @protected\n\t */\n  p._appendToBatchGroup = function (container, gl, concatMtx, concatAlpha, ignoreCache) {\n    // sort out shared properties\n    if (!container._glMtx) { container._glMtx = new createjs.Matrix2D(); }\n    var cMtx = container._glMtx;\n    cMtx.copy(concatMtx);\n    if (container.transformMatrix) {\n      cMtx.appendMatrix(container.transformMatrix);\n    } else {\n      cMtx.appendTransform(\n        container.x, container.y,\n        container.scaleX, container.scaleY,\n        container.rotation, container.skewX, container.skewY,\n        container.regX, container.regY\n      );\n    }\n\n    // sub components of figuring out the position an object holds\n    var subL, subT, subR, subB;\n\n    // actually apply its data to the buffers\n    var l = container.children.length;\n    for (var i = 0; i < l; i++) {\n      var item = container.children[i];\n\n      if (!(item.visible && concatAlpha)) { continue; }\n      if (!item.cacheCanvas || ignoreCache) {\n        if (item._updateState) {\n          item._updateState();\n        }\n        if (item.children) {\n          this._appendToBatchGroup(item, gl, cMtx, item.alpha * concatAlpha);\n          continue;\n        }\n      }\n\n      // check for overflowing batch, if yes then force a render\n      // TODO: DHG: consider making this polygon count dependant for things like vector draws\n      if (this.batchCardCount + 1 > this._maxCardsPerBatch) {\n        this.batchReason = \"vertexOverflow\";\n        this._drawBuffers(gl);\t\t\t\t\t// <------------------------------------------------------------\n        this.batchCardCount = 0;\n      }\n\n      // keep track of concatenated position\n      if (!item._glMtx) { item._glMtx = new createjs.Matrix2D(); }\n      var iMtx = item._glMtx;\n      iMtx.copy(cMtx);\n      if (item.transformMatrix) {\n        iMtx.appendMatrix(item.transformMatrix);\n      } else {\n        iMtx.appendTransform(\n          item.x, item.y,\n          item.scaleX, item.scaleY,\n          item.rotation, item.skewX, item.skewY,\n          item.regX, item.regY\n        );\n      }\n\n      var uvRect, texIndex, image, frame, texture, src;\n      var useCache = item.cacheCanvas && !ignoreCache;\n\n      // get the image data, or abort if not present\n      if (item._webGLRenderStyle === 2 || useCache) {\t\t\t// BITMAP / Cached Canvas\n        image = (ignoreCache ? false : item.cacheCanvas) || item.image;\n      } else if (item._webGLRenderStyle === 1) {\t\t\t\t\t\t\t\t// SPRITE\n        frame = item.spriteSheet.getFrame(item.currentFrame);\t//TODO: Faster way?\n        if (frame === null) { continue; }\n        image = frame.image;\n      } else {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// MISC (DOM objects render themselves later)\n        continue;\n      }\n      if (!image) { continue; }\n\n      var uvs = this._uvs;\n      var vertices = this._vertices;\n      var texI = this._indices;\n      var alphas = this._alphas;\n\n      // calculate texture\n      if (image._storeID === undefined) {\n        // this texture is new to us so load it and add it to the batch\n        texture = this._loadTextureImage(gl, image);\n      } else {\n        // fetch the texture (render textures know how to look themselves up to simplify this logic)\n        texture = this._textureDictionary[image._storeID];\n\n        if (!texture) { //TODO: this should really not occur but has due to bugs, hopefully this can be removed eventually\n          if (this.vocalDebug) { console.log(\"Image source should not be lookup a non existent texture, please report a bug.\"); }\n          continue;\n        }\n\n        // put it in the batch if needed\n        if (texture._batchID !== this._batchID) {\n          this._insertTextureInBatch(gl, texture);\n        }\n      }\n      texIndex = texture._activeIndex;\n      image._drawID = this._drawID;\n\n      if (item._webGLRenderStyle === 2 || useCache) {\t\t\t// BITMAP / Cached Canvas\n        if (!useCache && item.sourceRect) {\n          // calculate uvs\n          if (!item._uvRect) { item._uvRect = {}; }\n          src = item.sourceRect;\n          uvRect = item._uvRect;\n          uvRect.t = (src.y) / image.height;\n          uvRect.l = (src.x) / image.width;\n          uvRect.b = (src.y + src.height) / image.height;\n          uvRect.r = (src.x + src.width) / image.width;\n\n          // calculate vertices\n          subL = 0; subT = 0;\n          subR = src.width + subL; subB = src.height + subT;\n        } else {\n          // calculate uvs\n          uvRect = StageGL.UV_RECT;\n          // calculate vertices\n          if (useCache) {\n            src = item.bitmapCache;\n            subL = src.x + (src._filterOffX / src.scale); subT = src.y + (src._filterOffY / src.scale);\n            subR = (src._drawWidth / src.scale) + subL; subB = (src._drawHeight / src.scale) + subT;\n          } else {\n            subL = 0; subT = 0;\n            subR = image.width + subL; subB = image.height + subT;\n          }\n        }\n      } else if (item._webGLRenderStyle === 1) {\t\t\t\t\t\t\t\t\t\t\t// SPRITE\n        var rect = frame.rect;\n\n        // calculate uvs\n        uvRect = frame.uvRect;\n        if (!uvRect) {\n          uvRect = StageGL.buildUVRects(item.spriteSheet, item.currentFrame, false);\n        }\n\n        // calculate vertices\n        subL = -frame.regX; subT = -frame.regY;\n        subR = rect.width - frame.regX; subB = rect.height - frame.regY;\n      }\n\n      // These must be calculated here else a forced draw might happen after they're set\n      var offV1 = this.batchCardCount * StageGL.INDICIES_PER_CARD;\t\t// offset for 1 component vectors\n      var offV2 = offV1 * 2;\t\t\t\t\t\t\t\t\t\t\t// offset for 2 component vectors\n\n      //DHG: See Matrix2D.transformPoint for why this math specifically\n      // apply vertices\n      vertices[offV2] = subL * iMtx.a + subT * iMtx.c + iMtx.tx; vertices[offV2 + 1] = subL * iMtx.b + subT * iMtx.d + iMtx.ty;\n      vertices[offV2 + 2] = subL * iMtx.a + subB * iMtx.c + iMtx.tx; vertices[offV2 + 3] = subL * iMtx.b + subB * iMtx.d + iMtx.ty;\n      vertices[offV2 + 4] = subR * iMtx.a + subT * iMtx.c + iMtx.tx; vertices[offV2 + 5] = subR * iMtx.b + subT * iMtx.d + iMtx.ty;\n      vertices[offV2 + 6] = vertices[offV2 + 2]; vertices[offV2 + 7] = vertices[offV2 + 3];\n      vertices[offV2 + 8] = vertices[offV2 + 4]; vertices[offV2 + 9] = vertices[offV2 + 5];\n      vertices[offV2 + 10] = subR * iMtx.a + subB * iMtx.c + iMtx.tx; vertices[offV2 + 11] = subR * iMtx.b + subB * iMtx.d + iMtx.ty;\n\n      // apply uvs\n      uvs[offV2] = uvRect.l; uvs[offV2 + 1] = uvRect.t;\n      uvs[offV2 + 2] = uvRect.l; uvs[offV2 + 3] = uvRect.b;\n      uvs[offV2 + 4] = uvRect.r; uvs[offV2 + 5] = uvRect.t;\n      uvs[offV2 + 6] = uvRect.l; uvs[offV2 + 7] = uvRect.b;\n      uvs[offV2 + 8] = uvRect.r; uvs[offV2 + 9] = uvRect.t;\n      uvs[offV2 + 10] = uvRect.r; uvs[offV2 + 11] = uvRect.b;\n\n      // apply texture\n      texI[offV1] = texI[offV1 + 1] = texI[offV1 + 2] = texI[offV1 + 3] = texI[offV1 + 4] = texI[offV1 + 5] = texIndex;\n\n      // apply alpha\n      alphas[offV1] = alphas[offV1 + 1] = alphas[offV1 + 2] = alphas[offV1 + 3] = alphas[offV1 + 4] = alphas[offV1 + 5] = item.alpha * concatAlpha;\n\n      this.batchCardCount++;\n    }\n  };\n\n\t/**\n\t * Draws all the currently defined cards in the buffer to the render surface.\n\t * @method _drawBuffers\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @protected\n\t */\n  p._drawBuffers = function (gl) {\n    if (this.batchCardCount <= 0) { return; }\t// prevents error logs on stages filled with un-renederable content.\n\n    if (this.vocalDebug) {\n      console.log(\"Draw[\" + this._drawID + \":\" + this._batchID + \"] : \" + this.batchReason);\n    }\n    var shaderProgram = this._activeShader;\n    var vertexPositionBuffer = this._vertexPositionBuffer;\n    var textureIndexBuffer = this._textureIndexBuffer;\n    var uvPositionBuffer = this._uvPositionBuffer;\n    var alphaBuffer = this._alphaBuffer;\n\n    gl.useProgram(shaderProgram);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n    gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, vertexPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._vertices);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, textureIndexBuffer);\n    gl.vertexAttribPointer(shaderProgram.textureIndexAttribute, textureIndexBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._indices);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n    gl.vertexAttribPointer(shaderProgram.uvPositionAttribute, uvPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._uvs);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, alphaBuffer);\n    gl.vertexAttribPointer(shaderProgram.alphaAttribute, alphaBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._alphas);\n\n    gl.uniformMatrix4fv(shaderProgram.pMatrixUniform, gl.FALSE, this._projectionMatrix);\n\n    for (var i = 0; i < this._batchTextureCount; i++) {\n      var texture = this._batchTextures[i];\n      gl.activeTexture(gl.TEXTURE0 + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      this.setTextureParams(gl, texture.isPOT);\n    }\n\n    gl.drawArrays(gl.TRIANGLES, 0, this.batchCardCount * StageGL.INDICIES_PER_CARD);\n    this._batchID++;\n  };\n\n\t/**\n\t * Draws a card that covers the entire render surface. Mainly used for filters.\n\t * @method _drawBuffers\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param {Boolean} flipY Covers are used for things like RenderTextures and because of 3D vs Canvas space this can\n\t * end up meaning the `y` space sometimes requires flipping in the render.\n\t * @protected\n\t */\n  p._drawCover = function (gl, flipY) {\n    if (this._isDrawing > 0) {\n      this._drawBuffers(gl);\n    }\n\n    if (this.vocalDebug) {\n      console.log(\"Draw[\" + this._drawID + \":\" + this._batchID + \"] : \" + \"Cover\");\n    }\n    var shaderProgram = this._activeShader;\n    var vertexPositionBuffer = this._vertexPositionBuffer;\n    var uvPositionBuffer = this._uvPositionBuffer;\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.useProgram(shaderProgram);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n    gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, vertexPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, StageGL.COVER_VERT);\n    gl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n    gl.vertexAttribPointer(shaderProgram.uvPositionAttribute, uvPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, flipY ? StageGL.COVER_UV_FLIP : StageGL.COVER_UV);\n\n    gl.uniform1i(shaderProgram.samplerUniform, 0);\n    gl.uniform1f(shaderProgram.uprightUniform, flipY ? 0 : 1);\n\n    gl.drawArrays(gl.TRIANGLES, 0, StageGL.INDICIES_PER_CARD);\n  };\n\n  createjs.StageGL = createjs.promote(StageGL, \"Stage\");\n}());\n\n//##############################################################################\n// Bitmap.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\n\t/**\n\t * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n\t * HTML element, or a string.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \tvar bitmap = new createjs.Bitmap(\"imagePath.jpg\");\n\t *\n\t * <strong>Notes:</strong>\n\t * <ol>\n\t * \t<li>When using a video source that may loop or seek, use a {{#crossLink \"VideoBuffer\"}}{{/crossLink}} object to\n\t * \t prevent blinking / flashing.\n\t * \t<li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n\t * \t will be displayed.</li>\n\t * \t<li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n\t * \tthe Bitmap can be cached.</li>\n\t * \t<li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n\t * \thappens in all browsers except recent Firefox builds.</li>\n\t * \t<li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n\t * \tmethods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n\t * \t`crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n\t * </ol>\n\t *\n\t * @class Bitmap\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {CanvasImageSource | String | Object} imageOrUri The source image to display. This can be a CanvasImageSource\n\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t * If the latter, a new Image instance with the URL as its src will be used.\n\t **/\n  function Bitmap(imageOrUri) {\n    this.DisplayObject_constructor();\n\n\n    // public properties:\n\t\t/**\n\t\t * The source image to display. This can be a CanvasImageSource\n\t\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t\t * If the latter, a new Image instance with the URL as its src will be used.\n\t\t * @property image\n\t\t * @type CanvasImageSource | Object\n\t\t **/\n    if (typeof imageOrUri == \"string\") {\n      this.image = document.createElement(\"img\");\n      this.image.src = imageOrUri;\n    } else {\n      this.image = imageOrUri;\n    }\n\n\t\t/**\n\t\t * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n\t\t * Notes:\n\t\t * <ul>\n\t\t *     <li>that video sources must have a width / height set to work correctly with `sourceRect`</li>\n\t\t *     <li>Cached objects will ignore the `sourceRect` property</li>\n\t\t * </ul>\n\t\t * @property sourceRect\n\t\t * @type Rectangle\n\t\t * @default null\n\t\t */\n    this.sourceRect = null;\n\n    // private properties:\n\t\t/**\n\t\t * Docced in superclass.\n\t\t */\n    this._webGLRenderStyle = createjs.DisplayObject._StageGL_BITMAP;\n  }\n  var p = createjs.extend(Bitmap, createjs.DisplayObject);\n\n\n  // public methods:\n\t/**\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t * @method initialize\n\t * @deprecated in favour of `createjs.promote()`\n\t **/\n  p.initialize = Bitmap; // TODO: deprecated.\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n  p.isVisible = function () {\n    var image = this.image;\n    var hasContent = this.cacheCanvas || (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t * @return {Boolean}\n\t **/\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n    var img = this.image, rect = this.sourceRect;\n    if (img.getImage) { img = img.getImage(); }\n    if (!img) { return true; }\n    if (rect) {\n      // some browsers choke on out of bound values, so we'll fix them:\n      var x1 = rect.x, y1 = rect.y, x2 = x1 + rect.width, y2 = y1 + rect.height, x = 0, y = 0, w = img.width, h = img.height;\n      if (x1 < 0) { x -= x1; x1 = 0; }\n      if (x2 > w) { x2 = w; }\n      if (y1 < 0) { y -= y1; y1 = 0; }\n      if (y2 > h) { y2 = h; }\n      ctx.drawImage(img, x1, y1, x2 - x1, y2 - y1, x, y, x2 - x1, y2 - y1);\n    } else {\n      ctx.drawImage(img, 0, 0);\n    }\n    return true;\n  };\n\n  //Note, the doc sections below document using the specified APIs (from DisplayObject)  from\n  //Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method cache\n\t **/\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method updateCache\n\t **/\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method uncache\n\t **/\n\n\t/**\n\t * Docced in superclass.\n\t */\n  p.getBounds = function () {\n    var rect = this.DisplayObject_getBounds();\n    if (rect) { return rect; }\n    var image = this.image, o = this.sourceRect || image;\n    var hasContent = (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n    return hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n  };\n\n\t/**\n\t * Returns a clone of the Bitmap instance.\n\t * @method clone\n\t * @param {Boolean} node Whether the underlying dom element should be cloned as well.\n\t * @return {Bitmap} a clone of the Bitmap instance.\n\t **/\n  p.clone = function (node) {\n    var image = this.image;\n    if (image && node) { image = image.cloneNode(); }\n    var o = new Bitmap(image);\n    if (this.sourceRect) { o.sourceRect = this.sourceRect.clone(); }\n    this._cloneProps(o);\n    return o;\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[Bitmap (name=\" + this.name + \")]\";\n  };\n\n\n  createjs.Bitmap = createjs.promote(Bitmap, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Sprite.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n\t * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n\t * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n\t * play frames as an animation, and even sequence animations together.\n\t *\n\t * See the {{#crossLink \"SpriteSheet\"}}{{/crossLink}} class for more information on setting up frames and animations.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var instance = new createjs.Sprite(spriteSheet);\n\t *      instance.gotoAndStop(\"frameName\");\n\t *\n\t * Until {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} is called,\n\t * only the first defined frame defined in the sprite sheet will be displayed.\n\t *\n\t * @class Sprite\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n\t * dimensions, and frame data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t * @param {String|Number} [frameOrAnimation] The frame number or animation to play initially.\n\t **/\n  function Sprite(spriteSheet, frameOrAnimation) {\n    this.DisplayObject_constructor();\n\n\n    // public properties:\n\t\t/**\n\t\t * The frame index that will be drawn when draw is called. Note that with some {{#crossLink \"SpriteSheet\"}}{{/crossLink}}\n\t\t * definitions, this will advance non-sequentially. This will always be an integer value.\n\t\t * @property currentFrame\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t **/\n    this.currentFrame = 0;\n\n\t\t/**\n\t\t * Returns the name of the currently playing animation.\n\t\t * @property currentAnimation\n\t\t * @type {String}\n\t\t * @final\n\t\t * @readonly\n\t\t **/\n    this.currentAnimation = null;\n\n\t\t/**\n\t\t * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n\t\t * sheet of icons, set paused to true, and display the appropriate icon by setting <code>currentFrame</code>.\n\t\t * @property paused\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t **/\n    this.paused = true;\n\n\t\t/**\n\t\t * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame\n\t\t * data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t\t * @property spriteSheet\n\t\t * @type {SpriteSheet}\n\t\t * @readonly\n\t\t **/\n    this.spriteSheet = spriteSheet;\n\n\t\t/**\n\t\t * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n\t\t * from 0 to n-1, where n is the number of frames in the current animation.\n\t\t *\n\t\t * This could be a non-integer value if\n\t\t * using time-based playback (see {{#crossLink \"Sprite/framerate\"}}{{/crossLink}}, or if the animation's speed is\n\t\t * not an integer.\n\t\t * @property currentAnimationFrame\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this.currentAnimationFrame = 0;\n\n\t\t/**\n\t\t * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n\t\t * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t * @property framerate\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this.framerate = 0;\n\n\n    // private properties:\n\t\t/**\n\t\t * Current animation object.\n\t\t * @property _animation\n\t\t * @protected\n\t\t * @type {Object}\n\t\t * @default null\n\t\t **/\n    this._animation = null;\n\n\t\t/**\n\t\t * Current frame index.\n\t\t * @property _currentFrame\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t **/\n    this._currentFrame = null;\n\n\t\t/**\n\t\t * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n\t\t * @property _skipAdvance\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t **/\n    this._skipAdvance = false;\n\n\t\t/**\n\t\t * Docced in superclass.\n\t\t */\n    this._webGLRenderStyle = createjs.DisplayObject._StageGL_SPRITE;\n\n    if (frameOrAnimation != null) { this.gotoAndPlay(frameOrAnimation); }\n  }\n  var p = createjs.extend(Sprite, createjs.DisplayObject);\n\n\t/**\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t * @method initialize\n\t * @deprecated in favour of `createjs.promote()`\n\t **/\n  p.initialize = Sprite; // TODO: Deprecated. This is for backwards support of Flash/Animate spritesheet export.\n\n\n  // events:\n\t/**\n\t * Dispatched when an animation reaches its ends.\n\t * @event animationend\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {String} name The name of the animation that just ended.\n\t * @param {String} next The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\n\t * or calling gotoAndPlay() or gotoAndStop().\n\t * @event change\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t */\n\n\n  // public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || this.spriteSheet.complete;\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t **/\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n    this._normalizeFrame();\n    var o = this.spriteSheet.getFrame(this._currentFrame | 0);\n    if (!o) { return false; }\n    var rect = o.rect;\n    if (rect.width && rect.height) { ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height); }\n    return true;\n  };\n\n  //Note, the doc sections below document using the specified APIs (from DisplayObject)  from\n  //Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method cache\n\t **/\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method updateCache\n\t **/\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method uncache\n\t **/\n\n\t/**\n\t * Play (unpause) the current animation. The Sprite will be paused if either {{#crossLink \"Sprite/stop\"}}{{/crossLink}}\n\t * or {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} is called. Single frame animations will remain\n\t * unchanged.\n\t * @method play\n\t **/\n  p.play = function () {\n    this.paused = false;\n  };\n\n\t/**\n\t * Stop playing a running animation. The Sprite will be playing if {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}\n\t * is called. Note that calling {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} or {{#crossLink \"Sprite/play\"}}{{/crossLink}}\n\t * will resume playback.\n\t * @method stop\n\t **/\n  p.stop = function () {\n    this.paused = true;\n  };\n\n\t/**\n\t * Sets paused to false and plays the specified animation name, named frame, or frame number.\n\t * @method gotoAndPlay\n\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and begin playing.\n\t **/\n  p.gotoAndPlay = function (frameOrAnimation) {\n    this.paused = false;\n    this._skipAdvance = true;\n    this._goto(frameOrAnimation);\n  };\n\n\t/**\n\t * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n\t * @method gotoAndStop\n\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and stop.\n\t **/\n  p.gotoAndStop = function (frameOrAnimation) {\n    this.paused = true;\n    this._goto(frameOrAnimation);\n  };\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n\t * or its SpriteSheet.\n\t * @method advance\n\t*/\n  p.advance = function (time) {\n    var fps = this.framerate || this.spriteSheet.framerate;\n    var t = (fps && time != null) ? time / (1000 / fps) : 1;\n    this._normalizeFrame(t);\n  };\n\n\t/**\n\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the current frame relative to\n\t * the origin. For example, a 90 x 70 frame with <code>regX=50</code> and <code>regY=40</code> would return a\n\t * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n\t *\n\t * Also see the SpriteSheet {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}} method.\n\t * @method getBounds\n\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully\n\t * loaded.\n\t **/\n  p.getBounds = function () {\n    // TODO: should this normalizeFrame?\n    return this.DisplayObject_getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n  };\n\n\t/**\n\t * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned\n\t * instances.\n\t * @method clone\n\t * @return {Sprite} a clone of the Sprite instance.\n\t **/\n  p.clone = function () {\n    return this._cloneProps(new Sprite(this.spriteSheet));\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[Sprite (name=\" + this.name + \")]\";\n  };\n\n  // private methods:\n\t/**\n\t * @method _cloneProps\n\t * @param {Sprite} o\n\t * @return {Sprite} o\n\t * @protected\n\t **/\n  p._cloneProps = function (o) {\n    this.DisplayObject__cloneProps(o);\n    o.currentFrame = this.currentFrame;\n    o.currentAnimation = this.currentAnimation;\n    o.paused = this.paused;\n    o.currentAnimationFrame = this.currentAnimationFrame;\n    o.framerate = this.framerate;\n\n    o._animation = this._animation;\n    o._currentFrame = this._currentFrame;\n    o._skipAdvance = this._skipAdvance;\n    return o;\n  };\n\n\t/**\n\t * Advances the <code>currentFrame</code> if paused is not true. This is called automatically when the {{#crossLink \"Stage\"}}{{/crossLink}}\n\t * ticks.\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t * @method _tick\n\t **/\n  p._tick = function (evtObj) {\n    if (!this.paused) {\n      if (!this._skipAdvance) { this.advance(evtObj && evtObj.delta); }\n      this._skipAdvance = false;\n    }\n    this.DisplayObject__tick(evtObj);\n  };\n\n\n\t/**\n\t * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n\t * @protected\n\t * @method _normalizeFrame\n\t **/\n  p._normalizeFrame = function (frameDelta) {\n    frameDelta = frameDelta || 0;\n    var animation = this._animation;\n    var paused = this.paused;\n    var frame = this._currentFrame;\n    var l;\n\n    if (animation) {\n      var speed = animation.speed || 1;\n      var animFrame = this.currentAnimationFrame;\n      l = animation.frames.length;\n      if (animFrame + frameDelta * speed >= l) {\n        var next = animation.next;\n        if (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n          // something changed in the event stack, so we shouldn't make any more changes here.\n          return;\n        } else if (next) {\n          // sequence. Automatically calls _normalizeFrame again with the remaining frames.\n          return this._goto(next, frameDelta - (l - animFrame) / speed);\n        } else {\n          // end.\n          this.paused = true;\n          animFrame = animation.frames.length - 1;\n        }\n      } else {\n        animFrame += frameDelta * speed;\n      }\n      this.currentAnimationFrame = animFrame;\n      this._currentFrame = animation.frames[animFrame | 0]\n    } else {\n      frame = (this._currentFrame += frameDelta);\n      l = this.spriteSheet.getNumFrames();\n      if (frame >= l && l > 0) {\n        if (!this._dispatchAnimationEnd(animation, frame, paused, l - 1)) {\n          // looped.\n          if ((this._currentFrame -= l) >= l) { return this._normalizeFrame(); }\n        }\n      }\n    }\n    frame = this._currentFrame | 0;\n    if (this.currentFrame != frame) {\n      this.currentFrame = frame;\n      this.dispatchEvent(\"change\");\n    }\n  };\n\n\t/**\n\t * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {{#crossLink \"Sprite/stop\"}}{{/crossLink}},\n\t * {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}, etc.)\n\t * @property _dispatchAnimationEnd\n\t * @private\n\t * @type {Function}\n\t **/\n  p._dispatchAnimationEnd = function (animation, frame, paused, next, end) {\n    var name = animation ? animation.name : null;\n    if (this.hasEventListener(\"animationend\")) {\n      var evt = new createjs.Event(\"animationend\");\n      evt.name = name;\n      evt.next = next;\n      this.dispatchEvent(evt);\n    }\n    // did the animation get changed in the event stack?:\n    var changed = (this._animation != animation || this._currentFrame != frame);\n    // if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n    if (!changed && !paused && this.paused) { this.currentAnimationFrame = end; changed = true; }\n    return changed;\n  };\n\n\t/**\n\t * Moves the playhead to the specified frame number or animation.\n\t * @method _goto\n\t * @param {String|Number} frameOrAnimation The frame number or animation that the playhead should move to.\n\t * @param {Boolean} [frame] The frame of the animation to go to. Defaults to 0.\n\t * @protected\n\t **/\n  p._goto = function (frameOrAnimation, frame) {\n    this.currentAnimationFrame = 0;\n    if (isNaN(frameOrAnimation)) {\n      var data = this.spriteSheet.getAnimation(frameOrAnimation);\n      if (data) {\n        this._animation = data;\n        this.currentAnimation = frameOrAnimation;\n        this._normalizeFrame(frame);\n      }\n    } else {\n      this.currentAnimation = this._animation = null;\n      this._currentFrame = frameOrAnimation;\n      this._normalizeFrame();\n    }\n  };\n\n\n  createjs.Sprite = createjs.promote(Sprite, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Shape.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * A Shape allows you to display vector art in the display list. It composites a {{#crossLink \"Graphics\"}}{{/crossLink}}\n\t * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n\t * instances to display the same vector graphics with different positions or transforms.\n\t *\n\t * If the vector art will not\n\t * change between draws, you may want to use the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method to reduce the\n\t * rendering cost.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var graphics = new createjs.Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n\t *      var shape = new createjs.Shape(graphics);\n\t *\n\t *      //Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n\t *      var shape = new createjs.Shape();\n\t *      shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n\t *\n\t * @class Shape\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {Graphics} graphics Optional. The graphics instance to display. If null, a new Graphics instance will be created.\n\t **/\n  function Shape(graphics) {\n    this.DisplayObject_constructor();\n\n\n    // public properties:\n\t\t/**\n\t\t * The graphics instance to display.\n\t\t * @property graphics\n\t\t * @type Graphics\n\t\t **/\n    this.graphics = graphics ? graphics : new createjs.Graphics();\n  }\n  var p = createjs.extend(Shape, createjs.DisplayObject);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n  // public methods:\n\t/**\n\t * Returns true or false indicating whether the Shape would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the Shape would be visible if drawn to a canvas\n\t **/\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || (this.graphics && !this.graphics.isEmpty());\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n\n\t/**\n\t * Draws the Shape into the specified context ignoring its visible, alpha, shadow, and transform. Returns true if\n\t * the draw was handled (useful for overriding functionality).\n\t *\n\t * <i>NOTE: This method is mainly for internal use, though it may be useful for advanced uses.</i>\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t **/\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n    this.graphics.draw(ctx, this);\n    return true;\n  };\n\n\t/**\n\t * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n\t * their defaults (for example .parent).\n\t * @method clone\n\t * @param {Boolean} recursive If true, this Shape's {{#crossLink \"Graphics\"}}{{/crossLink}} instance will also be\n\t * cloned. If false, the Graphics instance will be shared with the new Shape.\n\t **/\n  p.clone = function (recursive) {\n    var g = (recursive && this.graphics) ? this.graphics.clone() : this.graphics;\n    return this._cloneProps(new Shape(g));\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[Shape (name=\" + this.name + \")]\";\n  };\n\n\n  createjs.Shape = createjs.promote(Shape, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Text.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n\t * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n\t * text above or below the canvas relative to items in the display list using the {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n\t * method, or using {{#crossLink \"DOMElement\"}}{{/crossLink}}.\n\t *\n\t * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n\t * multiple font styles, you will need to create multiple text instances, and position them manually.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var text = new createjs.Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n\t *      text.x = 100;\n\t *      text.textBaseline = \"alphabetic\";\n\t *\n\t * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n\t * before it can be displayed.\n\t *\n\t * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n\t * browsers will render Text exactly the same.\n\t * @class Text\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {String} [text] The text to display.\n\t * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n\t * 36px Arial\").\n\t * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n\t * \"#F00\", \"red\", or \"#FF0000\").\n\t **/\n  function Text(text, font, color) {\n    this.DisplayObject_constructor();\n\n\n    // public properties:\n\t\t/**\n\t\t * The text to display.\n\t\t * @property text\n\t\t * @type String\n\t\t **/\n    this.text = text;\n\n\t\t/**\n\t\t * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n\t\t * @property font\n\t\t * @type String\n\t\t **/\n    this.font = font;\n\n\t\t/**\n\t\t * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n\t\t * It will also accept valid canvas fillStyle values.\n\t\t * @property color\n\t\t * @type String\n\t\t **/\n    this.color = color;\n\n\t\t/**\n\t\t * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\". For detailed\n\t\t * information view the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>. Default is \"left\".\n\t\t * @property textAlign\n\t\t * @type String\n\t\t **/\n    this.textAlign = \"left\";\n\n\t\t/**\n\t\t * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or\n\t\t * \"bottom\". For detailed information view the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>. Default is \"top\".\n\t\t * @property textBaseline\n\t\t * @type String\n\t\t*/\n    this.textBaseline = \"top\";\n\n\t\t/**\n\t\t * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n\t\t * shrunk to make it fit in this width. For detailed information view the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>.\n\t\t * @property maxWidth\n\t\t * @type Number\n\t\t*/\n    this.maxWidth = null;\n\n\t\t/**\n\t\t * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n\t\t * @property outline\n\t\t * @type Number\n\t\t **/\n    this.outline = 0;\n\n\t\t/**\n\t\t * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n\t\t * the value of getMeasuredLineHeight is used.\n\t\t * @property lineHeight\n\t\t * @type Number\n\t\t **/\n    this.lineHeight = 0;\n\n\t\t/**\n\t\t * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n\t\t * the text will not be wrapped.\n\t\t * @property lineWidth\n\t\t * @type Number\n\t\t **/\n    this.lineWidth = null;\n  }\n  var p = createjs.extend(Text, createjs.DisplayObject);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n  // static properties:\n\t/**\n\t * @property _workingContext\n\t * @type CanvasRenderingContext2D\n\t * @private\n\t **/\n  var canvas = (createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\"));\n  if (canvas.getContext) { Text._workingContext = canvas.getContext(\"2d\"); canvas.width = canvas.height = 1; }\n\n\n  // constants:\n\t/**\n\t * Lookup table for the ratio to offset bounds x calculations based on the textAlign property.\n\t * @property H_OFFSETS\n\t * @type Object\n\t * @protected\n\t * @static\n\t **/\n  Text.H_OFFSETS = { start: 0, left: 0, center: -0.5, end: -1, right: -1 };\n\n\t/**\n\t * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n\t * @property H_OFFSETS\n\t * @type Object\n\t * @protected\n\t * @static\n\t **/\n  Text.V_OFFSETS = { top: 0, hanging: -0.01, middle: -0.4, alphabetic: -0.8, ideographic: -0.85, bottom: -1 };\n\n\n  // public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Whether the display object would be visible if drawn to a canvas\n\t **/\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || (this.text != null && this.text !== \"\");\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n\n\t/**\n\t * Draws the Text into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t **/\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\n    var col = this.color || \"#000\";\n    if (this.outline) { ctx.strokeStyle = col; ctx.lineWidth = this.outline * 1; }\n    else { ctx.fillStyle = col; }\n\n    this._drawText(this._prepContext(ctx));\n    return true;\n  };\n\n\t/**\n\t * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n\t * @method getMeasuredWidth\n\t * @return {Number} The measured, untransformed width of the text.\n\t **/\n  p.getMeasuredWidth = function () {\n    return this._getMeasuredWidth(this.text);\n  };\n\n\t/**\n\t * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n\t * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n\t * @method getMeasuredLineHeight\n\t * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n\t * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n\t **/\n  p.getMeasuredLineHeight = function () {\n    return this._getMeasuredWidth(\"M\") * 1.2;\n  };\n\n\t/**\n\t * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n\t * <code>lineHeight</code> (if specified) or {{#crossLink \"Text/getMeasuredLineHeight\"}}{{/crossLink}}. Note that\n\t * this operation requires the text flowing logic to run, which has an associated CPU cost.\n\t * @method getMeasuredHeight\n\t * @return {Number} The approximate height of the untransformed multi-line text.\n\t **/\n  p.getMeasuredHeight = function () {\n    return this._drawText(null, {}).height;\n  };\n\n\t/**\n\t * Docced in superclass.\n\t */\n  p.getBounds = function () {\n    var rect = this.DisplayObject_getBounds();\n    if (rect) { return rect; }\n    if (this.text == null || this.text === \"\") { return null; }\n    var o = this._drawText(null, {});\n    var w = (this.maxWidth && this.maxWidth < o.width) ? this.maxWidth : o.width;\n    var x = w * Text.H_OFFSETS[this.textAlign || \"left\"];\n    var lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n    var y = lineHeight * Text.V_OFFSETS[this.textBaseline || \"top\"];\n    return this._rectangle.setValues(x, y, w, o.height);\n  };\n\n\t/**\n\t * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n\t * of the drawn text. The lines property contains an array of strings, one for\n\t * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n\t * whitespace removed.\n\t * @method getMetrics\n\t * @return {Object} An object with width, height, and lines properties.\n\t **/\n  p.getMetrics = function () {\n    var o = { lines: [] };\n    o.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n    o.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline || \"top\"];\n    return this._drawText(null, o, o.lines);\n  };\n\n\t/**\n\t * Returns a clone of the Text instance.\n\t * @method clone\n\t * @return {Text} a clone of the Text instance.\n\t **/\n  p.clone = function () {\n    return this._cloneProps(new Text(this.text, this.font, this.color));\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[Text (text=\" + (this.text.length > 20 ? this.text.substr(0, 17) + \"...\" : this.text) + \")]\";\n  };\n\n\n  // private methods:\n\t/**\n\t * @method _cloneProps\n\t * @param {Text} o\n\t * @protected\n\t * @return {Text} o\n\t **/\n  p._cloneProps = function (o) {\n    this.DisplayObject__cloneProps(o);\n    o.textAlign = this.textAlign;\n    o.textBaseline = this.textBaseline;\n    o.maxWidth = this.maxWidth;\n    o.outline = this.outline;\n    o.lineHeight = this.lineHeight;\n    o.lineWidth = this.lineWidth;\n    return o;\n  };\n\n\t/**\n\t * @method _getWorkingContext\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @return {CanvasRenderingContext2D}\n\t * @protected\n\t **/\n  p._prepContext = function (ctx) {\n    ctx.font = this.font || \"10px sans-serif\";\n    ctx.textAlign = this.textAlign || \"left\";\n    ctx.textBaseline = this.textBaseline || \"top\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 2.5;\n    return ctx;\n  };\n\n\t/**\n\t * Draws multiline text.\n\t * @method _drawText\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Object} o\n\t * @param {Array} lines\n\t * @return {Object}\n\t * @protected\n\t **/\n  p._drawText = function (ctx, o, lines) {\n    var paint = !!ctx;\n    if (!paint) {\n      ctx = Text._workingContext;\n      ctx.save();\n      this._prepContext(ctx);\n    }\n    var lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n\n    var maxW = 0, count = 0;\n    var hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n    for (var i = 0, l = hardLines.length; i < l; i++) {\n      var str = hardLines[i];\n      var w = null;\n\n      if (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n        // text wrapping:\n        var words = str.split(/(\\s)/);\n        str = words[0];\n        w = ctx.measureText(str).width;\n\n        for (var j = 1, jl = words.length; j < jl; j += 2) {\n          // Line needs to wrap:\n          var wordW = ctx.measureText(words[j] + words[j + 1]).width;\n          if (w + wordW > this.lineWidth) {\n            if (paint) { this._drawTextLine(ctx, str, count * lineHeight); }\n            if (lines) { lines.push(str); }\n            if (w > maxW) { maxW = w; }\n            str = words[j + 1];\n            w = ctx.measureText(str).width;\n            count++;\n          } else {\n            str += words[j] + words[j + 1];\n            w += wordW;\n          }\n        }\n      }\n\n      if (paint) { this._drawTextLine(ctx, str, count * lineHeight); }\n      if (lines) { lines.push(str); }\n      if (o && w == null) { w = ctx.measureText(str).width; }\n      if (w > maxW) { maxW = w; }\n      count++;\n    }\n\n    if (o) {\n      o.width = maxW;\n      o.height = count * lineHeight;\n    }\n    if (!paint) { ctx.restore(); }\n    return o;\n  };\n\n\t/**\n\t * @method _drawTextLine\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {String} text\n\t * @param {Number} y\n\t * @protected\n\t **/\n  p._drawTextLine = function (ctx, text, y) {\n    // Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n    if (this.outline) { ctx.strokeText(text, 0, y, this.maxWidth || 0xFFFF); }\n    else { ctx.fillText(text, 0, y, this.maxWidth || 0xFFFF); }\n  };\n\n\n\t/**\n\t * @method _getMeasuredWidth\n\t * @param {String} text\n\t * @protected\n\t **/\n  p._getMeasuredWidth = function (text) {\n    var ctx = Text._workingContext;\n    ctx.save();\n    var w = this._prepContext(ctx).measureText(text).width;\n    ctx.restore();\n    return w;\n  };\n\n\n  createjs.Text = createjs.promote(Text, \"DisplayObject\");\n}());\n\n//##############################################################################\n// BitmapText.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported using new line characters,\n\t * but automatic wrapping is not supported. See the {{#crossLink \"BitmapText/spriteSheet:property\"}}{{/crossLink}}\n\t * property for more information on defining glyphs.\n\t *\n\t * <strong>Important:</strong> While BitmapText extends Container, it is not designed to be used as one.\n\t * As such, methods like addChild and removeChild are disabled.\n\t *\n\t *\n\t * @class BitmapText\n\t * @extends DisplayObject\n\t * @param {String} [text=\"\"] The text to display.\n\t * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n\t * @constructor\n\t **/\n  function BitmapText(text, spriteSheet) {\n    this.Container_constructor();\n\n\n    // public properties:\n\t\t/**\n\t\t * The text to display.\n\t\t * @property text\n\t\t * @type String\n\t\t * @default \"\"\n\t\t **/\n    this.text = text || \"\";\n\n\t\t/**\n\t\t * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n\t\t * should have a single frame animation defined in the sprite sheet named the same as\n\t\t * corresponding character. For example, the following animation definition:\n\t\t *\n\t\t * \t\t\"A\": {frames: [0]}\n\t\t *\n\t\t * would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character. The short form\n\t\t * is also acceptable:\n\t\t * \n\t\t * \t\t\"A\": 0\n\t\t *\n\t\t * Note that if a character in the text is not found in the sprite sheet, it will also\n\t\t * try to use the alternate case (upper or lower).\n\t\t *\n\t\t * See SpriteSheet for more information on defining sprite sheet data.\n\t\t * @property spriteSheet\n\t\t * @type SpriteSheet\n\t\t * @default null\n\t\t **/\n    this.spriteSheet = spriteSheet;\n\n\t\t/**\n\t\t * The height of each line of text. If 0, then it will use a line height calculated\n\t\t * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n\t\t * those characters are not defined, it will use the height of the first frame of the\n\t\t * sprite sheet.\n\t\t * @property lineHeight\n\t\t * @type Number\n\t\t * @default 0\n\t\t **/\n    this.lineHeight = 0;\n\n\t\t/**\n\t\t * This spacing (in pixels) will be added after each character in the output.\n\t\t * @property letterSpacing\n\t\t * @type Number\n\t\t * @default 0\n\t\t **/\n    this.letterSpacing = 0;\n\n\t\t/**\n\t\t * If a space character is not defined in the sprite sheet, then empty pixels equal to\n\t\t * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n\t\t * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n\t\t * those characters are not defined, it will use the width of the first frame of the\n\t\t * sprite sheet.\n\t\t * @property spaceWidth\n\t\t * @type Number\n\t\t * @default 0\n\t\t **/\n    this.spaceWidth = 0;\n\n\n    // private properties:\n    /**\n   * @property _oldProps\n   * @type Object\n   * @protected\n   **/\n    this._oldProps = { text: 0, spriteSheet: 0, lineHeight: 0, letterSpacing: 0, spaceWidth: 0 };\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @property _oldStage\n\t\t * @type Stage\n\t\t * @protected\n\t\t */\n    this._oldStage = null;\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @property _drawAction\n\t\t * @type function\n\t\t * @protected\n\t\t */\n    this._drawAction = null;\n  }\n  var p = createjs.extend(BitmapText, createjs.Container);\n\n  // static properties:\n\t/**\n\t * BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\n\t * an internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\n\t * retained, slightly increasing memory use, but reducing instantiation.\n\t * @property maxPoolSize\n\t * @type Number\n\t * @static\n\t * @default 100\n\t **/\n  BitmapText.maxPoolSize = 100;\n\n\t/**\n\t * Sprite object pool.\n\t * @type {Array}\n\t * @static\n\t * @private\n\t */\n  BitmapText._spritePool = [];\n\n\n  // public methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) { return; }\n    this._updateState();\n    this.Container_draw(ctx, ignoreCache);\n  };\n\n\t/**\n\t * Docced in superclass.\n\t **/\n  p.getBounds = function () {\n    this._updateText();\n    return this.Container_getBounds();\n  };\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || (this.spriteSheet && this.spriteSheet.complete && this.text);\n    return !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n  };\n\n  p.clone = function () {\n    return this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n  };\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method addChild\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method addChildAt\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeChild\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeChildAt\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeAllChildren\n\t **/\n  p.addChild = p.addChildAt = p.removeChild = p.removeChildAt = p.removeAllChildren = function () { };\n\n\n  // private methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n  p._updateState = function () {\n    this._updateText();\n  };\n\n  /**\n * @method _cloneProps\n * @param {BitmapText} o\n * @return {BitmapText} o\n * @protected\n **/\n  p._cloneProps = function (o) {\n    this.Container__cloneProps(o);\n    o.lineHeight = this.lineHeight;\n    o.letterSpacing = this.letterSpacing;\n    o.spaceWidth = this.spaceWidth;\n    return o;\n  };\n\n\t/**\n\t * @method _getFrameIndex\n\t * @param {String} character\n\t * @param {SpriteSheet} spriteSheet\n\t * @return {Number}\n\t * @protected\n\t **/\n  p._getFrameIndex = function (character, spriteSheet) {\n    var c, o = spriteSheet.getAnimation(character);\n    if (!o) {\n      (character != (c = character.toUpperCase())) || (character != (c = character.toLowerCase())) || (c = null);\n      if (c) { o = spriteSheet.getAnimation(c); }\n    }\n    return o && o.frames[0];\n  };\n\n\t/**\n\t * @method _getFrame\n\t * @param {String} character\n\t * @param {SpriteSheet} spriteSheet\n\t * @return {Object}\n\t * @protected\n\t **/\n  p._getFrame = function (character, spriteSheet) {\n    var index = this._getFrameIndex(character, spriteSheet);\n    return index == null ? index : spriteSheet.getFrame(index);\n  };\n\n\t/**\n\t * @method _getLineHeight\n\t * @param {SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t **/\n  p._getLineHeight = function (ss) {\n    var frame = this._getFrame(\"1\", ss) || this._getFrame(\"T\", ss) || this._getFrame(\"L\", ss) || ss.getFrame(0);\n    return frame ? frame.rect.height : 1;\n  };\n\n\t/**\n\t * @method _getSpaceWidth\n\t * @param {SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t **/\n  p._getSpaceWidth = function (ss) {\n    var frame = this._getFrame(\"1\", ss) || this._getFrame(\"l\", ss) || this._getFrame(\"e\", ss) || this._getFrame(\"a\", ss) || ss.getFrame(0);\n    return frame ? frame.rect.width : 1;\n  };\n\n\t/**\n\t * @method _updateText\n\t * @protected\n\t **/\n  p._updateText = function () {\n    var x = 0, y = 0, o = this._oldProps, change = false, spaceW = this.spaceWidth, lineH = this.lineHeight, ss = this.spriteSheet;\n    var pool = BitmapText._spritePool, kids = this.children, childIndex = 0, numKids = kids.length, sprite;\n\n    for (var n in o) {\n      if (o[n] != this[n]) {\n        o[n] = this[n];\n        change = true;\n      }\n    }\n    if (!change) { return; }\n\n    var hasSpace = !!this._getFrame(\" \", ss);\n    if (!hasSpace && !spaceW) { spaceW = this._getSpaceWidth(ss); }\n    if (!lineH) { lineH = this._getLineHeight(ss); }\n\n    for (var i = 0, l = this.text.length; i < l; i++) {\n      var character = this.text.charAt(i);\n      if (character == \" \" && !hasSpace) {\n        x += spaceW;\n        continue;\n      } else if (character == \"\\n\" || character == \"\\r\") {\n        if (character == \"\\r\" && this.text.charAt(i + 1) == \"\\n\") { i++; } // crlf\n        x = 0;\n        y += lineH;\n        continue;\n      }\n\n      var index = this._getFrameIndex(character, ss);\n      if (index == null) { continue; }\n\n      if (childIndex < numKids) {\n        sprite = kids[childIndex];\n      } else {\n        kids.push(sprite = pool.length ? pool.pop() : new createjs.Sprite());\n        sprite.parent = this;\n        numKids++;\n      }\n      sprite.spriteSheet = ss;\n      sprite.gotoAndStop(index);\n      sprite.x = x;\n      sprite.y = y;\n      childIndex++;\n\n      x += sprite.getBounds().width + this.letterSpacing;\n    }\n    while (numKids > childIndex) {\n      // faster than removeChild.\n      pool.push(sprite = kids.pop());\n      sprite.parent = null;\n      numKids--;\n    }\n    if (pool.length > BitmapText.maxPoolSize) { pool.length = BitmapText.maxPoolSize; }\n  };\n\n\n  createjs.BitmapText = createjs.promote(BitmapText, \"Container\");\n}());\n\n//##############################################################################\n// MovieClip.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * The MovieClip class associates a TweenJS Timeline with an EaselJS {{#crossLink \"Container\"}}{{/crossLink}}. It allows\n\t * you to create objects which encapsulate timeline animations, state changes, and synched actions. The MovieClip\n\t * class has been included in the EaselJS minified file since 0.7.0.\n\t *\n\t * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n\t * been made to support time-based timelines in the future.\n\t *\n\t * <h4>Example</h4>\n\t * This example animates two shapes back and forth. The grey shape starts on the left, but we jump to a mid-point in\n\t * the animation using {{#crossLink \"MovieClip/gotoAndPlay\"}}{{/crossLink}}.\n\t *\n\t *      var stage = new createjs.Stage(\"canvas\");\n\t *      createjs.Ticker.addEventListener(\"tick\", stage);\n\t *\n\t *      var mc = new createjs.MovieClip({loop:-1, labels:{myLabel:20}});\n\t *      stage.addChild(mc);\n\t *\n\t *      var child1 = new createjs.Shape(\n\t *          new createjs.Graphics().beginFill(\"#999999\")\n\t *              .drawCircle(30,30,30));\n\t *      var child2 = new createjs.Shape(\n\t *          new createjs.Graphics().beginFill(\"#5a9cfb\")\n\t *              .drawCircle(30,30,30));\n\t *\n\t *      mc.timeline.addTween(\n\t *          createjs.Tween.get(child1)\n\t *              .to({x:0}).to({x:60}, 50).to({x:0}, 50));\n\t *      mc.timeline.addTween(\n\t *          createjs.Tween.get(child2)\n\t *              .to({x:60}).to({x:0}, 50).to({x:60}, 50));\n\t *\n\t *      mc.gotoAndPlay(\"start\");\n\t *\n\t * It is recommended to use <code>tween.to()</code> to animate and set properties (use no duration to have it set\n\t * immediately), and the <code>tween.wait()</code> method to create delays between animations. Note that using the\n\t * <code>tween.set()</code> method to affect properties will likely not provide the desired result.\n\t *\n\t * @class MovieClip\n\t * @main MovieClip\n\t * @param {Object} [props] The configuration properties to apply to this instance (ex. `{mode:MovieClip.SYNCHED}`).\n\t * Supported props for the MovieClip are listed below. These props are set on the corresponding instance properties except where\n\t * specified.<UL>\n\t *    <LI> `mode`</LI>\n\t *    <LI> `startPosition`</LI>\n\t *    <LI> `frameBounds`</LI>\n\t * </UL>\n\t * \n\t * This object will also be passed into the Timeline instance associated with this MovieClip. See the documentation\n\t * for Timeline for a list of supported props (ex. `paused`, `labels`, `loop`, `reversed`, etc.)\n\t * @extends Container\n\t * @constructor\n\t **/\n  function MovieClip(props) {\n    this.Container_constructor();\n    !MovieClip.inited && MovieClip.init(); // static init\n\n    var mode, startPosition, loop, labels;\n\n    // handle old params (mode, startPosition, loop, labels):\n    // TODO: deprecated param handling:\n    if (props instanceof String || arguments.length > 1) {\n      mode = props;\n      startPosition = arguments[1];\n      loop = arguments[2];\n      labels = arguments[3];\n      if (loop == null) { loop = -1; }\n      props = null;\n    } else if (props) {\n      mode = props.mode;\n      startPosition = props.startPosition;\n      loop = props.loop;\n      labels = props.labels;\n    }\n    if (!props) { props = { labels: labels }; }\n\n\n    // public properties:\n\t\t/**\n\t\t * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n\t\t * See each constant for a description of the behaviour.\n\t\t * @property mode\n\t\t * @type String\n\t\t * @default null\n\t\t **/\n    this.mode = mode || MovieClip.INDEPENDENT;\n\n\t\t/**\n\t\t * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n\t\t * @property startPosition\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n    this.startPosition = startPosition || 0;\n\n\t\t/**\n\t\t * Specifies how many times this MovieClip should loop. A value of -1 indicates it should loop indefinitely. A value of\n\t\t * 1 would cause it to loop once (ie. play a total of twice).\n\t\t * @property loop\n\t\t * @type Number\n\t\t * @default -1\n\t\t */\n    this.loop = loop === true ? -1 : (loop || 0);\n\n\t\t/**\n\t\t * The current frame of the movieclip.\n\t\t * @property currentFrame\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n    this.currentFrame = 0;\n\n\t\t/**\n\t\t * If true, the MovieClip's position will not advance when ticked.\n\t\t * @property paused\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n    this.paused = props.paused || false;\n\n\t\t/**\n\t\t * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n\t\t * @property actionsEnabled\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n    this.actionsEnabled = true;\n\n\t\t/**\n\t\t * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n\t\t * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n\t\t * <br><br>\n\t\t * For example, if you had a character animation with a \"body\" child MovieClip instance\n\t\t * with different costumes on each frame, you could set body.autoReset = false, so that\n\t\t * you can manually change the frame it is on, without worrying that it will be reset\n\t\t * automatically.\n\t\t * @property autoReset\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n    this.autoReset = true;\n\n\t\t/**\n\t\t * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n\t\t * @property frameBounds\n\t\t * @type Array\n\t\t * @default null\n\t\t */\n    this.frameBounds = this.frameBounds || props.frameBounds; // frameBounds are set on the prototype in Animate.\n\n\t\t/**\n\t\t * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n\t\t * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t * @property framerate\n\t\t * @type {Number}\n\t\t * @default null\n\t\t **/\n    this.framerate = null;\n\n    // set up the needed props for Timeline:\n    props.useTicks = props.paused = true;\n\n\t\t/**\n\t\t * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n\t\t * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n\t\t * instances to the timeline.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var tween = createjs.Tween.get(target).to({x:0}).to({x:100}, 30);\n\t\t *      var mc = new createjs.MovieClip();\n\t\t *      mc.timeline.addTween(tween);\n\t\t *\n\t\t * Elements can be added and removed from the timeline by toggling an \"_off\" property\n\t\t * using the <code>tweenInstance.to()</code> method. Note that using <code>Tween.set</code> is not recommended to\n\t\t * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n\t\t * frame 1. You can use the \"visible\" property to achieve the same effect.\n\t\t *\n\t\t *      var tween = createjs.Tween.get(target).to({_off:false})\n\t\t *          .wait(1).to({_off:true})\n\t\t *          .wait(1).to({_off:false});\n\t\t *\n\t\t * @property timeline\n\t\t * @type Timeline\n\t\t * @default null\n\t\t */\n    this.timeline = new createjs.Timeline(props);\n\n\n    // private properties:\n\t\t/**\n\t\t * @property _synchOffset\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @private\n\t\t */\n    this._synchOffset = 0;\n\n\t\t/**\n\t\t * @property _rawPosition\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @private\n\t\t */\n    this._rawPosition = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\n\t\t/**\n\t\t * @property _bound_resolveState\n\t\t * @type Function\n\t\t * @private\n\t\t */\n    this._bound_resolveState = this._resolveState.bind(this);\n\n\n\t\t/**\n\t\t * The time remaining from the previous tick, only applicable when .framerate is set.\n\t\t * @property _t\n\t\t * @type Number\n\t\t * @private\n\t\t */\n    this._t = 0;\n\n\t\t/**\n\t\t * List of display objects that are actively being managed by the MovieClip.\n\t\t * @property _managed\n\t\t * @type Object\n\t\t * @private\n\t\t */\n    this._managed = {};\n  }\n  var p = createjs.extend(MovieClip, createjs.Container);\n\n\n  // constants:\n\t/**\n\t * The MovieClip will advance independently of its parent, even if its parent is paused.\n\t * This is the default mode.\n\t * @property INDEPENDENT\n\t * @static\n\t * @type String\n\t * @default \"independent\"\n\t * @readonly\n\t **/\n  MovieClip.INDEPENDENT = \"independent\";\n\n\t/**\n\t * The MovieClip will only display a single frame (as determined by the startPosition property).\n\t * @property SINGLE_FRAME\n\t * @static\n\t * @type String\n\t * @default \"single\"\n\t * @readonly\n\t **/\n  MovieClip.SINGLE_FRAME = \"single\";\n\n\t/**\n\t * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n\t * the parent MovieClip.\n\t * @property SYNCHED\n\t * @static\n\t * @type String\n\t * @default \"synched\"\n\t * @readonly\n\t **/\n  MovieClip.SYNCHED = \"synched\";\n\n\n  // static properties:\n  MovieClip.inited = false;\n\n\n  // static methods:\n  MovieClip.init = function () {\n    if (MovieClip.inited) { return; }\n    // plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n    MovieClipPlugin.install();\n    MovieClip.inited = true;\n  };\n\n\n  // getter / setters:\n\t/**\n\t * Use the {{#crossLink \"MovieClip/labels:property\"}}{{/crossLink}} property instead.\n\t * @method _getLabels\n\t * @protected\n\t * @return {Array}\n\t **/\n  p._getLabels = function () {\n    return this.timeline.getLabels();\n  };\n  // MovieClip.getLabels is @deprecated. Remove for 1.1+\n  p.getLabels = createjs.deprecate(p._getLabels, \"MovieClip.getLabels\");\n\n\t/**\n\t * Use the {{#crossLink \"MovieClip/currentLabel:property\"}}{{/crossLink}} property instead.\n\t * @method _getCurrentLabel\n\t * @protected\n\t * @return {String}\n\t **/\n  p._getCurrentLabel = function () {\n    return this.timeline.currentLabel;\n  };\n  // MovieClip.getCurrentLabel is @deprecated. Remove for 1.1+\n  p.getCurrentLabel = createjs.deprecate(p._getCurrentLabel, \"MovieClip.getCurrentLabel\");\n\n\t/**\n\t * Use the {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}} property instead.\n\t * @method _getDuration\n\t * @protected\n\t * @return {Number}\n\t **/\n  p._getDuration = function () {\n    return this.timeline.duration;\n  };\n  // MovieClip.getDuration is @deprecated. Remove for 1.1+\n  p.getDuration = createjs.deprecate(p._getDuration, \"MovieClip.getDuration\");\n\n\t/**\n\t * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n\t * @property labels\n\t * @type {Array}\n\t * @readonly\n\t **/\n\n\t/**\n\t * Returns the name of the label on or immediately before the current frame.\n\t * @property currentLabel\n\t * @type {String}\n\t * @readonly\n\t **/\n\n\t/**\n\t * Returns the duration of this MovieClip in seconds or ticks.\n\t * @property totalFrames\n\t * @type {Number}\n\t * @readonly\n\t **/\n\n\t/**\n\t * Returns the duration of this MovieClip in seconds or ticks.\n\t * @property duration\n\t * @type {Number}\n\t * @readonly\n\t **/\n  try {\n    Object.defineProperties(p, {\n      labels: { get: p._getLabels },\n      currentLabel: { get: p._getCurrentLabel },\n      totalFrames: { get: p._getDuration },\n      duration: { get: p._getDuration }\n      // TODO: can we just proxy .currentFrame to tl.position as well? Ditto for .loop (or just remove entirely).\n    });\n  } catch (e) { }\n\n\n  // public methods:\n\t/**\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t * @method initialize\n\t * @deprecated in favour of `createjs.promote()`\n\t **/\n  p.initialize = MovieClip; // TODO: Deprecated. This is for backwards support of Adobe Flash/Animate\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n  p.isVisible = function () {\n    // children are placed in draw, so we can't determine if we have content.\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n  };\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t **/\n  p.draw = function (ctx, ignoreCache) {\n    // draw to cache first:\n    if (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n    this._updateState();\n    this.Container_draw(ctx, ignoreCache);\n    return true;\n  };\n\n\t/**\n\t * Sets paused to false.\n\t * @method play\n\t **/\n  p.play = function () {\n    this.paused = false;\n  };\n\n\t/**\n\t * Sets paused to true.\n\t * @method stop\n\t **/\n  p.stop = function () {\n    this.paused = true;\n  };\n\n\t/**\n\t * Advances this movie clip to the specified position or label and sets paused to false.\n\t * @method gotoAndPlay\n\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t **/\n  p.gotoAndPlay = function (positionOrLabel) {\n    this.paused = false;\n    this._goto(positionOrLabel);\n  };\n\n\t/**\n\t * Advances this movie clip to the specified position or label and sets paused to true.\n\t * @method gotoAndStop\n\t * @param {String|Number} positionOrLabel The animation or frame name to go to.\n\t **/\n  p.gotoAndStop = function (positionOrLabel) {\n    this.paused = true;\n    this._goto(positionOrLabel);\n  };\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set.\n\t * @method advance\n\t*/\n  p.advance = function (time) {\n    var independent = MovieClip.INDEPENDENT;\n    if (this.mode !== independent) { return; } // update happens in draw for synched clips\n\n    // if this MC doesn't have a framerate, hunt ancestors for one:\n    var o = this, fps = o.framerate;\n    while ((o = o.parent) && fps === null) { if (o.mode === independent) { fps = o._framerate; } }\n    this._framerate = fps;\n\n    if (this.paused) { return; }\n\n    // calculate how many frames to advance:\n    var t = (fps !== null && fps !== -1 && time !== null) ? time / (1000 / fps) + this._t : 1;\n    var frames = t | 0;\n    this._t = t - frames; // leftover time, save to add to next advance.\n\n    while (frames--) { this._updateTimeline(this._rawPosition + 1, false); }\n  };\n\n\t/**\n\t * MovieClip instances cannot be cloned.\n\t * @method clone\n\t **/\n  p.clone = function () {\n    // TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n    throw (\"MovieClip cannot be cloned.\");\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[MovieClip (name=\" + this.name + \")]\";\n  };\n\n\n  // private methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n  p._updateState = function () {\n    if (this._rawPosition === -1 || this.mode !== MovieClip.INDEPENDENT) { this._updateTimeline(-1); }\n  };\n\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * function.\n\t * @protected\n\t **/\n  p._tick = function (evtObj) {\n    this.advance(evtObj && evtObj.delta);\n    this.Container__tick(evtObj);\n  };\n\n\t/**\n\t * @method _goto\n\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t * @protected\n\t **/\n  p._goto = function (positionOrLabel) {\n    var pos = this.timeline.resolve(positionOrLabel);\n    if (pos == null) { return; }\n    this._t = 0;\n    this._updateTimeline(pos, true);\n  };\n\n\t/**\n\t * @method _reset\n\t * @private\n\t **/\n  p._reset = function () {\n    this._rawPosition = -1;\n    this._t = this.currentFrame = 0;\n    this.paused = false;\n  };\n\n\t/**\n\t * @method _updateTimeline\n\t * @param {Boolean} jump Indicates whether this update is due to jumping (via gotoAndXX) to a new position.\n\t * @protected\n\t **/\n  p._updateTimeline = function (rawPosition, jump) {\n    var synced = this.mode !== MovieClip.INDEPENDENT, tl = this.timeline;\n    if (synced) { rawPosition = this.startPosition + (this.mode === MovieClip.SINGLE_FRAME ? 0 : this._synchOffset); }\n    if (rawPosition < 0) { rawPosition = 0; }\n    if (this._rawPosition === rawPosition && !synced) { return; }\n    this._rawPosition = rawPosition;\n\n    // update timeline position, ignoring actions if this is a graphic.\n    tl.loop = this.loop; // TODO: should we maintain this on MovieClip, or just have it on timeline?\n    tl.setPosition(rawPosition, synced || !this.actionsEnabled, jump, this._bound_resolveState);\n  };\n\n\t/**\n\t * Renders position 0 without running actions or updating _rawPosition.\n\t * Primarily used by Animate CC to build out the first frame in the constructor of MC symbols.\n\t * NOTE: not tested when run after the MC advances past the first frame.\n\t * @method _renderFirstFrame\n\t * @protected\n\t **/\n  p._renderFirstFrame = function () {\n    var tl = this.timeline, pos = tl.rawPosition;\n    tl.setPosition(0, true, true, this._bound_resolveState);\n    tl.rawPosition = pos;\n  };\n\n\t/**\n\t * Runs via a callback after timeline property updates and before actions.\n\t * @method _resolveState\n\t * @protected\n\t **/\n  p._resolveState = function () {\n    var tl = this.timeline;\n    this.currentFrame = tl.position;\n\n    for (var n in this._managed) { this._managed[n] = 1; }\n\n    var tweens = tl.tweens;\n    for (var i = 0, l = tweens.length; i < l; i++) {\n      var tween = tweens[i], target = tween.target;\n      if (target === this || tween.passive) { continue; } // TODO: this assumes the actions tween from Animate has `this` as the target. There's likely a better approach.\n      var offset = tween._stepPosition;\n\n      if (target instanceof createjs.DisplayObject) {\n        // motion tween.\n        this._addManagedChild(target, offset);\n      } else {\n        // state tween.\n        this._setState(target.state, offset);\n      }\n    }\n\n    var kids = this.children;\n    for (i = kids.length - 1; i >= 0; i--) {\n      var id = kids[i].id;\n      if (this._managed[id] === 1) {\n        this.removeChildAt(i);\n        delete (this._managed[id]);\n      }\n    }\n  };\n\n\t/**\n\t * @method _setState\n\t * @param {Array} state\n\t * @param {Number} offset\n\t * @protected\n\t **/\n  p._setState = function (state, offset) {\n    if (!state) { return; }\n    for (var i = state.length - 1; i >= 0; i--) {\n      var o = state[i];\n      var target = o.t;\n      var props = o.p;\n      for (var n in props) { target[n] = props[n]; }\n      this._addManagedChild(target, offset);\n    }\n  };\n\n\t/**\n\t * Adds a child to the timeline, and sets it up as a managed child.\n\t * @method _addManagedChild\n\t * @param {MovieClip} child The child MovieClip to manage\n\t * @param {Number} offset\n\t * @private\n\t **/\n  p._addManagedChild = function (child, offset) {\n    if (child._off) { return; }\n    this.addChildAt(child, 0);\n\n    if (child instanceof MovieClip) {\n      child._synchOffset = offset;\n      // TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n      // TODO: should also reset when MovieClip loops, though that will be a bit tricky to detect.\n      if (child.mode === MovieClip.INDEPENDENT && child.autoReset && (!this._managed[child.id])) { child._reset(); }\n    }\n    this._managed[child.id] = 2;\n  };\n\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {Rectangle}\n\t * @protected\n\t **/\n  p._getBounds = function (matrix, ignoreTransform) {\n    var bounds = this.DisplayObject_getBounds();\n    if (!bounds) {\n      if (this.frameBounds) { bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]); }\n    }\n    if (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n    return this.Container__getBounds(matrix, ignoreTransform);\n  };\n\n\n  createjs.MovieClip = createjs.promote(MovieClip, \"Container\");\n\n\n\n  // MovieClipPlugin for TweenJS:\n\t/**\n\t * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition\n\t * property from tweening.\n\t * @private\n\t * @class MovieClipPlugin\n\t * @constructor\n\t **/\n  function MovieClipPlugin() {\n    throw (\"MovieClipPlugin cannot be instantiated.\")\n  }\n\n\t/**\n\t * @property priority\n\t * @type {Number}\n\t * @static\n\t * @readonly\n\t **/\n  MovieClipPlugin.priority = 100; // very high priority, should run first\n\n\t/**\n\t * @property ID\n\t * @type {String}\n\t * @static\n\t * @readonly\n\t **/\n  MovieClipPlugin.ID = \"MovieClip\";\n\n\t/**\n\t * @method install\n\t * @static\n\t **/\n  MovieClipPlugin.install = function () {\n    createjs.Tween._installPlugin(MovieClipPlugin);\n  };\n\n\t/**\n\t * @method init\n\t * @param {Tween} tween\n\t * @param {String} prop\n\t * @param {*} value\n\t * @static\n\t **/\n  MovieClipPlugin.init = function (tween, prop, value) {\n    if (prop === \"startPosition\" && tween.target instanceof MovieClip) { tween._addPlugin(MovieClipPlugin); }\n  };\n\n\t/**\n\t * @method step\n\t * @param {Tween} tween\n\t * @param {TweenStep} step\n\t * @param {Object} props\n\t * @static\n\t **/\n  MovieClipPlugin.step = function (tween, step, props) { };\n\n\t/**\n\t * @method change\n\t * @param {Tween} tween\n\t * @param {TweenStep} step\n\t * @param {*} value\n\t * @param {Number} ratio\n\t * @param {Object} end\n\t * @return {*}\n\t * @static\n\t */\n  MovieClipPlugin.change = function (tween, step, prop, value, ratio, end) {\n    if (prop === \"startPosition\") { return (ratio === 1 ? step.props[prop] : step.prev.props[prop]); }\n  };\n\n}());\n\n//##############################################################################\n// SpriteSheetUtils.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\n\t * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\n\t * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\n\t * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\n\t * @class SpriteSheetUtils\n\t * @static\n\t **/\n  function SpriteSheetUtils() {\n    throw \"SpriteSheetUtils cannot be instantiated\";\n  }\n\n\n  // private static properties:\n\t/**\n\t * @property _workingCanvas\n\t * @static\n\t * @type HTMLCanvasElement | Object\n\t * @protected\n\t*/\n\t/**\n\t * @property _workingContext\n\t * @static\n\t * @type CanvasRenderingContext2D\n\t * @protected\n\t*/\n  var canvas = (createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\"));\n  if (canvas.getContext) {\n    SpriteSheetUtils._workingCanvas = canvas;\n    SpriteSheetUtils._workingContext = canvas.getContext(\"2d\");\n    canvas.width = canvas.height = 1;\n  }\n\n\n  // public static methods:\n\t/**\n\t * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\n\t * to use a spritesheet frame as the source for a bitmap fill.\n\t *\n\t * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {{#crossLink \"Sprite\"}}{{/crossLink}}\n\t * with a {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} call than it is to slice out a frame using this\n\t * method and display it with a Bitmap instance. You can also crop an image using the {{#crossLink \"Bitmap/sourceRect\"}}{{/crossLink}}\n\t * property of {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n\t *\n\t * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\n\t * @method extractFrame\n\t * @static\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\n\t * @param {Number|String} frameOrAnimation The frame number or animation name to extract. If an animation\n\t * name is specified, only the first frame of the animation will be extracted.\n\t * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\n\t*/\n  SpriteSheetUtils.extractFrame = function (spriteSheet, frameOrAnimation) {\n    if (isNaN(frameOrAnimation)) {\n      frameOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\n    }\n    var data = spriteSheet.getFrame(frameOrAnimation);\n    if (!data) { return null; }\n    var r = data.rect;\n    var canvas = SpriteSheetUtils._workingCanvas;\n    canvas.width = r.width;\n    canvas.height = r.height;\n    SpriteSheetUtils._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\n    var img = document.createElement(\"img\");\n    img.src = canvas.toDataURL(\"image/png\");\n    return img;\n  };\n\n  // SpriteSheetUtils.addFlippedFrames is @deprecated. Remove for 1.1+\n  SpriteSheetUtils.addFlippedFrames = createjs.deprecate(null, \"SpriteSheetUtils.addFlippedFrames\");\n\n  // SpriteSheetUtils.addFlippedFrames is @deprecated. Remove for 1.1+\n  SpriteSheetUtils.mergeAlpha = createjs.deprecate(null, \"SpriteSheetUtils.mergeAlpha\");\n\n\n  // private static methods:\n  SpriteSheetUtils._flip = function (spriteSheet, count, h, v) {\n    var imgs = spriteSheet._images;\n    var canvas = SpriteSheetUtils._workingCanvas;\n    var ctx = SpriteSheetUtils._workingContext;\n    var il = imgs.length / count;\n    for (var i = 0; i < il; i++) {\n      var src = imgs[i];\n      src.__tmp = i; // a bit hacky, but faster than doing indexOf below.\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.clearRect(0, 0, canvas.width + 1, canvas.height + 1);\n      canvas.width = src.width;\n      canvas.height = src.height;\n      ctx.setTransform(h ? -1 : 1, 0, 0, v ? -1 : 1, h ? src.width : 0, v ? src.height : 0);\n      ctx.drawImage(src, 0, 0);\n      var img = document.createElement(\"img\");\n      img.src = canvas.toDataURL(\"image/png\");\n      // work around a strange bug in Safari:\n      img.width = (src.width || src.naturalWidth);\n      img.height = (src.height || src.naturalHeight);\n      imgs.push(img);\n    }\n\n    var frames = spriteSheet._frames;\n    var fl = frames.length / count;\n    for (i = 0; i < fl; i++) {\n      src = frames[i];\n      var rect = src.rect.clone();\n      img = imgs[src.image.__tmp + il * count];\n\n      var frame = { image: img, rect: rect, regX: src.regX, regY: src.regY };\n      if (h) {\n        rect.x = (img.width || img.naturalWidth) - rect.x - rect.width; // update rect\n        frame.regX = rect.width - src.regX; // update registration point\n      }\n      if (v) {\n        rect.y = (img.height || img.naturalHeight) - rect.y - rect.height;  // update rect\n        frame.regY = rect.height - src.regY; // update registration point\n      }\n      frames.push(frame);\n    }\n\n    var sfx = \"_\" + (h ? \"h\" : \"\") + (v ? \"v\" : \"\");\n    var names = spriteSheet._animations;\n    var data = spriteSheet._data;\n    var al = names.length / count;\n    for (i = 0; i < al; i++) {\n      var name = names[i];\n      src = data[name];\n      var anim = { name: name + sfx, speed: src.speed, next: src.next, frames: [] };\n      if (src.next) { anim.next += sfx; }\n      frames = src.frames;\n      for (var j = 0, l = frames.length; j < l; j++) {\n        anim.frames.push(frames[j] + fl * count);\n      }\n      data[anim.name] = anim;\n      names.push(anim.name);\n    }\n  };\n\n\n  createjs.SpriteSheetUtils = SpriteSheetUtils;\n}());\n\n//##############################################################################\n// SpriteSheetBuilder.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * The SpriteSheetBuilder allows you to generate {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances at run time\n\t * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n\t * render them at run time as SpriteSheets for better performance.\n\t *\n\t * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n\t * without locking the UI.\n\t *\n\t * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n\t * sized to the nearest power of 2 up to the value of {{#crossLink \"SpriteSheetBuilder/maxWidth:property\"}}{{/crossLink}}\n\t * or {{#crossLink \"SpriteSheetBuilder/maxHeight:property\"}}{{/crossLink}}.\n\t * @class SpriteSheetBuilder\n\t * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n\t * {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are created.\n\t * @extends EventDispatcher\n\t * @constructor\n\t **/\n  function SpriteSheetBuilder(framerate) {\n    this.EventDispatcher_constructor();\n\n    // public properties:\n\t\t/**\n\t\t * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @property maxWidth\n\t\t * @type Number\n\t\t * @default 2048\n\t\t*/\n    this.maxWidth = 2048;\n\n\t\t/**\n\t\t * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @property maxHeight\n\t\t * @type Number\n\t\t * @default 2048\n\t\t **/\n    this.maxHeight = 2048;\n\n\t\t/**\n\t\t * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n\t\t * @property spriteSheet\n\t\t * @type SpriteSheet\n\t\t **/\n    this.spriteSheet = null;\n\n\t\t/**\n\t\t * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n\t\t * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n\t\t * to the a specific device resolution (ex. tablet vs mobile).\n\t\t * @property scale\n\t\t * @type Number\n\t\t * @default 1\n\t\t **/\n    this.scale = 1;\n\n\t\t/**\n\t\t* The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n\t\t* @property padding\n\t\t* @type Number\n\t\t* @default 1\n\t\t**/\n    this.padding = 1;\n\n\t\t/**\n\t\t * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n\t\t * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n\t\t * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n\t\t * Defaults to 0.3.\n\t\t * @property timeSlice\n\t\t * @type Number\n\t\t * @default 0.3\n\t\t **/\n    this.timeSlice = 0.3;\n\n\t\t/**\n\t\t * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n\t\t * been initiated.\n\t\t * @property progress\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @readonly\n\t\t */\n    this.progress = -1;\n\n\t\t/**\n\t\t * A {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} value that will be passed to new {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are\n\t\t * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t\t * framerate.\n\t\t * @property framerate\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n    this.framerate = framerate || 0;\n\n\n    // private properties:\n\t\t/**\n\t\t * @property _frames\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n    this._frames = [];\n\n\t\t/**\n\t\t * @property _animations\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n    this._animations = {};\n\n\t\t/**\n\t\t * @property _data\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n    this._data = null;\n\n\t\t/**\n\t\t * @property _nextFrameIndex\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n    this._nextFrameIndex = 0;\n\n\t\t/**\n\t\t * @property _index\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n    this._index = 0;\n\n\t\t/**\n\t\t * @property _timerID\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n    this._timerID = null;\n\n\t\t/**\n\t\t * @property _scale\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n    this._scale = 1;\n  }\n  var p = createjs.extend(SpriteSheetBuilder, createjs.EventDispatcher);\n\n  // constants:\n  SpriteSheetBuilder.ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\n  SpriteSheetBuilder.ERR_RUNNING = \"a build is already running\";\n\n  // events:\n\t/**\n\t * Dispatched when a build completes.\n\t * @event complete\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when an asynchronous build has progress.\n\t * @event progress\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Number} progress The current progress value (0-1).\n\t * @since 0.6.0\n\t */\n\n\n  // public methods:\n\t/**\n\t * Adds a frame to the {{#crossLink \"SpriteSheet\"}}{{/crossLink}}. Note that the frame will not be drawn until you\n\t * call {{#crossLink \"SpriteSheetBuilder/build\"}}{{/crossLink}} method. The optional setup params allow you to have\n\t * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n\t * times, but manipulate it or its children to change it to generate different frames.\n\t *\n\t * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n\t * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {{#crossLink \"Container\"}}{{/crossLink}}\n\t * and pass in the Container as the source.\n\t * @method addFrame\n\t * @param {DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n\t * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n\t * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n\t * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n\t **/\n  p.addFrame = function (source, sourceRect, scale, setupFunction, setupData) {\n    if (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n    var rect = sourceRect || source.bounds || source.nominalBounds;\n    if (!rect && source.getBounds) { rect = source.getBounds(); }\n    if (!rect) { return null; }\n    scale = scale || 1;\n    return this._frames.push({ source: source, sourceRect: rect, scale: scale, funct: setupFunction, data: setupData, index: this._frames.length, height: rect.height * scale }) - 1;\n  };\n\n\t/**\n\t * Adds an animation that will be included in the created {{#crossLink \"SpriteSheet\"}}{{/crossLink}}.\n\t * @method addAnimation\n\t * @param {String} name The name for the animation.\n\t * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n\t * that played frame indexes 3, 6, and 5 in that order.\n\t * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n\t * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n\t * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n\t * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n\t * the opposite effect.\n\t **/\n  p.addAnimation = function (name, frames, next, speed) {\n    if (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n    this._animations[name] = { frames: frames, next: next, speed: speed };\n  };\n\n\t/**\n\t * This will take a {{#crossLink \"MovieClip\"}}{{/crossLink}} instance, and add its frames and labels to this\n\t * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n\t * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n\t * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n\t * frame index 10 to 14.\n\t *\n\t * Note that this will iterate through the full MovieClip with {{#crossLink \"MovieClip/actionsEnabled:property\"}}{{/crossLink}}\n\t * set to `false`, ending on the last frame.\n\t * @method addMovieClip\n\t * @param {MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the source to\n\t * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n\t * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n\t * found, the MovieClip will be skipped.\n\t * @param {Number} [scale=1] The scale to draw the movie clip at.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n\t * with three parameters: the source, setupData, and the frame index.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n\t * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n\t * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n\t **/\n  p.addMovieClip = function (source, sourceRect, scale, setupFunction, setupData, labelFunction) {\n    if (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n    var rects = source.frameBounds;\n    var rect = sourceRect || source.bounds || source.nominalBounds;\n    if (!rect && source.getBounds) { rect = source.getBounds(); }\n    if (!rect && !rects) { return; }\n\n    var i, l, baseFrameIndex = this._frames.length;\n    var duration = source.timeline.duration;\n    for (i = 0; i < duration; i++) {\n      var r = (rects && rects[i]) ? rects[i] : rect;\n      this.addFrame(source, r, scale, this._setupMovieClipFrame, { i: i, f: setupFunction, d: setupData });\n    }\n    var labels = source.timeline._labels;\n    var lbls = [];\n    for (var n in labels) {\n      lbls.push({ index: labels[n], label: n });\n    }\n    if (lbls.length) {\n      lbls.sort(function (a, b) { return a.index - b.index; });\n      for (i = 0, l = lbls.length; i < l; i++) {\n        var label = lbls[i].label;\n        var start = baseFrameIndex + lbls[i].index;\n        var end = baseFrameIndex + ((i == l - 1) ? duration : lbls[i + 1].index);\n        var frames = [];\n        for (var j = start; j < end; j++) { frames.push(j); }\n        if (labelFunction) {\n          label = labelFunction(label, source, start, end);\n          if (!label) { continue; }\n        }\n        this.addAnimation(label, frames, true); // for now, this loops all animations.\n      }\n    }\n  };\n\n\t/**\n\t * Builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames.\n\t * @method build\n\t * @return {SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n\t * occurred.\n\t **/\n  p.build = function () {\n    if (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n    this._startBuild();\n    while (this._drawNext()) { }\n    this._endBuild();\n    return this.spriteSheet;\n  };\n\n\t/**\n\t * Asynchronously builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames. It will\n\t * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n\t * specified callback.\n\t * @method buildAsync\n\t * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n\t **/\n  p.buildAsync = function (timeSlice) {\n    if (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n    this.timeSlice = timeSlice;\n    this._startBuild();\n    var _this = this;\n    this._timerID = setTimeout(function () { _this._run(); }, 50 - Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)) * 50);\n  };\n\n\t/**\n\t * Stops the current asynchronous build.\n\t * @method stopAsync\n\t **/\n  p.stopAsync = function () {\n    clearTimeout(this._timerID);\n    this._data = null;\n  };\n\n\t/**\n\t * SpriteSheetBuilder instances cannot be cloned.\n\t * @method clone\n\t **/\n  p.clone = function () {\n    throw (\"SpriteSheetBuilder cannot be cloned.\");\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[SpriteSheetBuilder]\";\n  };\n\n\n  // private methods:\n\t/**\n\t * @method _startBuild\n\t * @protected\n\t **/\n  p._startBuild = function () {\n    var pad = this.padding || 0;\n    this.progress = 0;\n    this.spriteSheet = null;\n    this._index = 0;\n    this._scale = this.scale;\n    var dataFrames = [];\n    this._data = {\n      images: [],\n      frames: dataFrames,\n      framerate: this.framerate,\n      animations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n    };\n\n    var frames = this._frames.slice();\n    frames.sort(function (a, b) { return (a.height <= b.height) ? -1 : 1; });\n\n    if (frames[frames.length - 1].height + pad * 2 > this.maxHeight) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n    var y = 0, x = 0;\n    var img = 0;\n    while (frames.length) {\n      var o = this._fillRow(frames, y, img, dataFrames, pad);\n      if (o.w > x) { x = o.w; }\n      y += o.h;\n      if (!o.h || !frames.length) {\n        var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n        canvas.width = this._getSize(x, this.maxWidth);\n        canvas.height = this._getSize(y, this.maxHeight);\n        this._data.images[img] = canvas;\n        if (!o.h) {\n          x = y = 0;\n          img++;\n        }\n      }\n    }\n  };\n\n\t/**\n\t * @method _setupMovieClipFrame\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t **/\n  p._setupMovieClipFrame = function (source, data) {\n    var ae = source.actionsEnabled;\n    source.actionsEnabled = false;\n    source.gotoAndStop(data.i);\n    source.actionsEnabled = ae;\n    data.f && data.f(source, data.d, data.i);\n  };\n\n\t/**\n\t * @method _getSize\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t **/\n  p._getSize = function (size, max) {\n    var pow = 4;\n    while (Math.pow(2, ++pow) < size) { }\n    return Math.min(max, Math.pow(2, pow));\n  };\n\n\t/**\n\t * @method _fillRow\n\t * @param {Array} frames\n\t * @param {Number} y\n\t * @param {HTMLImageElement} img\n\t * @param {Object} dataFrames\n\t * @param {Number} pad\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t **/\n  p._fillRow = function (frames, y, img, dataFrames, pad) {\n    var w = this.maxWidth;\n    var maxH = this.maxHeight;\n    y += pad;\n    var h = maxH - y;\n    var x = pad;\n    var height = 0;\n    for (var i = frames.length - 1; i >= 0; i--) {\n      var frame = frames[i];\n      var sc = this._scale * frame.scale;\n      var rect = frame.sourceRect;\n      var source = frame.source;\n      var rx = Math.floor(sc * rect.x - pad);\n      var ry = Math.floor(sc * rect.y - pad);\n      var rh = Math.ceil(sc * rect.height + pad * 2);\n      var rw = Math.ceil(sc * rect.width + pad * 2);\n      if (rw > w) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n      if (rh > h || x + rw > w) { continue; }\n      frame.img = img;\n      frame.rect = new createjs.Rectangle(x, y, rw, rh);\n      height = height || rh;\n      frames.splice(i, 1);\n      dataFrames[frame.index] = [x, y, rw, rh, img, Math.round(-rx + sc * source.regX - pad), Math.round(-ry + sc * source.regY - pad)];\n      x += rw;\n    }\n    return { w: x, h: height };\n  };\n\n\t/**\n\t * @method _endBuild\n\t * @protected\n\t **/\n  p._endBuild = function () {\n    this.spriteSheet = new createjs.SpriteSheet(this._data);\n    this._data = null;\n    this.progress = 1;\n    this.dispatchEvent(\"complete\");\n  };\n\n\t/**\n\t * @method _run\n\t * @protected\n\t **/\n  p._run = function () {\n    var ts = Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)) * 50;\n    var t = (new Date()).getTime() + ts;\n    var complete = false;\n    while (t > (new Date()).getTime()) {\n      if (!this._drawNext()) { complete = true; break; }\n    }\n    if (complete) {\n      this._endBuild();\n    } else {\n      var _this = this;\n      this._timerID = setTimeout(function () { _this._run(); }, 50 - ts);\n    }\n    var p = this.progress = this._index / this._frames.length;\n    if (this.hasEventListener(\"progress\")) {\n      var evt = new createjs.Event(\"progress\");\n      evt.progress = p;\n      this.dispatchEvent(evt);\n    }\n  };\n\n\t/**\n\t * @method _drawNext\n\t * @protected\n\t * @return Boolean Returns false if this is the last draw.\n\t **/\n  p._drawNext = function () {\n    var frame = this._frames[this._index];\n    var sc = frame.scale * this._scale;\n    var rect = frame.rect;\n    var sourceRect = frame.sourceRect;\n    var canvas = this._data.images[frame.img];\n    var ctx = canvas.getContext(\"2d\");\n    frame.funct && frame.funct(frame.source, frame.data);\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.clip();\n    ctx.translate(Math.ceil(rect.x - sourceRect.x * sc), Math.ceil(rect.y - sourceRect.y * sc));\n    ctx.scale(sc, sc);\n    frame.source.draw(ctx); // display object will draw itself.\n    ctx.restore();\n    return (++this._index) < this._frames.length;\n  };\n\n\n  createjs.SpriteSheetBuilder = createjs.promote(SpriteSheetBuilder, \"EventDispatcher\");\n}());\n\n//##############################################################################\n// DOMElement.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n\t *\n\t * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n\t * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n\t * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n\t * drawn in front of or behind the canvas).\n\t *\n\t * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n\t * the DOM Object be added to a div that also contains the canvas so that they share the same position\n\t * on the page.\n\t *\n\t * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n\t * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n\t * content.\n\t *\n\t * <h4>Mouse Interaction</h4>\n\t *\n\t * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n\t * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n\t * the htmlElement (note, this does not support EventDispatcher)\n\t *\n\t *      var domElement = new createjs.DOMElement(htmlElement);\n\t *      domElement.htmlElement.onclick = function() {\n\t *          console.log(\"clicked\");\n\t *      }\n\t *\n\t * <strong>Important:</strong> This class needs to be notified it is about to be drawn, this will happen automatically\n\t * if you call stage.update, calling stage.draw or disabling tickEnabled will miss important steps and it will render\n\t * stale information.\n\t *\n\t * @class DOMElement\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {HTMLElement} htmlElement A reference or id for the DOM element to manage.\n\t */\n  function DOMElement(htmlElement) {\n    this.DisplayObject_constructor();\n\n    if (typeof (htmlElement) == \"string\") { htmlElement = document.getElementById(htmlElement); }\n    this.mouseEnabled = false;\n\n    var style = htmlElement.style;\n    style.position = \"absolute\";\n    style.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\";\n\n\n    // public properties:\n\t\t/**\n\t\t * The DOM object to manage.\n\t\t * @property htmlElement\n\t\t * @type HTMLElement\n\t\t */\n    this.htmlElement = htmlElement;\n\n\n    // private properties:\n\t\t/**\n\t\t * @property _oldMtx\n\t\t * @type Matrix2D\n\t\t * @protected\n\t\t */\n    this._oldProps = null;\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @property _oldStage\n\t\t * @type Stage\n\t\t * @protected\n\t\t */\n    this._oldStage = null;\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @property _drawAction\n\t\t * @type function\n\t\t * @protected\n\t\t */\n    this._drawAction = null;\n  }\n  var p = createjs.extend(DOMElement, createjs.DisplayObject);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n  // public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n  p.isVisible = function () {\n    return this.htmlElement != null;\n  };\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t * @return {Boolean}\n\t */\n  p.draw = function (ctx, ignoreCache) {\n    // this relies on the _tick method because draw isn't called if the parent is not visible.\n    // the actual update happens in _handleDrawEnd\n    return true;\n  };\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method cache\n\t */\n  p.cache = function () { };\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method uncache\n\t */\n  p.uncache = function () { };\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method updateCache\n\t */\n  p.updateCache = function () { };\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method hitTest\n\t */\n  p.hitTest = function () { };\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method localToGlobal\n\t */\n  p.localToGlobal = function () { };\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method globalToLocal\n\t */\n  p.globalToLocal = function () { };\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method localToLocal\n\t */\n  p.localToLocal = function () { };\n\n\t/**\n\t * DOMElement cannot be cloned. Throws an error.\n\t * @method clone\n\t */\n  p.clone = function () {\n    throw (\"DOMElement cannot be cloned.\")\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n  p.toString = function () {\n    return \"[DOMElement (name=\" + this.name + \")]\";\n  };\n\n\t/**\n     * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n\t * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t * @event click\n\t */\n\n  /**\n  * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n  * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n* @event dblClick\n*/\n\n  /**\n   * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n   * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event mousedown\n */\n\n  /**\n   * The HTMLElement can listen for the mouseover event, not the DOMElement instance.\n   * Since DOMElement instances are not full EaselJS display objects and do not participate in EaselJS mouse events.\n   * @event mouseover\n */\n\n  /**\n   * Not applicable to DOMElement.\n * @event tick\n */\n\n\n  // private methods:\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * function.\n\t * @protected\n\t */\n  p._tick = function (evtObj) {\n    var stage = this.stage;\n    if (stage && stage !== this._oldStage) {\n      this._drawAction && stage.off(\"drawend\", this._drawAction);\n      this._drawAction = stage.on(\"drawend\", this._handleDrawEnd, this);\n      this._oldStage = stage;\n    }\n    this.DisplayObject__tick(evtObj);\n  };\n\n\t/**\n\t * @method _handleDrawEnd\n\t * @param {Event} evt\n\t * @protected\n\t */\n  p._handleDrawEnd = function (evt) {\n    var o = this.htmlElement;\n    if (!o) { return; }\n    var style = o.style;\n\n    var props = this.getConcatenatedDisplayProps(this._props), mtx = props.matrix;\n\n    var visibility = props.visible ? \"visible\" : \"hidden\";\n    if (visibility != style.visibility) { style.visibility = visibility; }\n    if (!props.visible) { return; }\n\n    var oldProps = this._oldProps, oldMtx = oldProps && oldProps.matrix;\n    var n = 10000; // precision\n\n    if (!oldMtx || !oldMtx.equals(mtx)) {\n      var str = \"matrix(\" + (mtx.a * n | 0) / n + \",\" + (mtx.b * n | 0) / n + \",\" + (mtx.c * n | 0) / n + \",\" + (mtx.d * n | 0) / n + \",\" + (mtx.tx + 0.5 | 0);\n      style.transform = style.WebkitTransform = style.OTransform = style.msTransform = str + \",\" + (mtx.ty + 0.5 | 0) + \")\";\n      style.MozTransform = str + \"px,\" + (mtx.ty + 0.5 | 0) + \"px)\";\n      if (!oldProps) { oldProps = this._oldProps = new createjs.DisplayProps(true, null); }\n      oldProps.matrix.copy(mtx);\n    }\n\n    if (oldProps.alpha != props.alpha) {\n      style.opacity = \"\" + (props.alpha * n | 0) / n;\n      oldProps.alpha = props.alpha;\n    }\n  };\n\n\n  createjs.DOMElement = createjs.promote(DOMElement, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Filter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n\t * the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method. If an object changes, please cache it again, or use\n\t * {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}}. Note that the filters must be applied before caching.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myInstance.filters = [\n\t *          new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n\t *          new createjs.BlurFilter(5, 5, 10)\n\t *      ];\n\t *      myInstance.cache(0,0, 100, 100);\n\t *\n\t * Note that each filter can implement a {{#crossLink \"Filter/getBounds\"}}{{/crossLink}} method, which returns the\n\t * margins that need to be applied in order to fully display the filter. For example, the {{#crossLink \"BlurFilter\"}}{{/crossLink}}\n\t * will cause an object to feather outwards, resulting in a margin around the shape.\n\t *\n\t * <h4>EaselJS Filters</h4>\n\t * EaselJS comes with a number of pre-built filters:\n\t * <ul><li>{{#crossLink \"AlphaMapFilter\"}}{{/crossLink}} : Map a greyscale image to the alpha channel of a display object</li>\n\t *      <li>{{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}: Map an image's alpha channel to the alpha channel of a display object</li>\n\t *      <li>{{#crossLink \"BlurFilter\"}}{{/crossLink}}: Apply vertical and horizontal blur to a display object</li>\n\t *      <li>{{#crossLink \"ColorFilter\"}}{{/crossLink}}: Color transform a display object</li>\n\t *      <li>{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n\t * </ul>\n\t *\n\t * @class Filter\n\t * @constructor\n\t **/\n  function Filter() {\n\t\t/**\n\t\t * A flag stating that this filter uses a context draw mode and cannot be batched into imageData processing.\n\t\t * @property usesContext\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n    this.usesContext = false;\n\n\t\t/**\n\t\t * Another filter that is required to act as part of this filter and created and managed under the hood.\n\t\t * @private\n\t\t * @property _multiPass\n\t\t * @type {Filter}\n\t\t * @default null\n\t\t */\n    this._multiPass = null;\n\n\t\t/**\n\t\t * Pre-processed template shader code. It will be parsed before being fed in into the shader compiler.\n\t\t * This should be based upon StageGL.SHADER_VERTEX_BODY_REGULAR\n\t\t * @property VTX_SHADER\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n    this.VTX_SHADER_BODY = null;\n\n\t\t/**\n\t\t * Pre-processed template shader code. It will be parsed before being fed in into the shader compiler.\n\t\t * This should be based upon StageGL.SHADER_FRAGMENT_BODY_REGULAR\n\t\t * @property FRAG_SHADER\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n    this.FRAG_SHADER_BODY = null;\n  }\n  var p = Filter.prototype;\n\n  // public methods:\n\t/**\n\t * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n\t * @method getBounds\n\t * @param {Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n\t * @return {Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n\t **/\n  p.getBounds = function (rect) {\n    return rect;\n  };\n\n\t/**\n\t * Assign any unique uniforms or other setup functionality here.\n\t * @method shaderParamSetup\n\t * @virtual\n\t * @param {WebGLContext} gl The context associated with the stage performing the render.\n\t * @param {StageGL} stage The stage instance that will be rendering.\n\t * @param {ShaderProgram} shaderProgram The compiled shader that is going to be used to perform the render.\n\t */\n  p.shaderParamSetup = function (gl, stage, shaderProgram) { };\n\n\t/**\n\t * Applies the filter to the specified context.\n\t * @method applyFilter\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t **/\n  p.applyFilter = function (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n    // this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n    targetCtx = targetCtx || ctx;\n    if (targetX == null) { targetX = x; }\n    if (targetY == null) { targetY = y; }\n    try {\n      var imageData = ctx.getImageData(x, y, width, height);\n    } catch (e) {\n      return false;\n    }\n    if (this._applyFilter(imageData)) {\n      targetCtx.putImageData(imageData, targetX, targetY);\n      return true;\n    }\n    return false;\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[Filter]\";\n  };\n\n\t/**\n\t * Returns a clone of this Filter instance.\n\t * @method clone\n\t * @return {Filter} A clone of the current Filter instance.\n\t **/\n  p.clone = function () {\n    return new Filter();\n  };\n\n  // private methods:\n\t/**\n\t * @method _applyFilter\n\t * @param {ImageData} imageData Target ImageData instance.\n\t * @return {Boolean}\n\t **/\n  p._applyFilter = function (imageData) { return true; };\n\n\n  createjs.Filter = Filter;\n}());\n\n//##############################################################################\n// BitmapCache.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * The BitmapCache is an internal representation of all the cache properties and logic required in order to \"cache\"\n\t * an object. This information and functionality used to be located on a {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method in {{#crossLink \"DisplayObject\"}}{{/crossLink}}, but was moved to its own class.\n\t *\n\t * Caching in this context is purely visual, and will render the DisplayObject out into an image to be used instead\n\t * of the object. The actual cache itself is still stored on the target with the {{#crossLink \"DisplayObject/cacheCanvas:property\"}}{{/crossLink}}.\n\t * Working with a singular image like a {{#crossLink \"Bitmap\"}}{{/crossLink}} there is little benefit to performing\n\t * a cache as it is already a single image. Caching is best done on containers containing multiple complex parts that\n\t * do not move often, so that rendering the image instead will improve overall rendering speed. A cached object will\n\t * not visually update until explicitly told to do so with a call to update, much like a Stage. If a cache is being\n\t * updated every frame it is likely not improving rendering performance. Cache are best used when updates will be sparse.\n\t *\n\t * Caching is also a co-requisite for applying filters to prevent expensive filters running constantly without need,\n\t * and to physically enable some effects. The BitmapCache is also responsible for applying filters to objects and\n\t * reads each {{#crossLink \"Filter\"}}{{/crossLink}} due to this relationship. Real-time Filters are not recommended\n\t * performance wise when dealing with a Context2D canvas. For best performance and to still allow for some visual\n\t * effects use a compositeOperation when possible.\n\t * @class BitmapCache\n\t * @constructor\n\t **/\n  function BitmapCache() {\n\n    // public:\n\t\t/**\n\t\t * Width of the cache relative to the target object.\n\t\t * @property width\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t **/\n    this.width = undefined;\n\n\t\t/**\n\t\t * Height of the cache relative to the target object.\n\t\t * @property height\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t * @todo Should the width and height be protected?\n\t\t **/\n    this.height = undefined;\n\n\t\t/**\n\t\t * Horizontal position of the cache relative to the target's origin.\n\t\t * @property x\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t **/\n    this.x = undefined;\n\n\t\t/**\n\t\t * Vertical position of the cache relative to target's origin.\n\t\t * @property y\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t **/\n    this.y = undefined;\n\n\t\t/**\n\t\t * The internal scale of the cache image, does not affects display size. This is useful to both increase and\n\t\t * decrease render quality. Objects with increased scales are more likely to look good when scaled up or rotated.\n\t\t * Objects with decreased scales can save on rendering performance.\n\t\t * @property scale\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t **/\n    this.scale = 1;\n\n\t\t/**\n\t\t * The x offset used for drawing into the cache itself, accounts for both transforms applied.\n\t\t * @property offX\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this.offX = 0;\n\n\t\t/**\n\t\t * The y offset used for drawing into the cache itself, accounts for both transforms applied.\n\t\t * @property offY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this.offY = 0;\n\n\t\t/**\n\t\t * Track how many times the cache has been updated, mostly used for preventing duplicate cacheURLs.\n\t\t * This can be useful to see if a cache has been updated.\n\t\t * @property cacheID\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this.cacheID = 0;\n\n    // protected:\n\t\t/**\n\t\t * The relative offset of the filter's x position, used for drawing the cache onto its container.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @property _filterOffY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this._filterOffX = 0;\n\n\t\t/**\n\t\t * The relative offset of the filter's y position, used for drawing the cache onto its container.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @property _filterOffY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this._filterOffY = 0;\n\n\t\t/**\n\t\t * The cacheID when a DataURL was requested.\n\t\t * @property _cacheDataURLID\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this._cacheDataURLID = 0;\n\n\t\t/**\n\t\t * The cache's DataURL, generated on-demand using the getter.\n\t\t * @property _cacheDataURL\n\t\t * @protected\n\t\t * @type {String}\n\t\t * @default null\n\t\t **/\n    this._cacheDataURL = null;\n\n\t\t/**\n\t\t * Internal tracking of final bounding width, approximately width*scale; however, filters can complicate the actual value.\n\t\t * @property _drawWidth\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this._drawWidth = 0;\n\n\t\t/**\n\t\t * Internal tracking of final bounding height, approximately height*scale; however, filters can complicate the actual value.\n\t\t * @property _drawHeight\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n    this._drawHeight = 0;\n\n\t\t/**\n\t\t * Internal tracking of the last requested bounds, may happen repeadtedly so stored to avoid object creation\n\t\t * @property _boundRect\n\t\t * @protected\n\t\t * @type {Rectangle}\n\t\t * @default 0\n\t\t **/\n    this._boundRect = new createjs.Rectangle();\n  }\n  var p = BitmapCache.prototype;\n\n\t/**\n\t * Returns the bounds that surround all applied filters, relies on each filter to describe how it changes bounds.\n\t * @method getFilterBounds\n\t * @param {DisplayObject} target The object to check the filter bounds for.\n\t * @param {Rectangle} [output=null] Optional parameter, if provided then calculated bounds will be applied to that object.\n\t * @return {Rectangle} bounds object representing the bounds with filters.\n\t * @static\n\t **/\n  BitmapCache.getFilterBounds = function (target, output) {\n    if (!output) { output = new createjs.Rectangle(); }\n    var filters = target.filters;\n    var filterCount = filters && filters.length;\n    if (!!filterCount <= 0) { return output; }\n\n    for (var i = 0; i < filterCount; i++) {\n      var f = filters[i];\n      if (!f || !f.getBounds) { continue; }\n      var test = f.getBounds();\n      if (!test) { continue; }\n      if (i == 0) {\n        output.setValues(test.x, test.y, test.width, test.height);\n      } else {\n        output.extend(test.x, test.y, test.width, test.height);\n      }\n    }\n\n    return output;\n  };\n\n  // public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[BitmapCache]\";\n  };\n\n\t/**\n\t * Actually create the correct cache surface and properties associated with it. Caching and it's benefits are discussed\n\t * by the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} function and this class description. Here are the detailed\n\t * specifics of how to use the options object.\n\t *\n\t * - If options.useGL is set to \"new\" a StageGL is created and contained on this for use when rendering the cache.\n\t * - If options.useGL is set to \"stage\" if the current stage is a StageGL it will be used. If not then it will default to \"new\".\n\t * - If options.useGL is a StageGL instance it will not create one but use the one provided.\n\t * - If options.useGL is undefined a Context 2D cache will be performed.\n\t *\n\t * This means you can use any combination of StageGL and 2D with either, neither, or both the stage and cache being\n\t * WebGL. Using \"new\" with a StageGL display list is highly unrecommended, but still an option. It should be avoided\n\t * due to negative performance reasons and the Image loading limitation noted in the class complications above.\n\t *\n\t * When \"options.useGL\" is set to the parent stage of the target and WebGL, performance is increased by using\n\t * \"RenderTextures\" instead of canvas elements. These are internal Textures on the graphics card stored in the GPU.\n\t * Because they are no longer canvases you cannot perform operations you could with a regular canvas. The benefit\n\t * is that this avoids the slowdown of copying the texture back and forth from the GPU to a Canvas element.\n\t * This means \"stage\" is the recommended option when available.\n\t *\n\t * A StageGL cache does not infer the ability to draw objects a StageGL cannot currently draw, i.e. do not use a\n\t * WebGL context cache when caching a Shape, Text, etc.\n\t * <h4>WebGL cache with a 2D context</h4>\n\t *\n\t *     var stage = new createjs.Stage();\n\t *     var bmp = new createjs.Bitmap(src);\n\t *     bmp.cache(0, 0, bmp.width, bmp.height, 1, {gl: \"new\"});          // no StageGL to use, so make one\n\t *\n\t *     var shape = new createjs.Shape();\n\t *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n\t *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n\t *\n\t * <h4>WebGL cache with a WebGL context</h4>\n\t *\n\t *     var stageGL = new createjs.StageGL();\n\t *     var bmp = new createjs.Bitmap(src);\n\t *     bmp.cache(0, 0, bmp.width, bmp.height, 1, {gl: \"stage\"});       // use our StageGL to cache\n\t *\n\t *     var shape = new createjs.Shape();\n\t *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n\t *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n\t *\n\t * You may wish to create your own StageGL instance to control factors like clear color, transparency, AA, and\n\t * others. If you do, pass a new instance in instead of \"true\", the library will automatically set the\n\t * {{#crossLink \"StageGL/isCacheControlled\"}}{{/crossLink}} to true on your instance. This will trigger it to behave\n\t * correctly, and not assume your main context is WebGL.\n\t *\n\t * @public\n\t * @method BitmapCache.cache\n\t * @param {Number} x The x coordinate origin for the cache region.\n\t * @param {Number} y The y coordinate origin for the cache region.\n\t * @param {Number} width The width of the cache region.\n\t * @param {Number} height The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape\n\t * using myShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and\n\t * rotate cached elements with greater fidelity. Default is 1.\n\t * @param {Object} [options=undefined] Specify additional parameters for the cache logic\n\t * @param {undefined|\"new\"|\"stage\"|StageGL} [options.useGL=undefined] Select whether to use context 2D, or WebGL rendering, and\n\t * whether to make a new stage instance or use an existing one. See above for extensive details on use.\n\t * @for BitmapCache\n\t */\n  p.define = function (target, x, y, width, height, scale, options) {\n    if (!target) { throw \"No symbol to cache\"; }\n    this._options = options;\n    this.target = target;\n\n    this.width = width >= 1 ? width : 1;\n    this.height = height >= 1 ? height : 1;\n    this.x = x || 0;\n    this.y = y || 0;\n    this.scale = scale || 1;\n\n    this.update();\n  };\n\n\t/**\n\t * Directly called via {{#crossLink \"DisplayObject/updateCache:method\"}}{{/crossLink}}, but also internally. This\n\t * has the dual responsibility of making sure the surface is ready to be drawn to, and performing the draw. For\n\t * full details of each behaviour, check the protected functions {{#crossLink \"BitmapCache/_updateSurface\"}}{{/crossLink}}\n\t * and {{#crossLink \"BitmapCache/_drawToCache\"}}{{/crossLink}} respectively.\n\t * @method update\n\t * @param {String} [compositeOperation=null] The DisplayObject this cache is linked to.\n\t **/\n  p.update = function (compositeOperation) {\n    if (!this.target) { throw \"define() must be called before update()\"; }\n\n    var filterBounds = BitmapCache.getFilterBounds(this.target);\n    var surface = this.target.cacheCanvas;\n\n    this._drawWidth = Math.ceil(this.width * this.scale) + filterBounds.width;\n    this._drawHeight = Math.ceil(this.height * this.scale) + filterBounds.height;\n\n    if (!surface || this._drawWidth != surface.width || this._drawHeight != surface.height) {\n      this._updateSurface();\n    }\n\n    this._filterOffX = filterBounds.x;\n    this._filterOffY = filterBounds.y;\n    this.offX = this.x * this.scale + this._filterOffX;\n    this.offY = this.y * this.scale + this._filterOffY;\n\n    this._drawToCache(compositeOperation);\n\n    this.cacheID = this.cacheID ? this.cacheID + 1 : 1;\n  };\n\n\t/**\n\t * Reset and release all the properties and memory associated with this cache.\n\t * @method release\n\t **/\n  p.release = function () {\n    if (this._webGLCache) {\n      // if it isn't cache controlled clean up after yourself\n      if (!this._webGLCache.isCacheControlled) {\n        if (this.__lastRT) { this.__lastRT = undefined; }\n        if (this.__rtA) { this._webGLCache._killTextureObject(this.__rtA); }\n        if (this.__rtB) { this._webGLCache._killTextureObject(this.__rtB); }\n        if (this.target && this.target.cacheCanvas) { this._webGLCache._killTextureObject(this.target.cacheCanvas); }\n      }\n      // set the context to none and let the garbage collector get the rest when the canvas itself gets removed\n      this._webGLCache = false;\n    } else {\n      var stage = this.target.stage;\n      if (stage instanceof createjs.StageGL) {\n        stage.releaseTexture(this.target.cacheCanvas);\n      }\n    }\n\n    this.target = this.target.cacheCanvas = null;\n    this.cacheID = this._cacheDataURLID = this._cacheDataURL = undefined;\n    this.width = this.height = this.x = this.y = this.offX = this.offY = 0;\n    this.scale = 1;\n  };\n\n\t/**\n\t * Returns a data URL for the cache, or `null` if this display object is not cached.\n\t * Uses {{#crossLink \"BitmapCache/cacheID:property\"}}{{/crossLink}} to ensure a new data URL is not generated if the\n\t * cache has not changed.\n\t * @method getCacheDataURL\n\t * @return {String} The image data url for the cache.\n\t **/\n  p.getCacheDataURL = function () {\n    var cacheCanvas = this.target && this.target.cacheCanvas;\n    if (!cacheCanvas) { return null; }\n    if (this.cacheID != this._cacheDataURLID) {\n      this._cacheDataURLID = this.cacheID;\n      this._cacheDataURL = cacheCanvas.toDataURL ? cacheCanvas.toDataURL() : null;\t// incase function is\n    }\n    return this._cacheDataURL;\n  };\n\n\t/**\n\t * Use context2D drawing commands to display the cache canvas being used.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The context to draw into.\n\t * @return {Boolean} Whether the draw was handled successfully.\n\t **/\n  p.draw = function (ctx) {\n    if (!this.target) { return false; }\n    ctx.drawImage(this.target.cacheCanvas,\n      this.x + (this._filterOffX / this.scale), this.y + (this._filterOffY / this.scale),\n      this._drawWidth / this.scale, this._drawHeight / this.scale\n    );\n    return true;\n  };\n\n\t/**\n\t * Determine the bounds of the shape in local space.\n\t * @method getBounds\n\t * @returns {Rectangle}\n\t */\n  p.getBounds = function () {\n    var scale = this.scale;\n    return this._boundRect.setValues(\n      this._filterOffX / scale, this._filterOffY / scale,\n      this.width / scale, this.height / scale\n    );\n  };\n\n  // private methods:\n\t/**\n\t * Create or resize the invisible canvas/surface that is needed for the display object(s) to draw to,\n\t * and in turn be used in their stead when drawing. The surface is resized to the size defined\n\t * by the width and height, factoring in scaling and filters. Adjust them to adjust the output size.\n\t * @method _updateSurface\n\t * @protected\n\t **/\n  p._updateSurface = function () {\n    var surface;\n\n    if (!this._options || !this._options.useGL) {\n      surface = this.target.cacheCanvas;\n\n      // create it if it's missing\n      if (!surface) {\n        surface = this.target.cacheCanvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n      }\n\n      // now size it\n      surface.width = this._drawWidth;\n      surface.height = this._drawHeight;\n      return;\n    }\n\n    // create it if it's missing\n    if (!this._webGLCache) {\n      if (this._options.useGL === \"stage\") {\n        if (!(this.target.stage && this.target.stage.isWebGL)) {\n          var error = \"Cannot use 'stage' for cache because the object's parent stage is \";\n          error += this.target.stage ? \"non WebGL.\" : \"not set, please addChild to the correct stage.\";\n          throw error;\n        }\n        this.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n        this._webGLCache = this.target.stage;\n\n      } else if (this._options.useGL === \"new\") {\n        this.target.cacheCanvas = document.createElement(\"canvas\"); // we can turn off autopurge because we wont be making textures here\n        this._webGLCache = new createjs.StageGL(this.target.cacheCanvas, { antialias: true, transparent: true, autoPurge: -1 });\n        this._webGLCache.isCacheControlled = true;\t// use this flag to control stage sizing and final output\n\n      } else if (this._options.useGL instanceof createjs.StageGL) {\n        this.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n        this._webGLCache = this._options.useGL;\n        this._webGLCache.isCacheControlled = true;\t// use this flag to control stage sizing and final output\n\n      } else {\n        throw \"Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got \" + this._options.useGL;\n      }\n    }\n\n    // now size render surfaces\n    surface = this.target.cacheCanvas;\n    var stageGL = this._webGLCache;\n\n    // if we have a dedicated stage we've gotta size it\n    if (stageGL.isCacheControlled) {\n      surface.width = this._drawWidth;\n      surface.height = this._drawHeight;\n      stageGL.updateViewport(this._drawWidth, this._drawHeight);\n    }\n    if (this.target.filters) {\n      // with filters we can't tell how many we'll need but the most we'll ever need is two, so make them now\n      stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n      stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n    } else {\n      // without filters then we only need one RenderTexture, and that's only if its not a dedicated stage\n      if (!stageGL.isCacheControlled) {\n        stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n      }\n    }\n  };\n\n\t/**\n\t * Perform the cache draw out for context 2D now that the setup properties have been performed.\n\t * @method _drawToCache\n\t * @protected\n\t **/\n  p._drawToCache = function (compositeOperation) {\n    var surface = this.target.cacheCanvas;\n    var target = this.target;\n    var webGL = this._webGLCache;\n\n    if (webGL) {\n      webGL.cacheDraw(target, target.filters, this);\n\n      // we may of swapped around which element the surface is, so we re-fetch it\n      surface = this.target.cacheCanvas;\n\n      surface.width = this._drawWidth;\n      surface.height = this._drawHeight;\n    } else {\n      var ctx = surface.getContext(\"2d\");\n\n      if (!compositeOperation) {\n        ctx.clearRect(0, 0, this._drawWidth + 1, this._drawHeight + 1);\n      }\n\n      ctx.save();\n      ctx.globalCompositeOperation = compositeOperation;\n      ctx.setTransform(this.scale, 0, 0, this.scale, -this._filterOffX, -this._filterOffY);\n      ctx.translate(-this.x, -this.y);\n      target.draw(ctx, true);\n      ctx.restore();\n\n\n      if (target.filters && target.filters.length) {\n        this._applyFilters(ctx);\n      }\n    }\n    surface._invalid = true;\n  };\n\n\t/**\n\t * Work through every filter and apply its individual visual transformation.\n\t * @method _applyFilters\n\t * @protected\n\t **/\n  p._applyFilters = function (ctx) {\n    var filters = this.target.filters;\n\n    var w = this._drawWidth;\n    var h = this._drawHeight;\n\n    var data;\n\n    var i = 0, filter = filters[i];\n    do { // this is safe because we wouldn't be in apply filters without a filter count of at least 1\n      if (filter.usesContext) {\n        if (data) {\n          ctx.putImageData(data, 0, 0);\n          data = null;\n        }\n        filter.applyFilter(ctx, 0, 0, w, h);\n      } else {\n        if (!data) {\n          data = ctx.getImageData(0, 0, w, h);\n        }\n        filter._applyFilter(data);\n      }\n\n      // work through the multipass if it's there, otherwise move on\n      filter = filter._multiPass !== null ? filter._multiPass : filters[++i];\n    } while (filter);\n\n    //done\n    if (data) {\n      ctx.putImageData(data, 0, 0);\n    }\n  };\n\n  createjs.BitmapCache = BitmapCache;\n}());\n\n//##############################################################################\n// BlurFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Applies a box blur to DisplayObjects in context 2D and a Gaussian blur in webgl. Note that this filter is fairly\n\t * intensive, particularly if the quality is set higher than 1.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a red circle, and then applies a 5 pixel blur to it. It uses the {{#crossLink \"Filter/getBounds\"}}{{/crossLink}}\n\t * method to account for the spread that the blur causes.\n\t *\n\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t *\n\t *      var blurFilter = new createjs.BlurFilter(5, 5, 1);\n\t *      shape.filters = [blurFilter];\n\t *      var bounds = blurFilter.getBounds();\n\t *\n\t *      shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t * @class BlurFilter\n\t * @extends Filter\n\t * @constructor\n\t * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n\t * @param {Number} [blurY=0] The vertical blur radius in pixels.\n\t * @param {Number} [quality=1] The number of blur iterations.\n\t **/\n  function BlurFilter(blurX, blurY, quality) {\n    this.Filter_constructor();\n\n    // public properties:\n\t\t/**\n\t\t * Horizontal blur radius in pixels\n\t\t * @property blurX\n\t\t * @default 0\n\t\t * @type Number\n\t\t **/\n    this._blurX = blurX;\n    this._blurXTable = [];\n    this._lastBlurX = null;\n\n\t\t/**\n\t\t * Vertical blur radius in pixels\n\t\t * @property blurY\n\t\t * @default 0\n\t\t * @type Number\n\t\t **/\n    this._blurY = blurY;\n    this._blurYTable = [];\n    this._lastBlurY = null;\n\n\t\t/**\n\t\t * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n\t\t * smoother blur, but take twice as long to run.\n\t\t * @property quality\n\t\t * @default 1\n\t\t * @type Number\n\t\t **/\n    this._quality;\n    this._lastQuality = null;\n\n\t\t/**\n\t\t * This is a template to generate the shader for {{#crossLink FRAG_SHADER_BODY}}{{/crossLink}}\n\t\t */\n    this.FRAG_SHADER_TEMPLATE = (\n      \"uniform float xWeight[{{blurX}}];\" +\n      \"uniform float yWeight[{{blurY}}];\" +\n      \"uniform vec2 textureOffset;\" +\n      \"void main(void) {\" +\n      \"vec4 color = vec4(0.0);\" +\n\n      \"float xAdj = ({{blurX}}.0-1.0)/2.0;\" +\n      \"float yAdj = ({{blurY}}.0-1.0)/2.0;\" +\n      \"vec2 sampleOffset;\" +\n\n      \"for(int i=0; i<{{blurX}}; i++) {\" +\n      \"for(int j=0; j<{{blurY}}; j++) {\" +\n      \"sampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));\" +\n      \"color += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);\" +\n      \"}\" +\n      \"}\" +\n\n      \"gl_FragColor = color.rgba;\" +\n      \"}\"\n    );\n\n    // update the filter using the setters\n    if (isNaN(quality) || quality < 1) { quality = 1; }\n    this.setQuality(quality | 0);\n  }\n  var p = createjs.extend(BlurFilter, createjs.Filter);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  p.getBlurX = function () { return this._blurX; };\n  p.getBlurY = function () { return this._blurY; };\n  p.setBlurX = function (value) {\n    if (isNaN(value) || value < 0) { value = 0; }\n    this._blurX = value;\n  };\n  p.setBlurY = function (value) {\n    if (isNaN(value) || value < 0) { value = 0; }\n    this._blurY = value;\n  };\n  p.getQuality = function () { return this._quality; };\n  p.setQuality = function (value) {\n    if (isNaN(value) || value < 0) { value = 0; }\n    this._quality = value | 0;\n  };\n  p._getShader = function () {\n    var xChange = this._lastBlurX !== this._blurX;\n    var yChange = this._lastBlurY !== this._blurY;\n    var qChange = this._lastQuality !== this._quality;\n    if (xChange || yChange || qChange) {\n      if (xChange || qChange) { this._blurXTable = this._getTable(this._blurX * this._quality); }\n      if (yChange || qChange) { this._blurYTable = this._getTable(this._blurY * this._quality); }\n      this._updateShader();\n      this._lastBlurX = this._blurX;\n      this._lastBlurY = this._blurY;\n      this._lastQuality = this._quality;\n      return undefined; // force a rebuild\n    }\n    return this._compiledShader;\n  };\n  p._setShader = function () { this._compiledShader; };\n\n  try {\n    Object.defineProperties(p, {\n      blurX: { get: p.getBlurX, set: p.setBlurX },\n      blurY: { get: p.getBlurY, set: p.setBlurY },\n      quality: { get: p.getQuality, set: p.setQuality },\n      _builtShader: { get: p._getShader, set: p._setShader }\n    });\n  } catch (e) { console.log(e); }\n\n\t/**\n\t * Internal lookup function to create gaussian distribution.\n\t * @method _getTable\n\t * @param {Number} spread How many steps in the curve.\n\t * @return {Array<Number>} An array with Math.ceil(spread*2) entries with appropriately distributed weights.\n\t */\n  p._getTable = function (spread) {\n    var EDGE = 4.2;\n    if (spread <= 1) { return [1]; }\n\n    var result = [];\n    var count = Math.ceil(spread * 2);\n    count += (count % 2) ? 0 : 1;\n    var adjust = (count / 2) | 0;\n    for (var i = -adjust; i <= adjust; i++) {\n      var x = (i / adjust) * EDGE;\n      result.push(1 / Math.sqrt(2 * Math.PI) * Math.pow(Math.E, -(Math.pow(x, 2) / 4)));\n    }\n    var factor = result.reduce(function (a, b) { return a + b; });\n    return result.map(function (currentValue, index, array) { return currentValue / factor; });\n  };\n\n\t/**\n\t * Internal update function to create shader properties.\n\t * @method _updateShader\n\t */\n  p._updateShader = function () {\n    if (this._blurX === undefined || this._blurY === undefined) { return; }\n    var result = this.FRAG_SHADER_TEMPLATE;\n    result = result.replace(/\\{\\{blurX\\}\\}/g, (this._blurXTable.length).toFixed(0));\n    result = result.replace(/\\{\\{blurY\\}\\}/g, (this._blurYTable.length).toFixed(0));\n    this.FRAG_SHADER_BODY = result;\n  };\n\n  /** docced in super class **/\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    // load the normalized gaussian weight tables\n    gl.uniform1fv(\n      gl.getUniformLocation(shaderProgram, \"xWeight\"),\n      this._blurXTable\n    );\n    gl.uniform1fv(\n      gl.getUniformLocation(shaderProgram, \"yWeight\"),\n      this._blurYTable\n    );\n\n    // what is the size of a single pixel in -1, 1 (webGL) space\n    gl.uniform2f(\n      gl.getUniformLocation(shaderProgram, \"textureOffset\"),\n      2 / (stage._viewportWidth * this._quality), 2 / (stage._viewportHeight * this._quality)\n    );\n  };\n\n  // constants:\n\t/**\n\t * Array of multiply values for blur calculations.\n\t * @property MUL_TABLE\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n  BlurFilter.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\n\n\t/**\n\t * Array of shift values for blur calculations.\n\t * @property SHG_TABLE\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n  BlurFilter.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];\n\n  // public methods:\n  /** docced in super class **/\n  p.getBounds = function (rect) {\n    var x = this.blurX | 0, y = this.blurY | 0;\n    if (x <= 0 && y <= 0) { return rect; }\n    var q = Math.pow(this.quality, 0.2);\n    return (rect || new createjs.Rectangle()).pad(y * q + 1, x * q + 1, y * q + 1, x * q + 1);\n  };\n\n  /** docced in super class **/\n  p.clone = function () {\n    return new BlurFilter(this.blurX, this.blurY, this.quality);\n  };\n\n  /** docced in super class **/\n  p.toString = function () {\n    return \"[BlurFilter]\";\n  };\n\n\n  // private methods:\n\n  /** docced in super class **/\n  p._applyFilter = function (imageData) {\n    var radiusX = this._blurX >> 1;\n    if (isNaN(radiusX) || radiusX < 0) return false;\n    var radiusY = this._blurY >> 1;\n    if (isNaN(radiusY) || radiusY < 0) return false;\n    if (radiusX == 0 && radiusY == 0) return false;\n\n    var iterations = this.quality;\n    if (isNaN(iterations) || iterations < 1) iterations = 1;\n    iterations |= 0;\n    if (iterations > 3) iterations = 3;\n    if (iterations < 1) iterations = 1;\n\n    var px = imageData.data;\n    var x = 0, y = 0, i = 0, p = 0, yp = 0, yi = 0, yw = 0, r = 0, g = 0, b = 0, a = 0, pr = 0, pg = 0, pb = 0, pa = 0;\n\n    var divx = (radiusX + radiusX + 1) | 0;\n    var divy = (radiusY + radiusY + 1) | 0;\n    var w = imageData.width | 0;\n    var h = imageData.height | 0;\n\n    var w1 = (w - 1) | 0;\n    var h1 = (h - 1) | 0;\n    var rxp1 = (radiusX + 1) | 0;\n    var ryp1 = (radiusY + 1) | 0;\n\n    var ssx = { r: 0, b: 0, g: 0, a: 0 };\n    var sx = ssx;\n    for (i = 1; i < divx; i++) {\n      sx = sx.n = { r: 0, b: 0, g: 0, a: 0 };\n    }\n    sx.n = ssx;\n\n    var ssy = { r: 0, b: 0, g: 0, a: 0 };\n    var sy = ssy;\n    for (i = 1; i < divy; i++) {\n      sy = sy.n = { r: 0, b: 0, g: 0, a: 0 };\n    }\n    sy.n = ssy;\n\n    var si = null;\n\n\n    var mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n    var stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n    var mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n    var sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n\n    while (iterations-- > 0) {\n\n      yw = yi = 0;\n      var ms = mtx;\n      var ss = stx;\n      for (y = h; --y > -1;) {\n        r = rxp1 * (pr = px[(yi) | 0]);\n        g = rxp1 * (pg = px[(yi + 1) | 0]);\n        b = rxp1 * (pb = px[(yi + 2) | 0]);\n        a = rxp1 * (pa = px[(yi + 3) | 0]);\n\n        sx = ssx;\n\n        for (i = rxp1; --i > -1;) {\n          sx.r = pr;\n          sx.g = pg;\n          sx.b = pb;\n          sx.a = pa;\n          sx = sx.n;\n        }\n\n        for (i = 1; i < rxp1; i++) {\n          p = (yi + ((w1 < i ? w1 : i) << 2)) | 0;\n          r += (sx.r = px[p]);\n          g += (sx.g = px[p + 1]);\n          b += (sx.b = px[p + 2]);\n          a += (sx.a = px[p + 3]);\n\n          sx = sx.n;\n        }\n\n        si = ssx;\n        for (x = 0; x < w; x++) {\n          px[yi++] = (r * ms) >>> ss;\n          px[yi++] = (g * ms) >>> ss;\n          px[yi++] = (b * ms) >>> ss;\n          px[yi++] = (a * ms) >>> ss;\n\n          p = ((yw + ((p = x + radiusX + 1) < w1 ? p : w1)) << 2);\n\n          r -= si.r - (si.r = px[p]);\n          g -= si.g - (si.g = px[p + 1]);\n          b -= si.b - (si.b = px[p + 2]);\n          a -= si.a - (si.a = px[p + 3]);\n\n          si = si.n;\n\n        }\n        yw += w;\n      }\n\n      ms = mty;\n      ss = sty;\n      for (x = 0; x < w; x++) {\n        yi = (x << 2) | 0;\n\n        r = (ryp1 * (pr = px[yi])) | 0;\n        g = (ryp1 * (pg = px[(yi + 1) | 0])) | 0;\n        b = (ryp1 * (pb = px[(yi + 2) | 0])) | 0;\n        a = (ryp1 * (pa = px[(yi + 3) | 0])) | 0;\n\n        sy = ssy;\n        for (i = 0; i < ryp1; i++) {\n          sy.r = pr;\n          sy.g = pg;\n          sy.b = pb;\n          sy.a = pa;\n          sy = sy.n;\n        }\n\n        yp = w;\n\n        for (i = 1; i <= radiusY; i++) {\n          yi = (yp + x) << 2;\n\n          r += (sy.r = px[yi]);\n          g += (sy.g = px[yi + 1]);\n          b += (sy.b = px[yi + 2]);\n          a += (sy.a = px[yi + 3]);\n\n          sy = sy.n;\n\n          if (i < h1) {\n            yp += w;\n          }\n        }\n\n        yi = x;\n        si = ssy;\n        if (iterations > 0) {\n          for (y = 0; y < h; y++) {\n            p = yi << 2;\n            px[p + 3] = pa = (a * ms) >>> ss;\n            if (pa > 0) {\n              px[p] = ((r * ms) >>> ss);\n              px[p + 1] = ((g * ms) >>> ss);\n              px[p + 2] = ((b * ms) >>> ss);\n            } else {\n              px[p] = px[p + 1] = px[p + 2] = 0\n            }\n\n            p = (x + (((p = y + ryp1) < h1 ? p : h1) * w)) << 2;\n\n            r -= si.r - (si.r = px[p]);\n            g -= si.g - (si.g = px[p + 1]);\n            b -= si.b - (si.b = px[p + 2]);\n            a -= si.a - (si.a = px[p + 3]);\n\n            si = si.n;\n\n            yi += w;\n          }\n        } else {\n          for (y = 0; y < h; y++) {\n            p = yi << 2;\n            px[p + 3] = pa = (a * ms) >>> ss;\n            if (pa > 0) {\n              pa = 255 / pa;\n              px[p] = ((r * ms) >>> ss) * pa;\n              px[p + 1] = ((g * ms) >>> ss) * pa;\n              px[p + 2] = ((b * ms) >>> ss) * pa;\n            } else {\n              px[p] = px[p + 1] = px[p + 2] = 0\n            }\n\n            p = (x + (((p = y + ryp1) < h1 ? p : h1) * w)) << 2;\n\n            r -= si.r - (si.r = px[p]);\n            g -= si.g - (si.g = px[p + 1]);\n            b -= si.b - (si.b = px[p + 2]);\n            a -= si.a - (si.a = px[p + 3]);\n\n            si = si.n;\n\n            yi += w;\n          }\n        }\n      }\n\n    }\n    return true;\n  };\n\n  createjs.BlurFilter = createjs.promote(BlurFilter, \"Filter\");\n}());\n\n//##############################################################################\n// AlphaMapFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n\t * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n\t *\n\t * Generally, it is recommended that you use {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}, because it has much\n\t * better performance.\n\t *\n\t * <h4>Example</h4>\n\t * This example draws a red->blue box, caches it, and then uses the cache canvas as an alpha map on a 100x100 image.\n\t *\n\t *       var box = new createjs.Shape();\n\t *       box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n\t *       box.graphics.drawRect(0, 0, 100, 100);\n\t *       box.cache(0, 0, 100, 100);\n\t *\n\t *       var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n\t *       bmp.filters = [\n\t *           new createjs.AlphaMapFilter(box.cacheCanvas)\n\t *       ];\n\t *       bmp.cache(0, 0, 100, 100);\n\t *       stage.addChild(bmp);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n\t * @class AlphaMapFilter\n\t * @extends Filter\n\t * @constructor\n\t * @param {HTMLImageElement|HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n\t * result. This should be exactly the same dimensions as the target.\n\t **/\n  function AlphaMapFilter(alphaMap) {\n    this.Filter_constructor();\n\n    // public properties:\n\t\t/**\n\t\t * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n\t\t * dimensions as the target.\n\t\t * @property alphaMap\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t **/\n    this.alphaMap = alphaMap;\n\n\n    // private properties:\n\t\t/**\n\t\t * @property _alphaMap\n\t\t * @protected\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t **/\n    this._alphaMap = null;\n\n\t\t/**\n\t\t * @property _mapData\n\t\t * @protected\n\t\t * @type Uint8ClampedArray\n\t\t **/\n    this._mapData = null;\n    this._mapTexture = null;\n\n    this.FRAG_SHADER_BODY = (\n      \"uniform sampler2D uAlphaSampler;\" +\n\n      \"void main(void) {\" +\n      \"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n      \"vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\" +\n\n      // some image formats can have transparent white rgba(1,1,1, 0) when put on the GPU, this means we need a slight tweak\n      // using ceil ensure that the colour will be used so long as it exists but pure transparency will be treated black\n      \"gl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));\" +\n      \"}\"\n    );\n  }\n  var p = createjs.extend(AlphaMapFilter, createjs.Filter);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  /** docced in super class **/\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    if (!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n    stage.setTextureParams(gl);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.alphaMap);\n\n    gl.uniform1i(\n      gl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n      1\n    );\n  };\n\n  // public methods:\n  /** docced in super class **/\n  p.clone = function () {\n    var o = new AlphaMapFilter(this.alphaMap);\n    o._alphaMap = this._alphaMap;\n    o._mapData = this._mapData;\n    return o;\n  };\n\n  /** docced in super class **/\n  p.toString = function () {\n    return \"[AlphaMapFilter]\";\n  };\n\n\n  // private methods:\n  /** docced in super class **/\n  p._applyFilter = function (imageData) {\n    if (!this.alphaMap) { return true; }\n    if (!this._prepAlphaMap()) { return false; }\n\n    // TODO: update to support scenarios where the target has different dimensions.\n    var data = imageData.data;\n    var map = this._mapData;\n    for (var i = 0, l = data.length; i < l; i += 4) { data[i + 3] = map[i] || 0; }\n\n    return true;\n  };\n\n\t/**\n\t * @method _prepAlphaMap\n\t * @protected\n\t **/\n  p._prepAlphaMap = function () {\n    if (!this.alphaMap) { return false; }\n    if (this.alphaMap == this._alphaMap && this._mapData) { return true; }\n\n    this._mapData = null;\n    var map = this._alphaMap = this.alphaMap;\n    var canvas = map;\n    var ctx;\n    if (map instanceof HTMLCanvasElement) {\n      ctx = canvas.getContext(\"2d\");\n    } else {\n      canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n      canvas.width = map.width;\n      canvas.height = map.height;\n      ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(map, 0, 0);\n    }\n\n    try {\n      var imgData = ctx.getImageData(0, 0, map.width, map.height);\n    } catch (e) {\n      //if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n      return false;\n    }\n\n    this._mapData = imgData.data;\n    return true;\n  };\n\n\n  createjs.AlphaMapFilter = createjs.promote(AlphaMapFilter, \"Filter\");\n}());\n\n//##############################################################################\n// AlphaMaskFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n\t * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n\t * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n\t * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n\t *\n\t * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n\t *\n\t * <h4>Example</h4>\n\t * This example draws a gradient box, then caches it and uses the \"cacheCanvas\" as the alpha mask on a 100x100 image.\n\t *\n\t *      var box = new createjs.Shape();\n\t *      box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n\t *      box.graphics.drawRect(0, 0, 100, 100);\n\t *      box.cache(0, 0, 100, 100);\n\t *\n\t *      var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n\t *      bmp.filters = [\n\t *          new createjs.AlphaMaskFilter(box.cacheCanvas)\n\t *      ];\n\t *      bmp.cache(0, 0, 100, 100);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n\t * @class AlphaMaskFilter\n\t * @extends Filter\n\t * @constructor\n\t * @param {HTMLImageElement|HTMLCanvasElement} mask\n\t **/\n  function AlphaMaskFilter(mask) {\n    this.Filter_constructor();\n\n    // public properties:\n\t\t/**\n\t\t * The image (or canvas) to use as the mask.\n\t\t * @property mask\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t **/\n    this.mask = mask;\n\n    /** docced in super class **/\n    this.usesContext = true;\n\n    this.FRAG_SHADER_BODY = (\n      \"uniform sampler2D uAlphaSampler;\" +\n\n      \"void main(void) {\" +\n      \"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n      \"vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\" +\n\n      \"gl_FragColor = vec4(color.rgb, color.a * alphaMap.a);\" +\n      \"}\"\n    );\n  }\n  var p = createjs.extend(AlphaMaskFilter, createjs.Filter);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  /** docced in super class **/\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    if (!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n    stage.setTextureParams(gl);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.mask);\n\n    gl.uniform1i(\n      gl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n      1\n    );\n  };\n\n  // public methods:\n\t/**\n\t * Applies the filter to the specified context.\n\t *\n\t * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters\n\t * correctly.</strong>\n\t * @method applyFilter\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t **/\n  p.applyFilter = function (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n    if (!this.mask) { return true; }\n    targetCtx = targetCtx || ctx;\n    if (targetX == null) { targetX = x; }\n    if (targetY == null) { targetY = y; }\n\n    targetCtx.save();\n    if (ctx != targetCtx) {\n      // TODO: support targetCtx and targetX/Y\n      // clearRect, then draw the ctx in?\n      return false;\n    }\n\n    targetCtx.globalCompositeOperation = \"destination-in\";\n    targetCtx.drawImage(this.mask, targetX, targetY);\n    targetCtx.restore();\n    return true;\n  };\n\n  /** docced in super class **/\n  p.clone = function () {\n    return new AlphaMaskFilter(this.mask);\n  };\n\n  /** docced in super class **/\n  p.toString = function () {\n    return \"[AlphaMaskFilter]\";\n  };\n\n\n  createjs.AlphaMaskFilter = createjs.promote(AlphaMaskFilter, \"Filter\");\n}());\n\n//##############################################################################\n// ColorFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Applies a color transform to DisplayObjects.\n\t *\n\t * <h4>Example</h4>\n\t * This example draws a red circle, and then transforms it to Blue. This is accomplished by multiplying all the channels\n\t * to 0 (except alpha, which is set to 1), and then adding 255 to the blue channel.\n\t *\n\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t *\n\t *      shape.filters = [\n\t *          new createjs.ColorFilter(0,0,0,1, 0,0,255,0)\n\t *      ];\n\t *      shape.cache(-50, -50, 100, 100);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t * @class ColorFilter\n\t * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n\t * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n\t * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n\t * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n\t * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n\t * between -255 and 255.\n\t * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @constructor\n\t * @extends Filter\n\t **/\n  function ColorFilter(redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset) {\n    this.Filter_constructor();\n\n    // public properties:\n\t\t/**\n\t\t * Red channel multiplier.\n\t\t * @property redMultiplier\n\t\t * @type Number\n\t\t **/\n    this.redMultiplier = redMultiplier != null ? redMultiplier : 1;\n\n\t\t/**\n\t\t * Green channel multiplier.\n\t\t * @property greenMultiplier\n\t\t * @type Number\n\t\t **/\n    this.greenMultiplier = greenMultiplier != null ? greenMultiplier : 1;\n\n\t\t/**\n\t\t * Blue channel multiplier.\n\t\t * @property blueMultiplier\n\t\t * @type Number\n\t\t **/\n    this.blueMultiplier = blueMultiplier != null ? blueMultiplier : 1;\n\n\t\t/**\n\t\t * Alpha channel multiplier.\n\t\t * @property alphaMultiplier\n\t\t * @type Number\n\t\t **/\n    this.alphaMultiplier = alphaMultiplier != null ? alphaMultiplier : 1;\n\n\t\t/**\n\t\t * Red channel offset (added to value).\n\t\t * @property redOffset\n\t\t * @type Number\n\t\t **/\n    this.redOffset = redOffset || 0;\n\n\t\t/**\n\t\t * Green channel offset (added to value).\n\t\t * @property greenOffset\n\t\t * @type Number\n\t\t **/\n    this.greenOffset = greenOffset || 0;\n\n\t\t/**\n\t\t * Blue channel offset (added to value).\n\t\t * @property blueOffset\n\t\t * @type Number\n\t\t **/\n    this.blueOffset = blueOffset || 0;\n\n\t\t/**\n\t\t * Alpha channel offset (added to value).\n\t\t * @property alphaOffset\n\t\t * @type Number\n\t\t **/\n    this.alphaOffset = alphaOffset || 0;\n\n    this.FRAG_SHADER_BODY = (\n      \"uniform vec4 uColorMultiplier;\" +\n      \"uniform vec4 uColorOffset;\" +\n\n      \"void main(void) {\" +\n      \"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n\n      \"gl_FragColor = (color * uColorMultiplier) + uColorOffset;\" +\n      \"}\"\n    );\n\n  }\n  var p = createjs.extend(ColorFilter, createjs.Filter);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n  // public methods:\n  /** docced in super class **/\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    gl.uniform4f(\n      gl.getUniformLocation(shaderProgram, \"uColorMultiplier\"),\n      this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier\n    );\n\n    gl.uniform4f(\n      gl.getUniformLocation(shaderProgram, \"uColorOffset\"),\n      this.redOffset / 255, this.greenOffset / 255, this.blueOffset / 255, this.alphaOffset / 255\n    );\n  };\n\n  /** docced in super class **/\n  p.toString = function () {\n    return \"[ColorFilter]\";\n  };\n\n  /** docced in super class **/\n  p.clone = function () {\n    return new ColorFilter(\n      this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier,\n      this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset\n    );\n  };\n\n  // private methods:\n  /** docced in super class **/\n  p._applyFilter = function (imageData) {\n    var data = imageData.data;\n    var l = data.length;\n    for (var i = 0; i < l; i += 4) {\n      data[i] = data[i] * this.redMultiplier + this.redOffset;\n      data[i + 1] = data[i + 1] * this.greenMultiplier + this.greenOffset;\n      data[i + 2] = data[i + 2] * this.blueMultiplier + this.blueOffset;\n      data[i + 3] = data[i + 3] * this.alphaMultiplier + this.alphaOffset;\n    }\n    return true;\n  };\n\n\n  createjs.ColorFilter = createjs.promote(ColorFilter, \"Filter\");\n}());\n\n//##############################################################################\n// ColorMatrix.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Provides helper functions for assembling a matrix for use with the {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}.\n\t * Most methods return the instance to facilitate chained calls.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myColorMatrix.adjustHue(20).adjustBrightness(50);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters, or {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}\n\t * for an example of how to use ColorMatrix to change a DisplayObject's color.\n\t * @class ColorMatrix\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @constructor\n\t **/\n  function ColorMatrix(brightness, contrast, saturation, hue) {\n    this.setColor(brightness, contrast, saturation, hue);\n  }\n  var p = ColorMatrix.prototype;\n\n  // constants:\n\t/**\n\t * Array of delta values for contrast calculations.\n\t * @property DELTA_INDEX\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n  ColorMatrix.DELTA_INDEX = [\n    0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11,\n    0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24,\n    0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42,\n    0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68,\n    0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98,\n    1.0, 1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54,\n    1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0, 2.12, 2.25,\n    2.37, 2.50, 2.62, 2.75, 2.87, 3.0, 3.2, 3.4, 3.6, 3.8,\n    4.0, 4.3, 4.7, 4.9, 5.0, 5.5, 6.0, 6.5, 6.8, 7.0,\n    7.3, 7.5, 7.8, 8.0, 8.4, 8.7, 9.0, 9.4, 9.6, 9.8,\n    10.0\n  ];\n\n\t/**\n\t * Identity matrix values.\n\t * @property IDENTITY_MATRIX\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n  ColorMatrix.IDENTITY_MATRIX = [\n    1, 0, 0, 0, 0,\n    0, 1, 0, 0, 0,\n    0, 0, 1, 0, 0,\n    0, 0, 0, 1, 0,\n    0, 0, 0, 0, 1\n  ];\n\n\t/**\n\t * The constant length of a color matrix.\n\t * @property LENGTH\n\t * @type Number\n\t * @protected\n\t * @static\n\t **/\n  ColorMatrix.LENGTH = ColorMatrix.IDENTITY_MATRIX.length;\n\n\n  // public methods:\n\t/**\n\t * Resets the instance with the specified values.\n\t * @method setColor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n  p.setColor = function (brightness, contrast, saturation, hue) {\n    return this.reset().adjustColor(brightness, contrast, saturation, hue);\n  };\n\n\t/**\n\t * Resets the matrix to identity values.\n\t * @method reset\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n  p.reset = function () {\n    return this.copy(ColorMatrix.IDENTITY_MATRIX);\n  };\n\n\t/**\n\t * Shortcut method to adjust brightness, contrast, saturation and hue.\n\t * Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n\t * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n\t * @method adjustColor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.adjustColor = function (brightness, contrast, saturation, hue) {\n    this.adjustHue(hue);\n    this.adjustContrast(contrast);\n    this.adjustBrightness(brightness);\n    return this.adjustSaturation(saturation);\n  };\n\n\t/**\n\t * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n\t * Positive values will make the image brighter, negative values will make it darker.\n\t * @method adjustBrightness\n\t * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.adjustBrightness = function (value) {\n    if (value == 0 || isNaN(value)) { return this; }\n    value = this._cleanValue(value, 255);\n    this._multiplyMatrix([\n      1, 0, 0, 0, value,\n      0, 1, 0, 0, value,\n      0, 0, 1, 0, value,\n      0, 0, 0, 1, 0,\n      0, 0, 0, 0, 1\n    ]);\n    return this;\n  };\n\n\t/**\n\t * Adjusts the contrast of pixel color.\n\t * Positive values will increase contrast, negative values will decrease contrast.\n\t * @method adjustContrast\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.adjustContrast = function (value) {\n    if (value == 0 || isNaN(value)) { return this; }\n    value = this._cleanValue(value, 100);\n    var x;\n    if (value < 0) {\n      x = 127 + value / 100 * 127;\n    } else {\n      x = value % 1;\n      if (x == 0) {\n        x = ColorMatrix.DELTA_INDEX[value];\n      } else {\n        x = ColorMatrix.DELTA_INDEX[(value << 0)] * (1 - x) + ColorMatrix.DELTA_INDEX[(value << 0) + 1] * x; // use linear interpolation for more granularity.\n      }\n      x = x * 127 + 127;\n    }\n    this._multiplyMatrix([\n      x / 127, 0, 0, 0, 0.5 * (127 - x),\n      0, x / 127, 0, 0, 0.5 * (127 - x),\n      0, 0, x / 127, 0, 0.5 * (127 - x),\n      0, 0, 0, 1, 0,\n      0, 0, 0, 0, 1\n    ]);\n    return this;\n  };\n\n\t/**\n\t * Adjusts the color saturation of the pixel.\n\t * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n\t * @method adjustSaturation\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.adjustSaturation = function (value) {\n    if (value == 0 || isNaN(value)) { return this; }\n    value = this._cleanValue(value, 100);\n    var x = 1 + ((value > 0) ? 3 * value / 100 : value / 100);\n    var lumR = 0.3086;\n    var lumG = 0.6094;\n    var lumB = 0.0820;\n    this._multiplyMatrix([\n      lumR * (1 - x) + x, lumG * (1 - x), lumB * (1 - x), 0, 0,\n      lumR * (1 - x), lumG * (1 - x) + x, lumB * (1 - x), 0, 0,\n      lumR * (1 - x), lumG * (1 - x), lumB * (1 - x) + x, 0, 0,\n      0, 0, 0, 1, 0,\n      0, 0, 0, 0, 1\n    ]);\n    return this;\n  };\n\n\n\t/**\n\t * Adjusts the hue of the pixel color.\n\t * @method adjustHue\n\t * @param {Number} value A value between -180 & 180.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.adjustHue = function (value) {\n    if (value == 0 || isNaN(value)) { return this; }\n    value = this._cleanValue(value, 180) / 180 * Math.PI;\n    var cosVal = Math.cos(value);\n    var sinVal = Math.sin(value);\n    var lumR = 0.213;\n    var lumG = 0.715;\n    var lumB = 0.072;\n    this._multiplyMatrix([\n      lumR + cosVal * (1 - lumR) + sinVal * (-lumR), lumG + cosVal * (-lumG) + sinVal * (-lumG), lumB + cosVal * (-lumB) + sinVal * (1 - lumB), 0, 0,\n      lumR + cosVal * (-lumR) + sinVal * (0.143), lumG + cosVal * (1 - lumG) + sinVal * (0.140), lumB + cosVal * (-lumB) + sinVal * (-0.283), 0, 0,\n      lumR + cosVal * (-lumR) + sinVal * (-(1 - lumR)), lumG + cosVal * (-lumG) + sinVal * (lumG), lumB + cosVal * (1 - lumB) + sinVal * (lumB), 0, 0,\n      0, 0, 0, 1, 0,\n      0, 0, 0, 0, 1\n    ]);\n    return this;\n  };\n\n\t/**\n\t * Concatenates (multiplies) the specified matrix with this one.\n\t * @method concat\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.concat = function (matrix) {\n    matrix = this._fixMatrix(matrix);\n    if (matrix.length != ColorMatrix.LENGTH) { return this; }\n    this._multiplyMatrix(matrix);\n    return this;\n  };\n\n\t/**\n\t * Returns a clone of this ColorMatrix.\n\t * @method clone\n\t * @return {ColorMatrix} A clone of this ColorMatrix.\n\t **/\n  p.clone = function () {\n    return (new ColorMatrix()).copy(this);\n  };\n\n\t/**\n\t * Return a length 25 (5x5) array instance containing this matrix's values.\n\t * @method toArray\n\t * @return {Array} An array holding this matrix's values.\n\t **/\n  p.toArray = function () {\n    var arr = [];\n    for (var i = 0, l = ColorMatrix.LENGTH; i < l; i++) {\n      arr[i] = this[i];\n    }\n    return arr;\n  };\n\n\t/**\n\t * Copy the specified matrix's values to this matrix.\n\t * @method copy\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n  p.copy = function (matrix) {\n    var l = ColorMatrix.LENGTH;\n    for (var i = 0; i < l; i++) {\n      this[i] = matrix[i];\n    }\n    return this;\n  };\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n  p.toString = function () {\n    return \"[ColorMatrix]\";\n  };\n\n\n  // private methods:\n\t/**\n\t * @method _multiplyMatrix\n\t * @param {Array} matrix\n\t * @protected\n\t **/\n  p._multiplyMatrix = function (matrix) {\n    var i, j, k, col = [];\n\n    for (i = 0; i < 5; i++) {\n      for (j = 0; j < 5; j++) {\n        col[j] = this[j + i * 5];\n      }\n      for (j = 0; j < 5; j++) {\n        var val = 0;\n        for (k = 0; k < 5; k++) {\n          val += matrix[j + k * 5] * col[k];\n        }\n        this[j + i * 5] = val;\n      }\n    }\n  };\n\n\t/**\n\t * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n\t * @method _cleanValue\n\t * @param {Number} value The raw number\n\t * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n\t * @protected\n\t **/\n  p._cleanValue = function (value, limit) {\n    return Math.min(limit, Math.max(-limit, value));\n  };\n\n\t/**\n\t * Makes sure matrixes are 5x5 (25 long).\n\t * @method _fixMatrix\n\t * @param {Array} matrix\n\t * @protected\n\t **/\n  p._fixMatrix = function (matrix) {\n    if (matrix instanceof ColorMatrix) { matrix = matrix.toArray(); }\n    if (matrix.length < ColorMatrix.LENGTH) {\n      matrix = matrix.slice(0, matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length, ColorMatrix.LENGTH));\n    } else if (matrix.length > ColorMatrix.LENGTH) {\n      matrix = matrix.slice(0, ColorMatrix.LENGTH);\n    }\n    return matrix;\n  };\n\n\n  createjs.ColorMatrix = ColorMatrix;\n}());\n\n//##############################################################################\n// ColorMatrixFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n\t * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n\t * {{#crossLink \"ColorMatrix\"}}{{/crossLink}} for more information on changing colors. For an easier color transform,\n\t * consider the {{#crossLink \"ColorFilter\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a red circle, inverts its hue, and then saturates it to brighten it up.\n\t *\n\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t *\n\t *      var matrix = new createjs.ColorMatrix().adjustHue(180).adjustSaturation(100);\n\t *      shape.filters = [\n\t *          new createjs.ColorMatrixFilter(matrix)\n\t *      ];\n\t *\n\t *      shape.cache(-50, -50, 100, 100);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t * @class ColorMatrixFilter\n\t * @constructor\n\t * @extends Filter\n\t * @param {Array | ColorMatrix} matrix A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t * class.\n\t **/\n  function ColorMatrixFilter(matrix) {\n    this.Filter_constructor();\n\n    // public properties:\n\t\t/**\n\t\t * A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t\t * @property matrix\n\t\t * @type Array | ColorMatrix\n\t\t **/\n    this.matrix = matrix;\n\n    this.FRAG_SHADER_BODY = (\n      \"uniform mat4 uColorMatrix;\" +\n      \"uniform vec4 uColorMatrixOffset;\" +\n\n      \"void main(void) {\" +\n      \"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n\n      \"mat4 m = uColorMatrix;\" +\n      \"vec4 newColor = vec4(0,0,0,0);\" +\n      \"newColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];\" +\n      \"newColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];\" +\n      \"newColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];\" +\n      \"newColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];\" +\n\n      \"gl_FragColor = newColor + uColorMatrixOffset;\" +\n      \"}\"\n    );\n  }\n  var p = createjs.extend(ColorMatrixFilter, createjs.Filter);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  /** docced in super class **/\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    var mat = this.matrix;\n    var colorMatrix = new Float32Array([\n      mat[0], mat[1], mat[2], mat[3],\n      mat[5], mat[6], mat[7], mat[8],\n      mat[10], mat[11], mat[12], mat[13],\n      mat[15], mat[16], mat[17], mat[18]\n    ]);\n\n    gl.uniformMatrix4fv(\n      gl.getUniformLocation(shaderProgram, \"uColorMatrix\"),\n      false, colorMatrix\n    );\n    gl.uniform4f(\n      gl.getUniformLocation(shaderProgram, \"uColorMatrixOffset\"),\n      mat[4] / 255, mat[9] / 255, mat[14] / 255, mat[19] / 255\n    );\n  };\n\n  // public methods:\n  /** docced in super class **/\n  p.toString = function () {\n    return \"[ColorMatrixFilter]\";\n  };\n\n  /** docced in super class **/\n  p.clone = function () {\n    return new ColorMatrixFilter(this.matrix);\n  };\n\n  // private methods:\n  /** docced in super class **/\n  p._applyFilter = function (imageData) {\n    var data = imageData.data;\n    var l = data.length;\n    var r, g, b, a;\n    var mtx = this.matrix;\n    var m0 = mtx[0], m1 = mtx[1], m2 = mtx[2], m3 = mtx[3], m4 = mtx[4];\n    var m5 = mtx[5], m6 = mtx[6], m7 = mtx[7], m8 = mtx[8], m9 = mtx[9];\n    var m10 = mtx[10], m11 = mtx[11], m12 = mtx[12], m13 = mtx[13], m14 = mtx[14];\n    var m15 = mtx[15], m16 = mtx[16], m17 = mtx[17], m18 = mtx[18], m19 = mtx[19];\n\n    for (var i = 0; i < l; i += 4) {\n      r = data[i];\n      g = data[i + 1];\n      b = data[i + 2];\n      a = data[i + 3];\n      data[i] = r * m0 + g * m1 + b * m2 + a * m3 + m4; // red\n      data[i + 1] = r * m5 + g * m6 + b * m7 + a * m8 + m9; // green\n      data[i + 2] = r * m10 + g * m11 + b * m12 + a * m13 + m14; // blue\n      data[i + 3] = r * m15 + g * m16 + b * m17 + a * m18 + m19; // alpha\n    }\n    return true;\n  };\n\n  createjs.ColorMatrixFilter = createjs.promote(ColorMatrixFilter, \"Filter\");\n}());\n\n//##############################################################################\n// Touch.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\n  // constructor:\n\t/**\n * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n *\n * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n *\n * <h4>Example</h4>\n *\n *      var stage = new createjs.Stage(\"canvasId\");\n *      createjs.Touch.enable(stage);\n *\n * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n *\n *      createjs.Touch.disable(stage);\n *\n * @class Touch\n * @static\n **/\n  function Touch() {\n    throw \"Touch cannot be instantiated\";\n  }\n\n\n  // public static methods:\n\t/**\n\t * Returns `true` if touch is supported in the current browser.\n\t * @method isSupported\n\t * @return {Boolean} Indicates whether touch is supported in the current browser.\n\t * @static\n\t **/\n  Touch.isSupported = function () {\n    return !!(('ontouchstart' in window) // iOS & Android\n      || (window.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0) // IE10\n      || (window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0)); // IE11+\n  };\n\n\t/**\n\t * Enables touch interaction for the specified EaselJS {{#crossLink \"Stage\"}}{{/crossLink}}. Currently supports iOS\n\t * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n\t * multi-touch modes. Extends the EaselJS {{#crossLink \"MouseEvent\"}}{{/crossLink}} model, but without support for\n\t * double click or over/out events. See the MouseEvent {{#crossLink \"MouseEvent/pointerId:property\"}}{{/crossLink}}\n\t * for more information.\n\t * @method enable\n\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to enable touch on.\n\t * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n\t * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n\t * allowed when the user is interacting with the target canvas.\n\t * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n\t * @static\n\t **/\n  Touch.enable = function (stage, singleTouch, allowDefault) {\n    if (!stage || !stage.canvas || !Touch.isSupported()) { return false; }\n    if (stage.__touch) { return true; }\n\n    // inject required properties on stage:\n    stage.__touch = { pointers: {}, multitouch: !singleTouch, preventDefault: !allowDefault, count: 0 };\n\n    // note that in the future we may need to disable the standard mouse event model before adding\n    // these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n    if ('ontouchstart' in window) { Touch._IOS_enable(stage); }\n    else if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_enable(stage); }\n    return true;\n  };\n\n\t/**\n\t * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n\t * @method disable\n\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to disable touch on.\n\t * @static\n\t **/\n  Touch.disable = function (stage) {\n    if (!stage) { return; }\n    if ('ontouchstart' in window) { Touch._IOS_disable(stage); }\n    else if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_disable(stage); }\n\n    delete stage.__touch;\n  };\n\n\n  // Private static methods:\n\t/**\n\t * @method _IOS_enable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n  Touch._IOS_enable = function (stage) {\n    var canvas = stage.canvas;\n    var f = stage.__touch.f = function (e) { Touch._IOS_handleEvent(stage, e); };\n    canvas.addEventListener(\"touchstart\", f, false);\n    canvas.addEventListener(\"touchmove\", f, false);\n    canvas.addEventListener(\"touchend\", f, false);\n    canvas.addEventListener(\"touchcancel\", f, false);\n  };\n\n\t/**\n\t * @method _IOS_disable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n  Touch._IOS_disable = function (stage) {\n    var canvas = stage.canvas;\n    if (!canvas) { return; }\n    var f = stage.__touch.f;\n    canvas.removeEventListener(\"touchstart\", f, false);\n    canvas.removeEventListener(\"touchmove\", f, false);\n    canvas.removeEventListener(\"touchend\", f, false);\n    canvas.removeEventListener(\"touchcancel\", f, false);\n  };\n\n\t/**\n\t * @method _IOS_handleEvent\n\t * @param {Stage} stage\n\t * @param {Object} e The event to handle\n\t * @protected\n\t * @static\n\t **/\n  Touch._IOS_handleEvent = function (stage, e) {\n    if (!stage) { return; }\n    if (stage.__touch.preventDefault) { e.preventDefault && e.preventDefault(); }\n    var touches = e.changedTouches;\n    var type = e.type;\n    for (var i = 0, l = touches.length; i < l; i++) {\n      var touch = touches[i];\n      var id = touch.identifier;\n      if (touch.target != stage.canvas) { continue; }\n\n      if (type == \"touchstart\") {\n        this._handleStart(stage, id, e, touch.pageX, touch.pageY);\n      } else if (type == \"touchmove\") {\n        this._handleMove(stage, id, e, touch.pageX, touch.pageY);\n      } else if (type == \"touchend\" || type == \"touchcancel\") {\n        this._handleEnd(stage, id, e);\n      }\n    }\n  };\n\n\t/**\n\t * @method _IE_enable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n  Touch._IE_enable = function (stage) {\n    var canvas = stage.canvas;\n    var f = stage.__touch.f = function (e) { Touch._IE_handleEvent(stage, e); };\n\n    if (window.navigator[\"pointerEnabled\"] === undefined) {\n      canvas.addEventListener(\"MSPointerDown\", f, false);\n      window.addEventListener(\"MSPointerMove\", f, false);\n      window.addEventListener(\"MSPointerUp\", f, false);\n      window.addEventListener(\"MSPointerCancel\", f, false);\n      if (stage.__touch.preventDefault) { canvas.style.msTouchAction = \"none\"; }\n    } else {\n      canvas.addEventListener(\"pointerdown\", f, false);\n      window.addEventListener(\"pointermove\", f, false);\n      window.addEventListener(\"pointerup\", f, false);\n      window.addEventListener(\"pointercancel\", f, false);\n      if (stage.__touch.preventDefault) { canvas.style.touchAction = \"none\"; }\n\n    }\n    stage.__touch.activeIDs = {};\n  };\n\n\t/**\n\t * @method _IE_disable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n  Touch._IE_disable = function (stage) {\n    var f = stage.__touch.f;\n\n    if (window.navigator[\"pointerEnabled\"] === undefined) {\n      window.removeEventListener(\"MSPointerMove\", f, false);\n      window.removeEventListener(\"MSPointerUp\", f, false);\n      window.removeEventListener(\"MSPointerCancel\", f, false);\n      if (stage.canvas) {\n        stage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n      }\n    } else {\n      window.removeEventListener(\"pointermove\", f, false);\n      window.removeEventListener(\"pointerup\", f, false);\n      window.removeEventListener(\"pointercancel\", f, false);\n      if (stage.canvas) {\n        stage.canvas.removeEventListener(\"pointerdown\", f, false);\n      }\n    }\n  };\n\n\t/**\n\t * @method _IE_handleEvent\n\t * @param {Stage} stage\n\t * @param {Object} e The event to handle.\n\t * @protected\n\t * @static\n\t **/\n  Touch._IE_handleEvent = function (stage, e) {\n    if (!stage) { return; }\n    if (stage.__touch.preventDefault) { e.preventDefault && e.preventDefault(); }\n    var type = e.type;\n    var id = e.pointerId;\n    var ids = stage.__touch.activeIDs;\n\n    if (type == \"MSPointerDown\" || type == \"pointerdown\") {\n      if (e.srcElement != stage.canvas) { return; }\n      ids[id] = true;\n      this._handleStart(stage, id, e, e.pageX, e.pageY);\n    } else if (ids[id]) { // it's an id we're watching\n      if (type == \"MSPointerMove\" || type == \"pointermove\") {\n        this._handleMove(stage, id, e, e.pageX, e.pageY);\n      } else if (type == \"MSPointerUp\" || type == \"MSPointerCancel\"\n        || type == \"pointerup\" || type == \"pointercancel\") {\n        delete (ids[id]);\n        this._handleEnd(stage, id, e);\n      }\n    }\n  };\n\n\t/**\n\t * @method _handleStart\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t **/\n  Touch._handleStart = function (stage, id, e, x, y) {\n    var props = stage.__touch;\n    if (!props.multitouch && props.count) { return; }\n    var ids = props.pointers;\n    if (ids[id]) { return; }\n    ids[id] = true;\n    props.count++;\n    stage._handlePointerDown(id, e, x, y);\n  };\n\n\t/**\n\t * @method _handleMove\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t **/\n  Touch._handleMove = function (stage, id, e, x, y) {\n    if (!stage.__touch.pointers[id]) { return; }\n    stage._handlePointerMove(id, e, x, y);\n  };\n\n\t/**\n\t * @method _handleEnd\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @protected\n\t **/\n  Touch._handleEnd = function (stage, id, e) {\n    // TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n    var props = stage.__touch;\n    var ids = props.pointers;\n    if (!ids[id]) { return; }\n    props.count--;\n    stage._handlePointerUp(id, e, true);\n    delete (ids[id]);\n  };\n\n\n  createjs.Touch = Touch;\n}());\n\n//##############################################################################\n// version.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n  \"use strict\";\n\n\t/**\n\t * Static class holding library specific information such as the version and buildDate of\n\t * the library.\n\t * @class EaselJS\n\t **/\n  var s = createjs.EaselJS = createjs.EaselJS || {};\n\n\t/**\n\t * The version string for this release.\n\t * @property version\n\t * @type String\n\t * @static\n\t **/\n  s.version = /*=version*/\"NEXT\"; // injected by build process\n\n\t/**\n\t * The build date for this release in UTC format.\n\t * @property buildDate\n\t * @type String\n\t * @static\n\t **/\n  s.buildDate = /*=date*/\"Thu, 21 Dec 2017 18:11:04 GMT\"; // injected by build process\n\n})();","module.exports = { \"default\": require(\"core-js/library/fn/object/define-properties\"), __esModule: true };","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n","\n\nimport './libs/ease'\nimport Player from './player/index'\nimport Boss from './npc/boss'\nimport BackGround from './runtime/background'\nimport GameInfo   from './runtime/gameinfo'\nimport Music      from './runtime/music'\nimport config from '@/config'\n\nconst screenWidth = 480\nconst screenHeight = 640\n\n\n\n\nconst levels=\n[\n  {name:'等级1',player:5,boss:[10,5,2]},\n  {name:'等级2',player:10,boss:[20,10,4]},\n  {name:'等级3',player:20,boss:[40,20,8]},\n  {name:'等级4',player:40,boss:[80,40,16]},\n  {name:'等级5',player:80,boss:[160,80,32]},\n  {name:'等级6',player:160,boss:[320,160,64]},\n]\n;\n/**\n * 游戏主函数\n */\nexport default class Main {\n  constructor(canvas) {\n    // wx.setPreferredFramesPerSecond(60);\n    this.canvas=canvas;\n    this.select_level=0;\n    this.frame=0;\n    this.score=0;\n    this.defance=0;\n    this.music= new Music();\n    createjs.Ticker.setFPS(60);\n    createjs.Ticker.timingMode = createjs.Ticker.RAF_SYNCHED;\n    \n\n    levels.forEach((l,i)=>{\n\n      let b=document.createElement('button');\n      b.innerHTML=l.name;\n      document.querySelector('#appC').append(b);\n      b.addEventListener('click',()=>{this.select_level=i;this.init()});\n\n    });\n\n\n\n    this.init();\n\n    window.requestAnimationFrame(\n      this.TimerHandel.bind(this),\n      this.canvas\n    );\n\n\n\n    window.addEventListener('keydown',(e)=>{\n      if (e.key==\"a\") {\n        if (alock) {\n          return ;\n        }\n        alock=true;\n        this.player.player.speedx=-5;\n      }\n      if (e.key==\"d\") {\n        if (dlock) {\n          return ;\n        }\n        dlock=true;\n        this.player.player.speedx=5;\n      }\n      if (e.key==\"w\") {\n        if (wlock) {\n          return ;\n        }\n        wlock=true;\n        this.player.player.speedy=-5;\n      }\n      if (e.key==\"s\") {\n        if (slock) {\n          return ;\n        }\n        slock=true;\n        this.player.player.speedy=5;\n      }\n\n\n    });\n    let alock=false;\n    let dlock=false;\n    let wlock=false;\n    let slock=false;\n    window.addEventListener('keyup',(e)=>{\n      if (e.key==\"a\") {\n        alock=false;\n        this.player.player.speedx=0;\n      }\n      if (e.key==\"d\") {\n        dlock=false;\n        this.player.player.speedx=0;\n      }\n      if (e.key==\"w\") {\n        wlock=false;\n        this.player.player.speedy=0;\n      }\n      if (e.key==\"s\") {\n        slock=false;\n        this.player.player.speedy=0;\n      }\n\n\n\n    });\n  }\n  init(user_info=\"\"){\n    this.stage = new createjs.Stage(this.canvas);\n    this.bg = new BackGround();\n    this.stage.addChild(this.bg);\n    this.player = new Player(this.stage,user_info.avatarUrl,'你',levels[this.select_level].player);\n    this.stage.addChild(this.player);\n    this.boss = new Boss(this.stage,levels[this.select_level].boss);\n    this.stage.addChild(this.boss);\n    this.gameinfo =new GameInfo();\n    this.stage.addChild(this.gameinfo);\n\n\n\n  }\n  \n  TimerHandel() {\n    this.frame++;\n    if(this.frame>999999999){\n      this.frame=0;\n    }\n    if (this.frame % 30 === 0) {\n      this.player.shoot();\n    }\n\n    this.bg.update();\n\n    this.player.update(true);\n\n    this.boss.update(true);\n    this.collisionDetection();\n    this.stage.update();\n    this.gameinfo.updateScore(this.score,this.defance);\n    window.requestAnimationFrame(\n      this.TimerHandel.bind(this),\n      this.canvas\n    )\n  }\n  isCollideWith(rectObj,pointObj) {\n    let spX = pointObj.x;\n    let spY = pointObj.y;\n    return !!(spX >= rectObj.x - rectObj.width / 2\n      && spX <= rectObj.x + rectObj.width / 2\n      && spY >= rectObj.y - rectObj.height / 2\n      && spY <= rectObj.y + rectObj.height / 2)\n  }\n  collisionDetection() {\n    let that = this;\n    let pp={x:this.player.player.x,y:this.player.player.y};\n    let br={x:this.boss.player.x,y:this.boss.player.y,width:this.boss.player.width,height:this.boss.player.height};\n    this.player.bullet.list.forEach((bu) => {\n      if ( this.isCollideWith(br,bu)&&!bu.isdie) {\n        bu.die();\n        this.score += 1;\n      }\n    });\n    this.boss.bullets.forEach((bu) => {\n      bu.list.forEach((b) => {\n        if ( this.isCollideWith(b,pp)&&!b.isdie) {\n          b.die();\n          this.defance += 1;\n        }\n      });\n    });\n  }\n}\n","import Bullet_Super from './bullet_super'\n\nconst PIp2 = Math.PI / 2;\nconst SHOOT_FRAME = 10\nconst SHOOT_SPEED = 4\nconst SHOOT_NUM = 30\nconst ENEMY_IMG_SRC = 'static/images/ball.png'\n\nconst ENEMY_WIDTH = 20\nconst ENEMY_HEIGHT = 20\nconst SCALE = 0.5\nconst SCALE_TO_DIE = 2\nconst DIEING_FRAME=40\nexport default class Bullet extends Bullet_Super {\n    constructor(cantiner,shoot_num=SHOOT_NUM) {\n        super(cantiner, SHOOT_FRAME,{\n            images: [ENEMY_IMG_SRC],\n            frames: Math.getArray(5).map((l) => {\n                return [\n                    20 * (l % 3),\n                    20 * Math.floor(l / 3),\n                    ENEMY_WIDTH,\n                    ENEMY_HEIGHT,\n                    0,\n                    ENEMY_WIDTH / 2,\n                    ENEMY_HEIGHT / 2\n                ];\n            }),\n            animations: Math.getArrayObject(5, (i) => `play${i + 1}`, (i) => [\n                i, i, `play${i + 1}`\n            ])\n        });\n        this.shoot_num=shoot_num;\n        this.ang_count = 0;\n        this.type = 1;\n    }\n    shoot(x, y, speed = SHOOT_SPEED, num = SHOOT_NUM, ang = 0) {\n        num=this.shoot_num||SHOOT_NUM;\n        ang = this.ang_count % 2 * 0.1 - 0.05;\n        this.ang_count++;\n        for (let i = 0; i < num; i++) {\n            this.createSprite(`play${this.type}`, {\n                x: x,\n                y: y,\n                dieing_frame:DIEING_FRAME,\n                scaleX: SCALE,\n                scaleY: SCALE,\n                width: ENEMY_WIDTH * SCALE,\n                height: ENEMY_HEIGHT * SCALE,\n                angel: 2 *i / num - 1 + 1 / num + ang,\n                speed: speed\n            }, {\n                scaleX: SCALE * SCALE_TO_DIE,\n                scaleY: SCALE * SCALE_TO_DIE\n            });\n\n        }\n        this.type = this.type >= 5\n            ? 1\n            : this.type + 1;\n    }\n    update(test) {\n        super.update((s) => {\n            s.y += Math.cos(s.angel * PIp2) * s.speed;\n            s.x += Math.sin(s.angel * PIp2) * s.speed;\n        }, (s) => {\n            s.alpha = (DIEING_FRAME - s.diecount) / DIEING_FRAME;\n            s.scaleX = (s.scaleX + 0.05);\n            s.scaleY = (s.scaleY + 0.05);\n        }, (s) => {\n            s.alpha = 1;\n            s.scaleX = SCALE;\n            s.scaleY = SCALE;\n        }, test);\n    }\n\n}\n","exports.f = Object.getOwnPropertySymbols;\n","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","import Bullet_Super from './bullet_super'\nconst PIp2 = Math.PI / 2;\n\nconst ENEMY_IMG_SRC = 'static/images/beam.png'\nconst SHOOT_FRAME = 60\nconst SHOOT_SPEED = 10\nconst SHOOT_NUM = 6\nconst ENEMY_WIDTH = 16\nconst ENEMY_HEIGHT = 256\nconst SCALE = 0.5\nconst READY = 30\nconst DIEING_FRAME=30\nexport default class Enemy extends Bullet_Super {\n    constructor(cantiner,shoot_num=SHOOT_NUM) {\n        super(cantiner, SHOOT_FRAME,{\n            images: [ENEMY_IMG_SRC],\n            frames: Math.getArray(16).map((l) => {\n                return [\n                    l * 16,\n                    0,\n                    ENEMY_WIDTH,\n                    ENEMY_HEIGHT,\n                    0,\n                    ENEMY_WIDTH / 2,\n                    ENEMY_HEIGHT / 2\n                ];\n            }),\n            animations: Math.getArrayObject(16, (i) => `b${i + 1}`, (i) => [\n                i, i, `b${i + 1}`\n            ])\n        });\n        this.shoot_num=shoot_num;\n        this.type = 1;\n    }\n    shoot(x, y, speed = SHOOT_SPEED, num = SHOOT_NUM) {\n        num=this.shoot_num||SHOOT_NUM;\n        let pp = {\n            x: window.main.player.player.x,\n            y: window.main.player.player.y\n        };\n        for (let i = 0; i < num; i++) {\n            let sx = x + Math.sin((2 * i / num - 1 + 1 / num) * PIp2) * 100;\n            let sy = y + Math.cos((2 * i / num - 1 + 1 / num) * PIp2) * 100;\n            this.createSprite(`b${this.type}`, {\n                rotation: 0,\n                alpha: 0,\n                dieing_frame:DIEING_FRAME,\n                x: sx,\n                y: sy,\n                scaleX: SCALE,\n                scaleY: SCALE,\n                width: ENEMY_WIDTH * SCALE,\n                height: ENEMY_HEIGHT * SCALE,\n                angel: Math.atan((sx - pp.x) / (pp.y - sy)),\n                speed: speed,\n                tx: (\n                    pp.y - sy > 0\n                    ? -1\n                    : 1),\n                ty: (\n                    pp.y - sy > 0\n                    ? 1\n                    : -1),\n                ready: READY\n            },{});\n        }\n\n        this.type = this.type >= 16\n            ? 1\n            : this.type + 1;\n    }\n\n    update(test) {\n        super.update((s) => {\n            if (s.ready) {\n                s.ready--;\n                s.alpha = 2 * (READY - s.ready) / READY;\n                s.rotation = s.angel / Math.PI * 180 * (READY - s.ready) / READY;\n                return;\n            }\n            s.y += s.ty * Math.cos(s.angel) * s.speed;\n            s.x += s.tx * Math.sin(s.angel) * s.speed;\n        }, (s) => {\n            s.alpha = (DIEING_FRAME - s.diecount)*2 / DIEING_FRAME;\n        }, (s) => {}, test);\n\n    }\n\n}\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","module.exports = true;\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","export default class Music {\n  constructor() {\n    this.bgmAudio = new Audio()\n    this.bgmAudio.volume = 0.5;\n    this.bgmAudio.loop = true\n    this.bgmAudio.src  = 'static/audio/night_of_nights.mp3'\n    this.playBgm();\n  }\n  playBgm() {\n    this.bgmAudio.play()\n  }\n}\n","\nimport Bullet from './bullet'\nimport Magic_DM from './magic_dm'\nimport Beam from './beam'\nconst screenWidth = 480\nconst screenHeight = 640\n\n// 玩家相关常量设置\nconst PLAYER_IMG_SRC = 'static/images/boss.png'\nconst PLAYER_WIDTH = 80\nconst PLAYER_HEIGHT = 110\n\nexport default class Boss extends createjs.Container {\n  constructor(cantiner,boss_num=[10,5,2]) {\n    super();\n    this.boss_num=boss_num;\n    this.cantiner = this;\n    this.bullets=[];\n    this.spriteSheetPlayer = new createjs.SpriteSheet({\n      images: [PLAYER_IMG_SRC],\n      frames: Math.getArray(8).map((l) => {\n          return [\n              80 * (l%4),\n              110 * Math.floor(l / 4),\n              PLAYER_WIDTH,\n              PLAYER_HEIGHT,\n              0,\n              PLAYER_WIDTH / 2,\n              PLAYER_HEIGHT / 2\n          ];\n      })\n\n      ,\n      animations: {\n        play: [0,3,\"play\",4/30],\n        shoot: [4,7,\"play\",8/30],\n      }\n    });\n    this.player = new createjs.Sprite(this.spriteSheetPlayer, \"play\");\n\n    this.player.y = 50;\n    this.player.speedx=0;\n    this.player.speedy = 0;\n    this.player.x = screenWidth / 2 ;\n    this.player.scaleX = 1;\n    this.player.scaleY = 1;\n    this.player.width = PLAYER_WIDTH*1;\n    this.player.height = PLAYER_HEIGHT*1;\n    this.cantiner.addChild(this.player);\n\n    this.bullets.push(new Beam(this.cantiner,this.boss_num[2]));\n    this.bullets.push(new Bullet(this.cantiner,this.boss_num[0]));\n    this.bullets.push(new Magic_DM(this.cantiner,this.boss_num[1]));\n\n  }\n  update(test){\n    this.player.x += this.player.speedx;\n    this.player.y += this.player.speedy;\n    this.bullets.forEach((b)=>{\n      if ((window.main.frame%b.shoot_frame===0)) {\n        b.shoot(this.player.x,this.player.y+30);\n        if (b instanceof Beam) {\n          this.player.gotoAndPlay('shoot');\n        }\n      }\n      b.update(test);\n    })\n  }\n}\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n"],"sourceRoot":""}